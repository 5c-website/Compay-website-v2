{"version":3,"file":"component---src-pages-impact-strapi-detail-jsx-808942626a3c40e0ba34.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/extend/index.js","webpack://gatsby-starter-default/./node_modules/estree-util-is-identifier-name/lib/index.js","webpack://gatsby-starter-default/./node_modules/hast-util-whitespace/lib/index.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/util/schema.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/util/merge.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/normalize.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/util/info.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/util/types.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/util/defined-info.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/util/create.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/aria.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/html.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/svg.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/xlink.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/xmlns.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/xml.js","webpack://gatsby-starter-default/./node_modules/property-information/index.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/find.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/hast-to-react.js","webpack://gatsby-starter-default/./node_modules/unist-util-position/lib/index.js","webpack://gatsby-starter-default/./node_modules/unist-util-stringify-position/lib/index.js","webpack://gatsby-starter-default/./node_modules/vfile-message/lib/index.js","webpack://gatsby-starter-default/./node_modules/hast-util-to-jsx-runtime/lib/index.js","webpack://gatsby-starter-default/./node_modules/comma-separated-tokens/index.js","webpack://gatsby-starter-default/./node_modules/space-separated-tokens/index.js","webpack://gatsby-starter-default/./node_modules/html-url-attributes/lib/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-string/lib/index.js","webpack://gatsby-starter-default/./node_modules/micromark-util-chunked/index.js","webpack://gatsby-starter-default/./node_modules/micromark-util-subtokenize/lib/splice-buffer.js","webpack://gatsby-starter-default/./node_modules/micromark-util-subtokenize/index.js","webpack://gatsby-starter-default/./node_modules/micromark-util-combine-extensions/index.js","webpack://gatsby-starter-default/./node_modules/micromark-util-character/index.js","webpack://gatsby-starter-default/./node_modules/micromark-factory-space/index.js","webpack://gatsby-starter-default/./node_modules/micromark/lib/initialize/content.js","webpack://gatsby-starter-default/./node_modules/micromark/lib/initialize/document.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/content.js","webpack://gatsby-starter-default/./node_modules/micromark/lib/initialize/flow.js","webpack://gatsby-starter-default/./node_modules/micromark/lib/initialize/text.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/list.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://gatsby-starter-default/./node_modules/micromark-factory-destination/index.js","webpack://gatsby-starter-default/./node_modules/micromark-factory-label/index.js","webpack://gatsby-starter-default/./node_modules/micromark-factory-title/index.js","webpack://gatsby-starter-default/./node_modules/micromark-factory-whitespace/index.js","webpack://gatsby-starter-default/./node_modules/micromark-util-normalize-identifier/index.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/definition.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://gatsby-starter-default/./node_modules/micromark-util-html-tag-name/index.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://gatsby-starter-default/./node_modules/decode-named-character-reference/index.dom.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://gatsby-starter-default/./node_modules/micromark-util-resolve-all/index.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/label-end.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://gatsby-starter-default/./node_modules/micromark-util-classify-character/index.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/attention.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/autolink.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/html-text.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/code-text.js","webpack://gatsby-starter-default/./node_modules/micromark/lib/constructs.js","webpack://gatsby-starter-default/./node_modules/micromark/lib/create-tokenizer.js","webpack://gatsby-starter-default/./node_modules/micromark/lib/preprocess.js","webpack://gatsby-starter-default/./node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://gatsby-starter-default/./node_modules/micromark-util-decode-string/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-from-markdown/lib/index.js","webpack://gatsby-starter-default/./node_modules/micromark/lib/postprocess.js","webpack://gatsby-starter-default/./node_modules/micromark/lib/parse.js","webpack://gatsby-starter-default/./node_modules/remark-parse/lib/index.js","webpack://gatsby-starter-default/./node_modules/@ungap/structured-clone/esm/types.js","webpack://gatsby-starter-default/./node_modules/@ungap/structured-clone/esm/deserialize.js","webpack://gatsby-starter-default/./node_modules/@ungap/structured-clone/esm/serialize.js","webpack://gatsby-starter-default/./node_modules/@ungap/structured-clone/esm/index.js","webpack://gatsby-starter-default/./node_modules/micromark-util-sanitize-uri/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/footer.js","webpack://gatsby-starter-default/./node_modules/unist-util-is/lib/index.js","webpack://gatsby-starter-default/./node_modules/unist-util-visit-parents/lib/index.js","webpack://gatsby-starter-default/./node_modules/unist-util-visit/lib/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/revert.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://gatsby-starter-default/./node_modules/trim-lines/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/table-row.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/state.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/index.js","webpack://gatsby-starter-default/./node_modules/remark-rehype/lib/index.js","webpack://gatsby-starter-default/./node_modules/bail/index.js","webpack://gatsby-starter-default/./node_modules/is-plain-obj/index.js","webpack://gatsby-starter-default/./node_modules/trough/lib/index.js","webpack://gatsby-starter-default/./node_modules/vfile/lib/minpath.browser.js","webpack://gatsby-starter-default/./node_modules/vfile/lib/minproc.browser.js","webpack://gatsby-starter-default/./node_modules/vfile/lib/minurl.shared.js","webpack://gatsby-starter-default/./node_modules/vfile/lib/minurl.browser.js","webpack://gatsby-starter-default/./node_modules/vfile/lib/index.js","webpack://gatsby-starter-default/./node_modules/unified/lib/callable-instance.js","webpack://gatsby-starter-default/./node_modules/unified/lib/index.js","webpack://gatsby-starter-default/./node_modules/react-markdown/lib/index.js","webpack://gatsby-starter-default/./node_modules/ccount/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-find-and-replace/lib/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-gfm-autolink-literal/lib/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-gfm-footnote/lib/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-gfm-strikethrough/lib/index.js","webpack://gatsby-starter-default/./node_modules/markdown-table/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/handle/break.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/handle/code.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/util/check-quote.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/util/encode-character-reference.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/util/encode-info.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/handle/html.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/handle/image.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/handle/link.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/util/check-rule.js","webpack://gatsby-starter-default/./node_modules/mdast-util-phrasing/lib/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/handle/strong.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/util/check-strong.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/handle/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/util/check-fence.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","webpack://gatsby-starter-default/./node_modules/longest-streak/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/handle/definition.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/handle/heading.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/handle/list.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/handle/root.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/handle/text.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","webpack://gatsby-starter-default/./node_modules/mdast-util-gfm-table/lib/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-gfm-task-list-item/lib/index.js","webpack://gatsby-starter-default/./node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","webpack://gatsby-starter-default/./node_modules/micromark-extension-gfm-footnote/lib/syntax.js","webpack://gatsby-starter-default/./node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","webpack://gatsby-starter-default/./node_modules/micromark-extension-gfm-table/lib/edit-map.js","webpack://gatsby-starter-default/./node_modules/micromark-extension-gfm-table/lib/infer.js","webpack://gatsby-starter-default/./node_modules/micromark-extension-gfm-table/lib/syntax.js","webpack://gatsby-starter-default/./node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","webpack://gatsby-starter-default/./node_modules/remark-gfm/lib/index.js","webpack://gatsby-starter-default/./node_modules/micromark-extension-gfm/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-gfm/lib/index.js","webpack://gatsby-starter-default/./src/pages/impact/strapi-detail.jsx","webpack://gatsby-starter-default/./node_modules/style-to-js/cjs/index.js","webpack://gatsby-starter-default/./node_modules/style-to-js/cjs/utilities.js","webpack://gatsby-starter-default/./node_modules/style-to-js/node_modules/inline-style-parser/index.js","webpack://gatsby-starter-default/./node_modules/style-to-js/node_modules/style-to-object/cjs/index.js","webpack://gatsby-starter-default/./public/img/ai-products/prodigi_three.png","webpack://gatsby-starter-default/./public/img/blog-info/blog_contact.png","webpack://gatsby-starter-default/./public/img/blog-info/blog_scan.png","webpack://gatsby-starter-default/./node_modules/clsx/dist/clsx.mjs","webpack://gatsby-starter-default/./node_modules/react-toastify/dist/react-toastify.esm.mjs"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @import {Schema as SchemaType, Space} from 'property-information'\n */\n\n/** @type {SchemaType} */\nexport class Schema {\n  /**\n   * @param {SchemaType['property']} property\n   *   Property.\n   * @param {SchemaType['normal']} normal\n   *   Normal.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Schema.\n   */\n  constructor(property, normal, space) {\n    this.normal = normal\n    this.property = property\n\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\nSchema.prototype.normal = {}\nSchema.prototype.property = {}\nSchema.prototype.space = undefined\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {ReadonlyArray<Schema>} definitions\n *   Definitions.\n * @param {Space | undefined} [space]\n *   Space.\n * @returns {Schema}\n *   Schema.\n */\nexport function merge(definitions, space) {\n  /** @type {Record<string, Info>} */\n  const property = {}\n  /** @type {Record<string, string>} */\n  const normal = {}\n\n  for (const definition of definitions) {\n    Object.assign(property, definition.property)\n    Object.assign(normal, definition.normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * Get the cleaned case insensitive form of an attribute or property.\n *\n * @param {string} value\n *   An attribute-like or property-like name.\n * @returns {string}\n *   Value that can be used to look up the properly cased property on a\n *   `Schema`.\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","/**\n * @import {Info as InfoType} from 'property-information'\n */\n\n/** @type {InfoType} */\nexport class Info {\n  /**\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute) {\n    this.attribute = attribute\n    this.property = property\n  }\n}\n\nInfo.prototype.attribute = ''\nInfo.prototype.booleanish = false\nInfo.prototype.boolean = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.defined = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.number = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.property = ''\nInfo.prototype.spaceSeparated = false\nInfo.prototype.space = undefined\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @import {Space} from 'property-information'\n */\n\nimport {Info} from './info.js'\nimport * as types from './types.js'\n\nconst checks = /** @type {ReadonlyArray<keyof typeof types>} */ (\n  Object.keys(types)\n)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @param {number | null | undefined} [mask]\n   *   Mask.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @template {keyof DefinedInfo} Key\n *   Key type.\n * @param {DefinedInfo} values\n *   Info.\n * @param {Key} key\n *   Key.\n * @param {DefinedInfo[Key]} value\n *   Value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\n/**\n * @typedef Definition\n *   Definition of a schema.\n * @property {Record<string, string> | undefined} [attributes]\n *   Normalzed names to special attribute case.\n * @property {ReadonlyArray<string> | undefined} [mustUseProperty]\n *   Normalized names that must be set as properties.\n * @property {Record<string, number | null>} properties\n *   Property names to their types.\n * @property {Space | undefined} [space]\n *   Space.\n * @property {Transform} transform\n *   Transform a property name.\n */\n\n/**\n * @callback Transform\n *   Transform.\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Attribute.\n */\n\nimport {normalize} from '../normalize.js'\nimport {DefinedInfo} from './defined-info.js'\nimport {Schema} from './schema.js'\n\n/**\n * @param {Definition} definition\n *   Definition.\n * @returns {Schema}\n *   Schema.\n */\nexport function create(definition) {\n  /** @type {Record<string, Info>} */\n  const properties = {}\n  /** @type {Record<string, string>} */\n  const normals = {}\n\n  for (const [property, value] of Object.entries(definition.properties)) {\n    const info = new DefinedInfo(\n      property,\n      definition.transform(definition.attributes || {}, property),\n      value,\n      definition.space\n    )\n\n    if (\n      definition.mustUseProperty &&\n      definition.mustUseProperty.includes(property)\n    ) {\n      info.mustUseProperty = true\n    }\n\n    properties[property] = info\n\n    normals[normalize(property)] = property\n    normals[normalize(info.attribute)] = property\n  }\n\n  return new Schema(properties, normals, definition.space)\n}\n","import {create} from './util/create.js'\nimport {booleanish, number, spaceSeparated} from './util/types.js'\n\nexport const aria = create({\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  },\n  transform(_, property) {\n    return property === 'role'\n      ? property\n      : 'aria-' + property.slice(4).toLowerCase()\n  }\n})\n","/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} attribute\n *   Attribute.\n * @returns {string}\n *   Transformed attribute.\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Transformed property.\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  booleanish,\n  boolean,\n  commaSeparated,\n  number,\n  overloadedBoolean,\n  spaceSeparated\n} from './util/types.js'\n\nexport const html = create({\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: overloadedBoolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  },\n  space: 'html',\n  transform: caseInsensitiveTransform\n})\n","import {caseSensitiveTransform} from './util/case-sensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  boolean,\n  commaOrSpaceSeparated,\n  commaSeparated,\n  number,\n  spaceSeparated\n} from './util/types.js'\n\nexport const svg = create({\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  },\n  space: 'svg',\n  transform: caseSensitiveTransform\n})\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  },\n  space: 'xlink',\n  transform(_, property) {\n    return 'xlink:' + property.slice(5).toLowerCase()\n  }\n})\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  properties: {xmlnsXLink: null, xmlns: null},\n  space: 'xmlns',\n  transform: caseInsensitiveTransform\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  properties: {xmlBase: null, xmlLang: null, xmlSpace: null},\n  space: 'xml',\n  transform(_, property) {\n    return 'xml:' + property.slice(3).toLowerCase()\n  }\n})\n","// Note: types exposed from `index.d.ts`.\nimport {merge} from './lib/util/merge.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\nimport {xlink} from './lib/xlink.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {xml} from './lib/xml.js'\n\nexport {hastToReact} from './lib/hast-to-react.js'\n\nexport const html = merge([aria, htmlBase, xlink, xmlns, xml], 'html')\n\nexport {find} from './lib/find.js'\nexport {normalize} from './lib/normalize.js'\n\nexport const svg = merge([aria, svgBase, xlink, xmlns, xml], 'svg')\n","/**\n * @import {Schema} from 'property-information'\n */\n\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\nimport {normalize} from './normalize.js'\n\nconst cap = /[A-Z]/g\nconst dash = /-[a-z]/g\nconst valid = /^data[-\\w.:]+$/i\n\n/**\n * Look up info on a property.\n *\n * In most cases the given `schema` contains info on the property.\n * All standard,\n * most legacy,\n * and some non-standard properties are supported.\n * For these cases,\n * the returned `Info` has hints about the value of the property.\n *\n * `name` can also be a valid data attribute or property,\n * in which case an `Info` object with the correctly cased `attribute` and\n * `property` is returned.\n *\n * `name` can be an unknown attribute,\n * in which case an `Info` object with `attribute` and `property` set to the\n * given name is returned.\n * It is not recommended to provide unsupported legacy or recently specced\n * properties.\n *\n *\n * @param {Schema} schema\n *   Schema;\n *   either the `html` or `svg` export.\n * @param {string} value\n *   An attribute-like or property-like name;\n *   it will be passed through `normalize` to hopefully find the correct info.\n * @returns {Info}\n *   Info.\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let property = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      property = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(property, value)\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Kebab.\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Camel.\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * Special cases for React (`Record<string, string>`).\n *\n * `hast` is close to `React` but differs in a couple of cases.\n * To get a React property from a hast property,\n * check if it is in `hastToReact`.\n * If it is, use the corresponding value;\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file = ''\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual = undefined\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected = undefined\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note = undefined\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url = undefined\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","/**\n * @import {Identifier, Literal, MemberExpression} from 'estree'\n * @import {Jsx, JsxDev, Options, Props} from 'hast-util-to-jsx-runtime'\n * @import {Element, Nodes, Parents, Root, Text} from 'hast'\n * @import {MdxFlowExpressionHast, MdxTextExpressionHast} from 'mdast-util-mdx-expression'\n * @import {MdxJsxFlowElementHast, MdxJsxTextElementHast} from 'mdast-util-mdx-jsx'\n * @import {MdxjsEsmHast} from 'mdast-util-mdxjs-esm'\n * @import {Position} from 'unist'\n * @import {Child, Create, Field, JsxElement, State, Style} from './types.js'\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToJs from 'style-to-js'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\n// To do: next major: `Object.hasOwn`.\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JsxElement}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpressionHast | MdxTextExpressionHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsmHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  try {\n    return styleToJs(value, {reactCompat: true})\n  } catch (error) {\n    if (state.ignoreInvalidStyle) {\n      return {}\n    }\n\n    const cause = /** @type {Error} */ (error)\n    const message = new VFileMessage('Cannot parse `style` attribute', {\n      ancestors: state.ancestors,\n      cause,\n      ruleId: 'style',\n      source: 'hast-util-to-jsx-runtime'\n    })\n    message.file = state.filePath || undefined\n    message.url = docs + '#cannot-parse-style-attribute'\n\n    throw message\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {string | number} */ (result.value)\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length;\n  let chunkStart = 0;\n  /** @type {Array<unknown>} */\n  let parameters;\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n  remove = remove > 0 ? remove : 0;\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters);\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove);\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters);\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items);\n    return list;\n  }\n  return items;\n}","/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push(...newElements)` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    return this.left.slice(start).concat(this.right.slice(this.right.length - stop + this.left.length).reverse());\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}","/**\n * @import {Chunk, Event, Token} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else if (otherEvent[1].type === \"linePrefix\" || otherEvent[1].type === \"listItemIndent\") {\n          // Move past.\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = {\n          ...events.get(lineIndex)[1].start\n        };\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n *   Events.\n * @param {number} eventIndex\n *   Index.\n * @returns {Record<string, number>}\n *   Gaps.\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  let tokenizer = token._tokenizer;\n  if (!tokenizer) {\n    tokenizer = context.parser[token.contentType](token.start);\n    if (token._contentTypeTextTrailing) {\n      tokenizer._contentTypeTextTrailing = true;\n    }\n  }\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { markdownSpace } from 'micromark-util-character';\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type);\n      return prefix(code);\n    }\n    return ok(code);\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code);\n      return prefix;\n    }\n    effects.exit(type);\n    return ok(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Initializer}\n *   Content.\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(this.parser.constructs.contentInitial, afterContentStartConstruct, paragraphInitial);\n  /** @type {Token} */\n  let previous;\n  return contentStart;\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, contentStart, \"linePrefix\");\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter(\"paragraph\");\n    return lineStart(code);\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter(\"chunkText\", {\n      contentType: \"text\",\n      previous\n    });\n    if (previous) {\n      previous.next = token;\n    }\n    previous = token;\n    return data(code);\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit(\"chunkText\");\n      effects.exit(\"paragraph\");\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      effects.exit(\"chunkText\");\n      return lineStart;\n    }\n\n    // Data.\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Construct,\n *   ContainerState,\n *   InitialConstruct,\n *   Initializer,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n *   Construct and its state.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n};\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeDocument(effects) {\n  const self = this;\n  /** @type {Array<StackItem>} */\n  const stack = [];\n  let continued = 0;\n  /** @type {TokenizeContext | undefined} */\n  let childFlow;\n  /** @type {Token | undefined} */\n  let childToken;\n  /** @type {number} */\n  let lineStartOffset;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued];\n      self.containerState = item[1];\n      return effects.attempt(item[0].continuation, documentContinue, checkNewContainers)(code);\n    }\n\n    // Done.\n    return checkNewContainers(code);\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++;\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined;\n      if (childFlow) {\n        closeFlow();\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          point = self.events[indexBeforeFlow][1].end;\n          break;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      let index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n      return checkNewContainers(code);\n    }\n    return start(code);\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code);\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code);\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack);\n    }\n\n    // Check if there is a new container.\n    self.containerState = {};\n    return effects.check(containerConstruct, thereIsANewContainer, thereIsNoNewContainer)(code);\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow();\n    exitContainers(continued);\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length;\n    lineStartOffset = self.now().offset;\n    return flowStart(code);\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {};\n    return effects.attempt(containerConstruct, containerContinue, flowStart)(code);\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++;\n    stack.push([self.currentConstruct, self.containerState]);\n    // Try another.\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow();\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    childFlow = childFlow || self.parser.flow(self.now());\n    effects.enter(\"chunkFlow\", {\n      _tokenizer: childFlow,\n      contentType: \"flow\",\n      previous: childToken\n    });\n    return flowContinue(code);\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit(\"chunkFlow\"), true);\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      writeToChild(effects.exit(\"chunkFlow\"));\n      // Get ready for the next line.\n      continued = 0;\n      self.interrupt = undefined;\n      return start;\n    }\n    effects.consume(code);\n    return flowContinue;\n  }\n\n  /**\n   * @param {Token} token\n   *   Token.\n   * @param {boolean | undefined} [endOfFile]\n   *   Whether the token is at the end of the file (default: `false`).\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function writeToChild(token, endOfFile) {\n    const stream = self.sliceStream(token);\n    if (endOfFile) stream.push(null);\n    token.previous = childToken;\n    if (childToken) childToken.next = token;\n    childToken = token;\n    childFlow.defineSkip(token.start);\n    childFlow.write(stream);\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length;\n      while (index--) {\n        if (\n        // The token starts before the line ending…\n        childFlow.events[index][1].start.offset < lineStartOffset && (\n        // …and either is not ended yet…\n        !childFlow.events[index][1].end ||\n        // …or ends after it.\n        childFlow.events[index][1].end.offset > lineStartOffset)) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return;\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {boolean | undefined} */\n      let seen;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end;\n            break;\n          }\n          seen = true;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n    }\n  }\n\n  /**\n   * @param {number} size\n   *   Size.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exitContainers(size) {\n    let index = stack.length;\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index];\n      self.containerState = entry[1];\n      entry[0].exit.call(self, effects);\n    }\n    stack.length = size;\n  }\n  function closeFlow() {\n    childFlow.write([null]);\n    childToken = undefined;\n    childFlow = undefined;\n    self.containerState._closeFlow = undefined;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n *   Tokenizer.\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(effects, effects.attempt(this.parser.constructs.document, ok, nok), \"linePrefix\", this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4);\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  partial: true,\n  tokenize: tokenizeBlankLine\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  resolve: resolveContent,\n  tokenize: tokenizeContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  partial: true,\n  tokenize: tokenizeContinuation\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport { blankLine, content } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeFlow(effects) {\n  const self = this;\n  const initial = effects.attempt(\n  // Try to parse a blank line.\n  blankLine, atBlankEnding,\n  // Try to parse initial flow (essentially, only code).\n  effects.attempt(this.parser.constructs.flowInitial, afterConstruct, factorySpace(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content, afterConstruct)), \"linePrefix\")));\n  return initial;\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEndingBlank\");\n    effects.consume(code);\n    effects.exit(\"lineEndingBlank\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n}","/**\n * @import {\n *   Code,\n *   InitialConstruct,\n *   Initializer,\n *   Resolver,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n};\nexport const string = initializeFactory('string');\nexport const text = initializeFactory('text');\n\n/**\n * @param {'string' | 'text'} field\n *   Field.\n * @returns {InitialConstruct}\n *   Construct.\n */\nfunction initializeFactory(field) {\n  return {\n    resolveAll: createResolver(field === 'text' ? resolveAllLineSuffixes : undefined),\n    tokenize: initializeText\n  };\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this;\n    const constructs = this.parser.constructs[field];\n    const text = effects.attempt(constructs, start, notText);\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code);\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code);\n        return;\n      }\n      effects.enter(\"data\");\n      effects.consume(code);\n      return data;\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit(\"data\");\n        return text(code);\n      }\n\n      // Data.\n      effects.consume(code);\n      return data;\n    }\n\n    /**\n     * @param {Code} code\n     *   Code.\n     * @returns {boolean}\n     *   Whether the code is a break.\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true;\n      }\n      const list = constructs[code];\n      let index = -1;\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index];\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n *   Resolver.\n * @returns {Resolver}\n *   Resolver.\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText;\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1;\n    /** @type {number | undefined} */\n    let enter;\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === \"data\") {\n          enter = index;\n          index++;\n        }\n      } else if (!events[index] || events[index][1].type !== \"data\") {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end;\n          events.splice(enter + 2, index - enter - 2);\n          index = enter + 2;\n        }\n        enter = undefined;\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events;\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0; // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if ((eventIndex === events.length || events[eventIndex][1].type === \"lineEnding\") && events[eventIndex - 1][1].type === \"data\") {\n      const data = events[eventIndex - 1][1];\n      const chunks = context.sliceStream(data);\n      let index = chunks.length;\n      let bufferIndex = -1;\n      let size = 0;\n      /** @type {boolean | undefined} */\n      let tabs;\n      while (index--) {\n        const chunk = chunks[index];\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length;\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++;\n            bufferIndex--;\n          }\n          if (bufferIndex) break;\n          bufferIndex = -1;\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true;\n          size++;\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++;\n          break;\n        }\n      }\n\n      // Allow final trailing whitespace.\n      if (context._contentTypeTextTrailing && eventIndex === events.length) {\n        size = 0;\n      }\n      if (size) {\n        const token = {\n          type: eventIndex === events.length || tabs || size < 2 ? \"lineSuffix\" : \"hardBreakTrailing\",\n          start: {\n            _bufferIndex: index ? bufferIndex : data.start._bufferIndex + bufferIndex,\n            _index: data.start._index + index,\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size\n          },\n          end: {\n            ...data.end\n          }\n        };\n        data.end = {\n          ...token.start\n        };\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token);\n        } else {\n          events.splice(eventIndex, 0, ['enter', token, context], ['exit', token, context]);\n          eventIndex += 2;\n        }\n      }\n      eventIndex++;\n    }\n  }\n  return events;\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd,\n  name: 'list',\n  tokenize: tokenizeListStart\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  partial: true,\n  tokenize: tokenizeListItemPrefixWhitespace\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  partial: true,\n  tokenize: tokenizeIndent\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Exiter}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit,\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  const limit = max || Number.POSITIVE_INFINITY;\n  let balance = 0;\n  return start;\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return enclosedBefore;\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return raw(code);\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return enclosed(code);\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      return enclosedBefore(code);\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? enclosedEscape : enclosed;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code);\n      return enclosed;\n    }\n    return enclosed(code);\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (!balance && (code === null || code === 41 || markdownLineEndingOrSpace(code))) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code);\n      balance++;\n      return raw;\n    }\n    if (code === 41) {\n      effects.consume(code);\n      balance--;\n      return raw;\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? rawEscape : raw;\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code);\n      return raw;\n    }\n    return raw(code);\n  }\n}","/**\n * @import {\n *   Effects,\n *   State,\n *   TokenizeContext,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this;\n  let size = 0;\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type);\n    effects.enter(markerType);\n    effects.consume(code);\n    effects.exit(markerType);\n    effects.enter(stringType);\n    return atBreak;\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (size > 999 || code === null || code === 91 || code === 93 && !seen ||\n    // To do: remove in the future once we’ve switched from\n    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n    // which doesn’t need this.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    code === 94 && !size && '_hiddenFootnoteSupport' in self.parser.constructs) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit(stringType);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return atBreak;\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return labelInside(code);\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (code === null || code === 91 || code === 93 || markdownLineEnding(code) || size++ > 999) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    if (!seen) seen = !markdownSpace(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Effects,\n *   State,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      marker = code === 40 ? 41 : code;\n      return begin;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    return atBreak(code);\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType);\n      return begin(marker);\n    }\n    if (code === null) {\n      return nok(code);\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return factorySpace(effects, atBreak, \"linePrefix\");\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return inside(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? escape : inside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code);\n      return inside;\n    }\n    return inside(code);\n  }\n}","/**\n * @import {Effects, State} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      seen = true;\n      return start;\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, start, seen ? \"linePrefix\" : \"lineSuffix\")(code);\n    }\n    return ok(code);\n  }\n}","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return value\n  // Collapse markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, \" \")\n  // Trim.\n  .replace(/^ | $/g, '')\n  // Some characters are considered “uppercase”, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no method is uppercase.\n  .toLowerCase().toUpperCase();\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  partial: true,\n  tokenize: tokenizeTitleBefore\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  partial: true,\n  tokenize: tokenizeFurtherStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  resolve: resolveHeadingAtx,\n  tokenize: tokenizeHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  resolveTo: resolveToSetextUnderline,\n  tokenize: tokenizeSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: {\n      ...events[content][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = {\n      ...events[definition][1].end\n    };\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  concrete: true,\n  name: 'htmlFlow',\n  resolveTo: resolveToHtmlFlow,\n  tokenize: tokenizeHtmlFlow\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  partial: true,\n  tokenize: tokenizeBlankLineBefore\n};\nconst nonLazyContinuationStart = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuationStart\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      // Always the case.\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuation\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  concrete: true,\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    partial: true,\n    tokenize: tokenizeCloseStart\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/// <reference lib=\"dom\" />\n\n/* global document */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string | false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const character = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  if (\n    // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n    // yield `null`.\n    character.charCodeAt(character.length - 1) === 59 /* `;` */ &&\n    value !== 'semi'\n  ) {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return character === characterReference ? false : character\n}\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}","/**\n * @import {Event, Resolver, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {ReadonlyArray<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @import {\n *   Construct,\n *   Event,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  resolveAll: resolveAllLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  tokenize: tokenizeLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  /** @type {Array<Event>} */\n  const newEvents = [];\n  while (++index < events.length) {\n    const token = events[index][1];\n    newEvents.push(events[index]);\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      const offset = token.type === \"labelImage\" ? 4 : 2;\n      token.type = \"data\";\n      index += offset;\n    }\n  }\n\n  // If the events are equal, we don't have to copy newEvents to events\n  if (events.length !== newEvents.length) {\n    splice(events, 0, events.length, newEvents);\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n  const label = {\n    type: \"label\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[close][1].end\n    }\n  };\n  const text = {\n    type: \"labelText\",\n    start: {\n      ...events[open + offset + 2][1].end\n    },\n    end: {\n      ...events[close - 2][1].start\n    }\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartImage\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Event,\n *   Point,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  resolveAll: resolveAllAttention,\n  tokenize: tokenizeAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = {\n            ...events[open][1].end\n          };\n          const end = {\n            ...events[index][1].start\n          };\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: {\n              ...events[open][1].end\n            }\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: {\n              ...events[index][1].start\n            },\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: {\n              ...events[open][1].end\n            },\n            end: {\n              ...events[index][1].start\n            }\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: {\n              ...openingSequence.start\n            },\n            end: {\n              ...closingSequence.end\n            }\n          };\n          events[open][1].end = {\n            ...openingSequence.start\n          };\n          events[index][1].start = {\n            ...closingSequence.end\n          };\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n *   Point.\n * @param {number} offset\n *   Amount to move.\n * @returns {undefined}\n *   Nothing.\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartLink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Previous,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  previous,\n  resolve: resolveCodeText,\n  tokenize: tokenizeCodeText\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}","/**\n * @import {Extension} from 'micromark-util-types'\n */\n\nimport { attention, autolink, blockQuote, characterEscape, characterReference, codeFenced, codeIndented, codeText, definition, hardBreakEscape, headingAtx, htmlFlow, htmlText, labelEnd, labelStartImage, labelStartLink, lineEnding, list, setextUnderline, thematicBreak } from 'micromark-core-commonmark';\nimport { resolver as resolveText } from './initialize/text.js';\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n};\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n};\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n};\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n};\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n};\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n};\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n};\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n};\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n};","/**\n * @import {\n *   Chunk,\n *   Code,\n *   ConstructRecord,\n *   Construct,\n *   Effects,\n *   InitialConstruct,\n *   ParseContext,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @callback Restore\n *   Restore the state.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef Info\n *   Info.\n * @property {Restore} restore\n *   Restore.\n * @property {number} from\n *   From.\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n *   Construct.\n * @param {Info} info\n *   Info.\n * @returns {undefined}\n *   Nothing.\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n *   Parser.\n * @param {InitialConstruct} initialize\n *   Construct.\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n *   Point (optional).\n * @returns {TokenizeContext}\n *   Context.\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = {\n    _bufferIndex: -1,\n    _index: 0,\n    line: from && from.line || 1,\n    column: from && from.column || 1,\n    offset: from && from.offset || 0\n  };\n  /** @type {Record<string, number>} */\n  const columnStart = {};\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = [];\n  /** @type {Array<Chunk>} */\n  let chunks = [];\n  /** @type {Array<Token>} */\n  let stack = [];\n  /** @type {boolean | undefined} */\n  let consumed = true;\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    consume,\n    enter,\n    exit,\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  };\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    code: null,\n    containerState: {},\n    defineSkip,\n    events: [],\n    now,\n    parser,\n    previous: null,\n    sliceSerialize,\n    sliceStream,\n    write\n  };\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects);\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode;\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize);\n  }\n  return context;\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice);\n    main();\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return [];\n    }\n    addResult(initialize, 0);\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context);\n    return context.events;\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs);\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token);\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    } = point;\n    return {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    };\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column;\n    accountForPotentialSkip();\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex;\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index];\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index;\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0;\n        }\n        while (point._index === chunkIndex && point._bufferIndex < chunk.length) {\n          go(chunk.charCodeAt(point._bufferIndex));\n        }\n      } else {\n        go(chunk);\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   *   Code.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function go(code) {\n    consumed = undefined;\n    expectedCode = code;\n    state = state(code);\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++;\n      point.column = 1;\n      point.offset += code === -3 ? 2 : 1;\n      accountForPotentialSkip();\n    } else if (code !== -1) {\n      point.column++;\n      point.offset++;\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++;\n    } else {\n      point._bufferIndex++;\n\n      // At end of string chunk.\n      if (point._bufferIndex ===\n      // Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      /** @type {string} */\n      chunks[point._index].length) {\n        point._bufferIndex = -1;\n        point._index++;\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code;\n\n    // Mark as consumed.\n    consumed = true;\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {};\n    token.type = type;\n    token.start = now();\n    context.events.push(['enter', token, context]);\n    stack.push(token);\n    return token;\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop();\n    token.end = now();\n    context.events.push(['exit', token, context]);\n    return token;\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from);\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore();\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   *   Callback.\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   *   Fields.\n   */\n  function constructFactory(onreturn, fields) {\n    return hook;\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | ConstructRecord | Construct} constructs\n     *   Constructs.\n     * @param {State} returnState\n     *   State.\n     * @param {State | undefined} [bogusState]\n     *   State.\n     * @returns {State}\n     *   State.\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {ReadonlyArray<Construct>} */\n      let listOfConstructs;\n      /** @type {number} */\n      let constructIndex;\n      /** @type {Construct} */\n      let currentConstruct;\n      /** @type {Info} */\n      let info;\n      return Array.isArray(constructs) ? /* c8 ignore next 1 */\n      handleListOfConstructs(constructs) : 'tokenize' in constructs ?\n      // Looks like a construct.\n      handleListOfConstructs([(/** @type {Construct} */constructs)]) : handleMapOfConstructs(constructs);\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleMapOfConstructs(map) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          const left = code !== null && map[code];\n          const all = code !== null && map.null;\n          const list = [\n          // To do: add more extension tests.\n          /* c8 ignore next 2 */\n          ...(Array.isArray(left) ? left : left ? [left] : []), ...(Array.isArray(all) ? all : all ? [all] : [])];\n          return handleListOfConstructs(list)(code);\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ReadonlyArray<Construct>} list\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list;\n        constructIndex = 0;\n        if (list.length === 0) {\n          return bogusState;\n        }\n        return handleConstruct(list[constructIndex]);\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       *   Construct.\n       * @returns {State}\n       *   State.\n       */\n      function handleConstruct(construct) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store();\n          currentConstruct = construct;\n          if (!construct.partial) {\n            context.currentConstruct = construct;\n          }\n\n          // Always populated by defaults.\n\n          if (construct.name && context.parser.constructs.disable.null.includes(construct.name)) {\n            return nok(code);\n          }\n          return construct.tokenize.call(\n          // If we do have fields, create an object w/ `context` as its\n          // prototype.\n          // This allows a “live binding”, which is needed for `interrupt`.\n          fields ? Object.assign(Object.create(context), fields) : context, effects, ok, nok)(code);\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true;\n        onreturn(currentConstruct, info);\n        return returnState;\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true;\n        info.restore();\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex]);\n        }\n        return bogusState;\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   *   Construct.\n   * @param {number} from\n   *   From.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct);\n    }\n    if (construct.resolve) {\n      splice(context.events, from, context.events.length - from, construct.resolve(context.events.slice(from), context));\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context);\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   *   Info.\n   */\n  function store() {\n    const startPoint = now();\n    const startPrevious = context.previous;\n    const startCurrentConstruct = context.currentConstruct;\n    const startEventsIndex = context.events.length;\n    const startStack = Array.from(stack);\n    return {\n      from: startEventsIndex,\n      restore\n    };\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function restore() {\n      point = startPoint;\n      context.previous = startPrevious;\n      context.currentConstruct = startCurrentConstruct;\n      context.events.length = startEventsIndex;\n      stack = startStack;\n      accountForPotentialSkip();\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line];\n      point.offset += columnStart[point.line] - 1;\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {Pick<Token, 'end' | 'start'>} token\n *   Token.\n * @returns {Array<Chunk>}\n *   Chunks.\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index;\n  const startBufferIndex = token.start._bufferIndex;\n  const endIndex = token.end._index;\n  const endBufferIndex = token.end._bufferIndex;\n  /** @type {Array<Chunk>} */\n  let view;\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)];\n  } else {\n    view = chunks.slice(startIndex, endIndex);\n    if (startBufferIndex > -1) {\n      const head = view[0];\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex);\n        /* c8 ignore next 4 -- used to be used, no longer */\n      } else {\n        view.shift();\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex));\n    }\n  }\n  return view;\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {boolean | undefined} [expandTabs=false]\n *   Whether to expand tabs (default: `false`).\n * @returns {string}\n *   Result.\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1;\n  /** @type {Array<string>} */\n  const result = [];\n  /** @type {boolean | undefined} */\n  let atTab;\n  while (++index < chunks.length) {\n    const chunk = chunks[index];\n    /** @type {string} */\n    let value;\n    if (typeof chunk === 'string') {\n      value = chunk;\n    } else switch (chunk) {\n      case -5:\n        {\n          value = \"\\r\";\n          break;\n        }\n      case -4:\n        {\n          value = \"\\n\";\n          break;\n        }\n      case -3:\n        {\n          value = \"\\r\" + \"\\n\";\n          break;\n        }\n      case -2:\n        {\n          value = expandTabs ? \" \" : \"\\t\";\n          break;\n        }\n      case -1:\n        {\n          if (!expandTabs && atTab) continue;\n          value = \" \";\n          break;\n        }\n      default:\n        {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk);\n        }\n    }\n    atTab = chunk === -2;\n    result.push(value);\n  }\n  return result.join('');\n}","/**\n * @import {Chunk, Code, Encoding, Value} from 'micromark-util-types'\n */\n\n/**\n * @callback Preprocessor\n *   Preprocess a value.\n * @param {Value} value\n *   Value.\n * @param {Encoding | null | undefined} [encoding]\n *   Encoding when `value` is a typed array (optional).\n * @param {boolean | null | undefined} [end=false]\n *   Whether this is the last chunk (default: `false`).\n * @returns {Array<Chunk>}\n *   Chunks.\n */\n\nconst search = /[\\0\\t\\n\\r]/g;\n\n/**\n * @returns {Preprocessor}\n *   Preprocess a value.\n */\nexport function preprocess() {\n  let column = 1;\n  let buffer = '';\n  /** @type {boolean | undefined} */\n  let start = true;\n  /** @type {boolean | undefined} */\n  let atCarriageReturn;\n  return preprocessor;\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = [];\n    /** @type {RegExpMatchArray | null} */\n    let match;\n    /** @type {number} */\n    let next;\n    /** @type {number} */\n    let startPosition;\n    /** @type {number} */\n    let endPosition;\n    /** @type {Code} */\n    let code;\n    value = buffer + (typeof value === 'string' ? value.toString() : new TextDecoder(encoding || undefined).decode(value));\n    startPosition = 0;\n    buffer = '';\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++;\n      }\n      start = undefined;\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition;\n      match = search.exec(value);\n      endPosition = match && match.index !== undefined ? match.index : value.length;\n      code = value.charCodeAt(endPosition);\n      if (!match) {\n        buffer = value.slice(startPosition);\n        break;\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3);\n        atCarriageReturn = undefined;\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5);\n          atCarriageReturn = undefined;\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition));\n          column += endPosition - startPosition;\n        }\n        switch (code) {\n          case 0:\n            {\n              chunks.push(65533);\n              column++;\n              break;\n            }\n          case 9:\n            {\n              next = Math.ceil(column / 4) * 4;\n              chunks.push(-2);\n              while (column++ < next) chunks.push(-1);\n              break;\n            }\n          case 10:\n            {\n              chunks.push(-4);\n              column = 1;\n              break;\n            }\n          default:\n            {\n              atCarriageReturn = true;\n              column = 1;\n            }\n        }\n      }\n      startPosition = endPosition + 1;\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5);\n      if (buffer) chunks.push(buffer);\n      chunks.push(null);\n    }\n    return chunks;\n  }\n}","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nconst characterEscapeOrReference = /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi;\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode);\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @param {string} $1\n *   Character escape.\n * @param {string} $2\n *   Character reference.\n * @returns {string}\n *   Decoded value\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1;\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0);\n  if (head === 35) {\n    const head = $2.charCodeAt(1);\n    const hex = head === 120 || head === 88;\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10);\n  }\n  return decodeNamedCharacterReference($2) || $0;\n}","/**\n * @import {\n *   Break,\n *   Blockquote,\n *   Code,\n *   Definition,\n *   Emphasis,\n *   Heading,\n *   Html,\n *   Image,\n *   InlineCode,\n *   Link,\n *   ListItem,\n *   List,\n *   Nodes,\n *   Paragraph,\n *   PhrasingContent,\n *   ReferenceType,\n *   Root,\n *   Strong,\n *   Text,\n *   ThematicBreak\n * } from 'mdast'\n * @import {\n *   Encoding,\n *   Event,\n *   Token,\n *   Value\n * } from 'micromark-util-types'\n * @import {Point} from 'unist'\n * @import {\n *   CompileContext,\n *   CompileData,\n *   Config,\n *   Extension,\n *   Handle,\n *   OnEnterError,\n *   Options\n * } from './types.js'\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['buffer']}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @type {CompileContext['enter']}\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler || undefined]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['exit']}\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @type {CompileContext['resume']}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\nimport { subtokenize } from 'micromark-util-subtokenize';\n\n/**\n * @param {Array<Event>} events\n *   Events.\n * @returns {Array<Event>}\n *   Events.\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events;\n}","/**\n * @import {\n *   Create,\n *   FullNormalizedExtension,\n *   InitialConstruct,\n *   ParseContext,\n *   ParseOptions\n * } from 'micromark-util-types'\n */\n\nimport { combineExtensions } from 'micromark-util-combine-extensions';\nimport { content } from './initialize/content.js';\nimport { document } from './initialize/document.js';\nimport { flow } from './initialize/flow.js';\nimport { string, text } from './initialize/text.js';\nimport * as defaultConstructs from './constructs.js';\nimport { createTokenizer } from './create-tokenizer.js';\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ParseContext}\n *   Parser.\n */\nexport function parse(options) {\n  const settings = options || {};\n  const constructs = /** @type {FullNormalizedExtension} */\n  combineExtensions([defaultConstructs, ...(settings.extensions || [])]);\n\n  /** @type {ParseContext} */\n  const parser = {\n    constructs,\n    content: create(content),\n    defined: [],\n    document: create(document),\n    flow: create(flow),\n    lazy: {},\n    string: create(string),\n    text: create(text)\n  };\n  return parser;\n\n  /**\n   * @param {InitialConstruct} initial\n   *   Construct to start with.\n   * @returns {Create}\n   *   Create a tokenizer.\n   */\n  function create(initial) {\n    return creator;\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from);\n    }\n  }\n}","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n      case 'ArrayBuffer':\n        return as(new Uint8Array(value).buffer, value);\n      case 'DataView': {\n        const { buffer } = new Uint8Array(value);\n        return as(new DataView(buffer), value);\n      }\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n    case 'DataView':\n      return [ARRAY, asString];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type) {\n          let spread = value;\n          if (type === 'DataView') {\n            spread = new Uint8Array(value.buffer);\n          }\n          else if (type === 'ArrayBuffer') {\n            spread = new Uint8Array(value);\n          }\n          return as([type, [...spread]], value);\n        }\n\n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","import { asciiAlphanumeric } from 'micromark-util-character';\nimport { encode } from 'micromark-util-encode';\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''));\n  if (!protocol) {\n    return value;\n  }\n  const colon = value.indexOf(':');\n  const questionMark = value.indexOf('?');\n  const numberSign = value.indexOf('#');\n  const slash = value.indexOf('/');\n  if (\n  // If there is no protocol, it’s relative.\n  colon < 0 ||\n  // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n  slash > -1 && colon > slash || questionMark > -1 && colon > questionMark || numberSign > -1 && colon > numberSign ||\n  // It is a protocol, it should be allowed.\n  protocol.test(value.slice(0, colon))) {\n    return value;\n  }\n  return '';\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = [];\n  let index = -1;\n  let start = 0;\n  let skip = 0;\n  while (++index < value.length) {\n    const code = value.charCodeAt(index);\n    /** @type {string} */\n    let replace = '';\n\n    // A correct percent encoded value.\n    if (code === 37 && asciiAlphanumeric(value.charCodeAt(index + 1)) && asciiAlphanumeric(value.charCodeAt(index + 2))) {\n      skip = 2;\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code);\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1);\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next);\n        skip = 1;\n      }\n      // Lone surrogate.\n      else {\n        replace = \"\\uFFFD\";\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code);\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace));\n      start = index + skip + 1;\n      replace = '';\n    }\n    if (skip) {\n      index += skip;\n      skip = 0;\n    }\n  }\n  return result.join('') + value.slice(start);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * * if a processor is given,\n *   runs the (rehype) plugins used on it with a hast tree,\n *   then discards the result (*bridge mode*)\n * * otherwise,\n *   returns a hast tree,\n *   the plugins used after `remarkRehype` are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**:\n * > It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * * `rehype-stringify` also has an option `allowDangerousHtml` which will\n *   output the raw HTML.\n *   This is typically discouraged as noted by the option name but is useful if\n *   you completely trust authors\n * * `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *   into standard hast nodes (`element`, `text`, etc);\n *   this is a heavy task as it needs a full HTML parser,\n *   but it is the only way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark,\n * which we follow by default.\n * They are supported by GitHub,\n * so footnotes can be enabled in markdown with `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes,\n * which is hidden for sighted users but shown to assistive technology.\n * When your page is not in English,\n * you must define translated values.\n *\n * Back references use ARIA attributes,\n * but the section label itself uses a heading that is hidden with an\n * `sr-only` class.\n * To show it to sighted users,\n * define different attributes in `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem,\n * as it links footnote calls to footnote definitions on the page through `id`\n * attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * * when the node has a `value`\n *   (and doesn’t have `data.hName`, `data.hProperties`, or `data.hChildren`,\n *   see later),\n *   create a hast `text` node\n * * otherwise,\n *   create a `<div>` element (which could be changed with `data.hName`),\n *   with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @overload\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge | TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given,\n *   configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","/**\n * @import {Element, Nodes, Parents, Root} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {ComponentType, JSX, ReactElement, ReactNode} from 'react'\n * @import {Options as RemarkRehypeOptions} from 'remark-rehype'\n * @import {BuildVisitor} from 'unist-util-visit'\n * @import {PluggableList, Processor} from 'unified'\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n */\n\n/**\n * @typedef ExtraProps\n *   Extra fields we pass.\n * @property {Element | undefined} [node]\n *   passed when `passNode` is on.\n */\n\n/**\n * @typedef {{\n *   [Key in keyof JSX.IntrinsicElements]?: ComponentType<JSX.IntrinsicElements[Key] & ExtraProps> | keyof JSX.IntrinsicElements\n * }} Components\n *   Map tag names to components.\n */\n\n/**\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n */\n\n/**\n * @typedef HooksOptionsOnly\n *   Configuration specifically for {@linkcode MarkdownHooks}.\n * @property {ReactNode | null | undefined} [fallback]\n *   Content to render while the processor processing the markdown (optional).\n */\n\n/**\n * @typedef {Options & HooksOptionsOnly} HooksOptions\n *   Configuration for {@linkcode MarkdownHooks};\n *   extends the regular {@linkcode Options} with a `fallback` prop.\n */\n\n/**\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport {useEffect, useState} from 'react'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {from: 'className', id: 'remove-classname'},\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * This is a synchronous component.\n * When using async plugins,\n * see {@linkcode MarkdownAsync} or {@linkcode MarkdownHooks}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nexport function Markdown(options) {\n  const processor = createProcessor(options)\n  const file = createFile(options)\n  return post(processor.runSync(processor.parse(file), file), options)\n}\n\n/**\n * Component to render markdown with support for async plugins\n * through async/await.\n *\n * Components returning promises are supported on the server.\n * For async support on the client,\n * see {@linkcode MarkdownHooks}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {Promise<ReactElement>}\n *   Promise to a React element.\n */\nexport async function MarkdownAsync(options) {\n  const processor = createProcessor(options)\n  const file = createFile(options)\n  const tree = await processor.run(processor.parse(file), file)\n  return post(tree, options)\n}\n\n/**\n * Component to render markdown with support for async plugins through hooks.\n *\n * This uses `useEffect` and `useState` hooks.\n * Hooks run on the client and do not immediately render something.\n * For async support on the server,\n * see {@linkcode MarkdownAsync}.\n *\n * @param {Readonly<HooksOptions>} options\n *   Props.\n * @returns {ReactNode}\n *   React node.\n */\nexport function MarkdownHooks(options) {\n  const processor = createProcessor(options)\n  const [error, setError] = useState(\n    /** @type {Error | undefined} */ (undefined)\n  )\n  const [tree, setTree] = useState(/** @type {Root | undefined} */ (undefined))\n\n  useEffect(\n    function () {\n      let cancelled = false\n      const file = createFile(options)\n\n      processor.run(processor.parse(file), file, function (error, tree) {\n        if (!cancelled) {\n          setError(error)\n          setTree(tree)\n        }\n      })\n\n      /**\n       * @returns {undefined}\n       *   Nothing.\n       */\n      return function () {\n        cancelled = true\n      }\n    },\n    [\n      options.children,\n      options.rehypePlugins,\n      options.remarkPlugins,\n      options.remarkRehypeOptions\n    ]\n  )\n\n  if (error) throw error\n\n  return tree ? post(tree, options) : options.fallback\n}\n\n/**\n * Set up the `unified` processor.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {Processor<MdastRoot, MdastRoot, Root, undefined, undefined>}\n *   Result.\n */\nfunction createProcessor(options) {\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  return processor\n}\n\n/**\n * Set up the virtual file.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {VFile}\n *   Result.\n */\nfunction createFile(options) {\n  const children = options.children || ''\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  return file\n}\n\n/**\n * Process the result from unified some more.\n *\n * @param {Nodes} tree\n *   Tree.\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nfunction post(tree, options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  visit(tree, transform)\n\n  return toJsxRuntime(tree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {BuildVisitor<Root>} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n          ? disallowedElements.includes(node.tagName)\n          : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon === -1 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash !== -1 && colon > slash) ||\n    (questionMark !== -1 && colon > questionMark) ||\n    (numberSign !== -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @import {Nodes, Parents, PhrasingContent, Root, Text} from 'mdast'\n * @import {BuildVisitor, Test, VisitorResult} from 'unist-util-visit-parents'\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @import {RegExpMatchObject, ReplaceFunction} from 'mdast-util-find-and-replace'\n * @import {CompileContext, Extension as FromMarkdownExtension, Handle as FromMarkdownHandle, Transform as FromMarkdownTransform} from 'mdast-util-from-markdown'\n * @import {ConstructName, Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n * @import {Link, PhrasingContent} from 'mdast'\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/gu, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    // If it’s an email, the previous character should not be a slash.\n    (!email || code !== 47)\n  )\n}\n","/**\n * @import {\n *   CompileContext,\n *   Extension as FromMarkdownExtension,\n *   Handle as FromMarkdownHandle\n * } from 'mdast-util-from-markdown'\n * @import {ToMarkdownOptions} from 'mdast-util-gfm-footnote'\n * @import {\n *   Handle as ToMarkdownHandle,\n *   Map,\n *   Options as ToMarkdownExtension\n * } from 'mdast-util-to-markdown'\n * @import {FootnoteDefinition, FootnoteReference} from 'mdast'\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {after: ']', before: value})\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteCallString: enterFootnoteCallString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: enterFootnoteDefinition\n    },\n    exit: {\n      gfmFootnoteCallString: exitFootnoteCallString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: exitFootnoteDefinition\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown(options) {\n  // To do: next major: change default.\n  let firstLineBlank = false\n\n  if (options && options.firstLineBlank) {\n    firstLineBlank = true\n  }\n\n  return {\n    handlers: {footnoteDefinition, footnoteReference},\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['label', 'phrasing', 'reference']}]\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, state, info) {\n    const tracker = state.createTracker(info)\n    let value = tracker.move('[^')\n    const exit = state.enter('footnoteDefinition')\n    const subexit = state.enter('label')\n    value += tracker.move(\n      state.safe(state.associationId(node), {before: value, after: ']'})\n    )\n    subexit()\n\n    value += tracker.move(']:')\n\n    if (node.children && node.children.length > 0) {\n      tracker.shift(4)\n\n      value += tracker.move(\n        (firstLineBlank ? '\\n' : ' ') +\n          state.indentLines(\n            state.containerFlow(node, tracker.current()),\n            firstLineBlank ? mapAll : mapExceptFirst\n          )\n      )\n    }\n\n    exit()\n\n    return value\n  }\n}\n\n/** @type {Map} */\nfunction mapExceptFirst(line, index, blank) {\n  return index === 0 ? line : mapAll(line, index, blank)\n}\n\n/** @type {Map} */\nfunction mapAll(line, index, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","// To do: next major: remove.\n/**\n * @typedef {Options} MarkdownTableOptions\n *   Configuration.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [alignDelimiters=true]\n *   Whether to align the delimiters (default: `true`);\n *   they are aligned by default:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {ReadonlyArray<string | null | undefined> | string | null | undefined} [align]\n *   How to align columns (default: `''`);\n *   one style for all columns or styles for their respective columns;\n *   each style is either `'l'` (left), `'r'` (right), or `'c'` (center);\n *   other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left;\n *   *only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean | null | undefined} [delimiterEnd=true]\n *   Whether to end each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean | null | undefined} [delimiterStart=true]\n *   Whether to begin each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean | null | undefined} [padding=true]\n *   Whether to add a space of padding between delimiters and cells\n *   (default: `true`).\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {((value: string) => number) | null | undefined} [stringLength]\n *   Function to detect the length of table cell content (optional);\n *   this is used when aligning the delimiters (`|`) between table cells;\n *   full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source;\n *   to fix this, you can pass this function,\n *   which receives the cell content and returns its “visible” size;\n *   note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @param {string} value\n *   Cell value.\n * @returns {number}\n *   Cell size.\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * Generate a markdown\n * ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables))\n * table.\n *\n * @param {ReadonlyArray<ReadonlyArray<string | null | undefined>>} table\n *   Table data (matrix of strings).\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Result.\n */\nexport function markdownTable(table, options) {\n  const settings = options || {}\n  // To do: next major: change to spread.\n  const align = (settings.align || []).concat()\n  const stringLength = settings.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (settings.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      settings.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (settings.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (settings.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (settings.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        settings.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(settings.alignDelimiters === false && cell === '') &&\n        (settings.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (settings.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (settings.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (settings.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        settings.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      settings.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string | null | undefined} [value]\n *   Value to serialize.\n * @returns {string}\n *   Result.\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string | null | undefined} value\n *   Value.\n * @returns {number}\n *   Alignment.\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n      ? 108 /* `l` */\n      : code === 82 /* `R` */ || code === 114 /* `r` */\n        ? 114 /* `r` */\n        : 0\n}\n","/**\n * @import {Blockquote, Parents} from 'mdast'\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @import {ConstructName, Unsafe} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @import {Break, Parents} from 'mdast'\n * @import {Info, State} from 'mdast-util-to-markdown'\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {Code, Parents} from 'mdast'\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * Encode a code point as a character reference.\n *\n * @param {number} code\n *   Code point to encode.\n * @returns {string}\n *   Encoded character reference.\n */\nexport function encodeCharacterReference(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';'\n}\n","/**\n * @import {EncodeSides} from '../types.js'\n */\n\nimport {classifyCharacter} from 'micromark-util-classify-character'\n\n/**\n * Check whether to encode (as a character reference) the characters\n * surrounding an attention run.\n *\n * Which characters are around an attention run influence whether it works or\n * not.\n *\n * See <https://github.com/orgs/syntax-tree/discussions/60> for more info.\n * See this markdown in a particular renderer to see what works:\n *\n * ```markdown\n * |                         | A (letter inside) | B (punctuation inside) | C (whitespace inside) | D (nothing inside) |\n * | ----------------------- | ----------------- | ---------------------- | --------------------- | ------------------ |\n * | 1 (letter outside)      | x*y*z             | x*.*z                  | x* *z                 | x**z               |\n * | 2 (punctuation outside) | .*y*.             | .*.*.                  | .* *.                 | .**.               |\n * | 3 (whitespace outside)  | x *y* z           | x *.* z                | x * * z               | x ** z             |\n * | 4 (nothing outside)     | *x*               | *.*                    | * *                   | **                 |\n * ```\n *\n * @param {number} outside\n *   Code point on the outer side of the run.\n * @param {number} inside\n *   Code point on the inner side of the run.\n * @param {'*' | '_'} marker\n *   Marker of the run.\n *   Underscores are handled more strictly (they form less often) than\n *   asterisks.\n * @returns {EncodeSides}\n *   Whether to encode characters.\n */\n// Important: punctuation must never be encoded.\n// Punctuation is solely used by markdown constructs.\n// And by encoding itself.\n// Encoding them will break constructs or double encode things.\nexport function encodeInfo(outside, inside, marker) {\n  const outsideKind = classifyCharacter(outside)\n  const insideKind = classifyCharacter(inside)\n\n  // Letter outside:\n  if (outsideKind === undefined) {\n    return insideKind === undefined\n      ? // Letter inside:\n        // we have to encode *both* letters for `_` as it is looser.\n        // it already forms for `*` (and GFMs `~`).\n        marker === '_'\n        ? {inside: true, outside: true}\n        : {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (letter, whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: encode outer (letter)\n          {inside: false, outside: true}\n  }\n\n  // Whitespace outside:\n  if (outsideKind === 1) {\n    return insideKind === undefined\n      ? // Letter inside: already forms.\n        {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: already forms.\n          {inside: false, outside: false}\n  }\n\n  // Punctuation outside:\n  return insideKind === undefined\n    ? // Letter inside: already forms.\n      {inside: false, outside: false}\n    : insideKind === 1\n      ? // Whitespace inside: encode inner (whitespace).\n        {inside: true, outside: false}\n      : // Punctuation inside: already forms.\n        {inside: false, outside: false}\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Emphasis, Parents} from 'mdast'\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nemphasis.peek = emphasisPeek\n\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Html} from 'mdast'\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Image, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {ImageReference, Parents} from 'mdast'\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {InlineCode, Parents} from 'mdast'\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Link} from 'mdast'\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Link, Parents} from 'mdast'\n * @import {Exit} from '../types.js'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {LinkReference, Parents} from 'mdast'\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Strong} from 'mdast'\n */\n\nimport {checkStrong} from '../util/check-strong.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nstrong.peek = strongPeek\n\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker + marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker + marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Code} from 'mdast'\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Definition, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Heading, Parents} from 'mdast'\n */\n\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value = encodeCharacterReference(value.charCodeAt(0)) + value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Heading} from 'mdast'\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {List, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {ListItem, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Paragraph, Parents} from 'mdast'\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Root} from 'mdast'\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n\n  const container = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return container.call(state, node, info)\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Text} from 'mdast'\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Parents, ThematicBreak} from 'mdast'\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @import {Code, ConstructRecord, Event, Extension, Previous, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiControl, markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n};\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n};\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n};\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n};\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n};\nconst wwwAutolink = {\n  name: 'wwwAutolink',\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n};\nconst protocolAutolink = {\n  name: 'protocolAutolink',\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n};\nconst emailAutolink = {\n  name: 'emailAutolink',\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n};\n\n/** @type {ConstructRecord} */\nconst text = {};\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  };\n}\n\n/** @type {Code} */\nlet code = 48;\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink;\n  code++;\n  if (code === 58) code = 65;else if (code === 91) code = 97;\n}\ntext[43] = emailAutolink;\ntext[45] = emailAutolink;\ntext[46] = emailAutolink;\ntext[95] = emailAutolink;\ntext[72] = [emailAutolink, protocolAutolink];\ntext[104] = [emailAutolink, protocolAutolink];\ntext[87] = [emailAutolink, wwwAutolink];\ntext[119] = [emailAutolink, wwwAutolink];\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this;\n  /** @type {boolean | undefined} */\n  let dot;\n  /** @type {boolean} */\n  let data;\n  return start;\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (!gfmAtext(code) || !previousEmail.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkEmail');\n    return atext(code);\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code);\n      return atext;\n    }\n    if (code === 64) {\n      effects.consume(code);\n      return emailDomain;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(emailDomainDotTrail, emailDomainAfter, emailDomainDot)(code);\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true;\n      effects.consume(code);\n      return emailDomain;\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code);\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code);\n    dot = true;\n    return emailDomain;\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail');\n      effects.exit('literalAutolink');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this;\n  return wwwStart;\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (code !== 87 && code !== 119 || !previousWww.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkWww');\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(wwwPrefix, effects.attempt(domain, effects.attempt(path, wwwAfter), nok), nok)(code);\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this;\n  let buffer = '';\n  let seen = false;\n  return protocolStart;\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if ((code === 72 || code === 104) && previousProtocol.call(self, self.previous) && !previousUnbalanced(self.events)) {\n      effects.enter('literalAutolink');\n      effects.enter('literalAutolinkHttp');\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase();\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code);\n        return protocolSlashesInside;\n      }\n    }\n    return nok(code);\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code);\n      if (seen) {\n        return afterProtocol;\n      }\n      seen = true;\n      return protocolSlashesInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null || asciiControl(code) || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || unicodePunctuation(code) ? nok(code) : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code);\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0;\n  return wwwPrefixInside;\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++;\n      effects.consume(code);\n      return wwwPrefixInside;\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code);\n      return wwwPrefixAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code);\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment;\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment;\n  /** @type {boolean | undefined} */\n  let seen;\n  return domainInside;\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code);\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || code !== 45 && unicodePunctuation(code)) {\n      return domainAfter(code);\n    }\n    seen = true;\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true;\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment;\n      underscoreInLastSegment = undefined;\n    }\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code);\n    }\n    return ok(code);\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0;\n  let sizeClose = 0;\n  return pathInside;\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++;\n      effects.consume(code);\n      return pathInside;\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code);\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (code === 33 || code === 34 || code === 38 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 60 || code === 63 || code === 93 || code === 95 || code === 126) {\n      return effects.check(trail, ok, pathAtPunctuation)(code);\n    }\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++;\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail;\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (code === 33 || code === 34 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 63 || code === 95 || code === 126) {\n      effects.consume(code);\n      return trail;\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code);\n      return trailCharacterReferenceStart;\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code);\n      return trailBracketAfter;\n    }\n    if (\n    // `<` is an end.\n    code === 60 ||\n    // So is whitespace.\n    code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (code === null || code === 40 || code === 91 || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return trail(code);\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharacterReferenceInside(code) : nok(code);\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code);\n      return trail;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return trailCharacterReferenceInside;\n    }\n\n    // It’s not a trail.\n    return nok(code);\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start;\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code);\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return code === null || code === 40 || code === 42 || code === 95 || code === 91 || code === 93 || code === 126 || markdownLineEndingOrSpace(code);\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code);\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code));\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return code === 43 || code === 45 || code === 46 || code === 95 || asciiAlphanumeric(code);\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length;\n  let result = false;\n  while (index--) {\n    const token = events[index][1];\n    if ((token.type === 'labelLink' || token.type === 'labelImage') && !token._balanced) {\n      result = true;\n      break;\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false;\n      break;\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true;\n  }\n  return result;\n}","/**\n * @import {Event, Exiter, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { blankLine } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        name: 'gfmFootnoteDefinition',\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        name: 'gfmFootnoteCall',\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        name: 'gfmPotentialFootnoteCall',\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  };\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {Token} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1];\n    if (token.type === \"labelImage\") {\n      labelStart = token;\n      break;\n    }\n\n    // Exit if we’ve walked far enough.\n    if (token.type === 'gfmFootnoteCall' || token.type === \"labelLink\" || token.type === \"label\" || token.type === \"image\" || token.type === \"link\") {\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code);\n    }\n    const id = normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    }));\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code);\n    }\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return ok(code);\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length;\n  /** @type {Token | undefined} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    if (events[index][1].type === \"labelImage\" && events[index][0] === 'enter') {\n      labelStart = events[index][1];\n      break;\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = \"data\";\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker';\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  };\n  // Increment the end 1 character.\n  marker.end.column++;\n  marker.end.offset++;\n  marker.end._bufferIndex++;\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  };\n  /** @type {Token} */\n  const chunk = {\n    type: \"chunkString\",\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  };\n\n  /** @type {Array<Event>} */\n  const replacement = [\n  // Take the `labelImageMarker` (now `data`, the `!`)\n  events[index + 1], events[index + 2], ['enter', call, context],\n  // The `[`\n  events[index + 3], events[index + 4],\n  // The `^`.\n  ['enter', marker, context], ['exit', marker, context],\n  // Everything in between.\n  ['enter', string, context], ['enter', chunk, context], ['exit', chunk, context], ['exit', string, context],\n  // The ending (`]`, properly parsed and labelled).\n  events[events.length - 2], events[events.length - 1], ['exit', call, context]];\n  events.splice(index, events.length - index + 1, ...replacement);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  let size = 0;\n  /** @type {boolean} */\n  let data;\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start;\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall');\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return callStart;\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code);\n    effects.enter('gfmFootnoteCallMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallMarker');\n    effects.enter('gfmFootnoteCallString');\n    effects.enter('chunkString').contentType = 'string';\n    return callData;\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteCallString');\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code);\n      }\n      effects.enter('gfmFootnoteCallLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteCallLabelMarker');\n      effects.exit('gfmFootnoteCall');\n      return ok;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? callEscape : callData;\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return callData;\n    }\n    return callData(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {string} */\n  let identifier;\n  let size = 0;\n  /** @type {boolean | undefined} */\n  let data;\n  return start;\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true;\n    effects.enter('gfmFootnoteDefinitionLabel');\n    effects.enter('gfmFootnoteDefinitionLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteDefinitionLabelMarker');\n    return labelAtMarker;\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionMarker');\n      effects.enter('gfmFootnoteDefinitionLabelString');\n      effects.enter('chunkString').contentType = 'string';\n      return labelInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteDefinitionLabelString');\n      identifier = normalizeIdentifier(self.sliceSerialize(token));\n      effects.enter('gfmFootnoteDefinitionLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionLabelMarker');\n      effects.exit('gfmFootnoteDefinitionLabel');\n      return labelAfter;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker');\n      effects.consume(code);\n      effects.exit('definitionMarker');\n      if (!defined.includes(identifier)) {\n        defined.push(identifier);\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(effects, whitespaceAfter, 'gfmFootnoteDefinitionWhitespace');\n    }\n    return nok(code);\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok));\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition');\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, 'gfmFootnoteDefinitionIndent', 4 + 1);\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'gfmFootnoteDefinitionIndent' && tail[2].sliceSerialize(tail[1], true).length === 4 ? ok(code) : nok(code);\n  }\n}","/**\n * @import {Options} from 'micromark-extension-gfm-strikethrough'\n * @import {Event, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {};\n  let single = options_.singleTilde;\n  const tokenizer = {\n    name: 'strikethrough',\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  };\n  if (single === null || single === undefined) {\n    single = true;\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  };\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1;\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (events[index][0] === 'enter' && events[index][1].type === 'strikethroughSequenceTemporary' && events[index][1]._close) {\n        let open = index;\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (events[open][0] === 'exit' && events[open][1].type === 'strikethroughSequenceTemporary' && events[open][1]._open &&\n          // If the sizes are the same:\n          events[index][1].end.offset - events[index][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {\n            events[index][1].type = 'strikethroughSequence';\n            events[open][1].type = 'strikethroughSequence';\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            };\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            };\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [['enter', strikethrough, context], ['enter', events[open][1], context], ['exit', events[open][1], context], ['enter', text, context]];\n            const insideSpan = context.parser.constructs.insideSpan.null;\n            if (insideSpan) {\n              // Between.\n              splice(nextEvents, nextEvents.length, 0, resolveAll(insideSpan, events.slice(open + 1, index), context));\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [['exit', text, context], ['enter', events[index][1], context], ['exit', events[index][1], context], ['exit', strikethrough, context]]);\n            splice(events, open - 1, index - open + 3, nextEvents);\n            index = open + nextEvents.length - 2;\n            break;\n          }\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = \"data\";\n      }\n    }\n    return events;\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous;\n    const events = this.events;\n    let size = 0;\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      if (previous === 126 && events[events.length - 1][1].type !== \"characterEscape\") {\n        return nok(code);\n      }\n      effects.enter('strikethroughSequenceTemporary');\n      return more(code);\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous);\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code);\n        effects.consume(code);\n        size++;\n        return more;\n      }\n      if (size < 2 && !single) return nok(code);\n      const token = effects.exit('strikethroughSequenceTemporary');\n      const after = classifyCharacter(code);\n      token._open = !after || after === 2 && Boolean(before);\n      token._close = !before || before === 2 && Boolean(after);\n      return ok(code);\n    }\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = [];\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImplementation(this, index, remove, add);\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImplementation(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return;\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length;\n    /** @type {Array<Array<Event>>} */\n    const vecs = [];\n    while (index > 0) {\n      index -= 1;\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]), this.map[index][2]);\n\n      // Truncate rest.\n      events.length = this.map[index][0];\n    }\n    vecs.push(events.slice());\n    events.length = 0;\n    let slice = vecs.pop();\n    while (slice) {\n      for (const element of slice) {\n        events.push(element);\n      }\n      slice = vecs.pop();\n    }\n\n    // Truncate everything.\n    this.map.length = 0;\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImplementation(editMap, at, remove, add) {\n  let index = 0;\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return;\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove;\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add);\n      // }\n\n      return;\n    }\n    index += 1;\n  }\n  editMap.map.push([at, remove, add]);\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false;\n  /** @type {Array<Align>} */\n  const align = [];\n  while (index < events.length) {\n    const event = events[index];\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(events[index + 1][1].type === 'tableDelimiterMarker' ? 'left' : 'none');\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1;\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right';\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break;\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true;\n    }\n    index += 1;\n  }\n  return align;\n}","/**\n * @import {Event, Extension, Point, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { EditMap } from './edit-map.js';\nimport { gfmTableAlign } from './infer.js';\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        name: 'table',\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  let sizeB = 0;\n  /** @type {boolean | undefined} */\n  let seen;\n  return start;\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1;\n    while (index > -1) {\n      const type = self.events[index][1].type;\n      if (type === \"lineEnding\" ||\n      // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n      type === \"linePrefix\") index--;else break;\n    }\n    const tail = index > -1 ? self.events[index][1].type : null;\n    const next = tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore;\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    return next(code);\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead');\n    effects.enter('tableRow');\n    return headRowStart(code);\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code);\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true;\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1;\n    return headRowBreak(code);\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0;\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true;\n        effects.exit('tableRow');\n        effects.enter(\"lineEnding\");\n        effects.consume(code);\n        effects.exit(\"lineEnding\");\n        return headDelimiterStart;\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, \"whitespace\")(code);\n    }\n    sizeB += 1;\n    if (seen) {\n      seen = false;\n      // Header cell count.\n      size += 1;\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      // Whether a delimiter was seen.\n      seen = true;\n      return headRowBreak;\n    }\n\n    // Anything else is cell data.\n    effects.enter(\"data\");\n    return headRowData(code);\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return headRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? headRowEscape : headRowData;\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return headRowData;\n    }\n    return headRowData(code);\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false;\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    effects.enter('tableDelimiterRow');\n    // Track if we’ve seen a `:` or `|`.\n    seen = false;\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return headDelimiterBefore(code);\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code);\n    }\n    if (code === 124) {\n      seen = true;\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return headDelimiterCellBefore;\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, \"whitespace\")(code);\n    }\n    return headDelimiterValueBefore(code);\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1;\n      seen = true;\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterLeftAlignmentAfter;\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1;\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller');\n      return headDelimiterFiller(code);\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return headDelimiterFiller;\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true;\n      effects.exit('tableDelimiterFiller');\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterRightAlignmentAfter;\n    }\n    effects.exit('tableDelimiterFiller');\n    return headDelimiterRightAlignmentAfter(code);\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, \"whitespace\")(code);\n    }\n    return headDelimiterCellAfter(code);\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code);\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow');\n      effects.exit('tableHead');\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code);\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow');\n    return bodyRowBreak(code);\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return bodyRowBreak;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow');\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, \"whitespace\")(code);\n    }\n\n    // Anything else is cell content.\n    effects.enter(\"data\");\n    return bodyRowData(code);\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return bodyRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? bodyRowEscape : bodyRowData;\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return bodyRowData;\n    }\n    return bodyRowData(code);\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1;\n  let inFirstCellAwaitingPipe = true;\n  /** @type {RowKind} */\n  let rowKind = 0;\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0];\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0];\n  let afterHeadAwaitingFirstBodyRow = false;\n  let lastTableEnd = 0;\n  /** @type {Token | undefined} */\n  let currentTable;\n  /** @type {Token | undefined} */\n  let currentBody;\n  /** @type {Token | undefined} */\n  let currentCell;\n  const map = new EditMap();\n  while (++index < events.length) {\n    const event = events[index];\n    const token = event[1];\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false;\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n          currentBody = undefined;\n          lastTableEnd = 0;\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        };\n        map.add(index, 0, [['enter', currentTable, context]]);\n      } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n        inFirstCellAwaitingPipe = true;\n        currentCell = undefined;\n        lastCell = [0, 0, 0, 0];\n        cell = [0, index + 1, 0, 0];\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false;\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          };\n          map.add(index, 0, [['enter', currentBody, context]]);\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1;\n      }\n      // Cell data.\n      else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n        inFirstCellAwaitingPipe = false;\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n            lastCell = [0, 0, 0, 0];\n          }\n          cell[2] = index;\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false;\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n          }\n          lastCell = cell;\n          cell = [lastCell[1], index, 0, 0];\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true;\n      lastTableEnd = index;\n    } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n      lastTableEnd = index;\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1];\n        currentCell = flushCell(map, context, lastCell, rowKind, index, currentCell);\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell);\n      }\n      rowKind = 0;\n    } else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n      cell[3] = index;\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n  }\n  map.consume(context.events);\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1;\n  while (++index < context.events.length) {\n    const event = context.events[index];\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index);\n    }\n  }\n  return events;\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName = rowKind === 1 ? 'tableHeader' : rowKind === 2 ? 'tableDelimiter' : 'tableData';\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent';\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]));\n    map.add(range[0], 0, [['exit', previousCell, context]]);\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1]);\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  };\n  map.add(range[1], 0, [['enter', previousCell, context]]);\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2]);\n    const relatedEnd = getPoint(context.events, range[3]);\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    };\n    map.add(range[2], 0, [['enter', valueToken, context]]);\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]];\n      const end = context.events[range[3]];\n      start[1].end = Object.assign({}, end[1].end);\n      start[1].type = \"chunkText\";\n      start[1].contentType = \"text\";\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1;\n        const b = range[3] - range[2] - 1;\n        map.add(a, b, []);\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]]);\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd));\n    map.add(rowEnd, 0, [['exit', previousCell, context]]);\n    previousCell = undefined;\n  }\n  return previousCell;\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = [];\n  const related = getPoint(context.events, index);\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related);\n    exits.push(['exit', tableBody, context]);\n  }\n  table.end = Object.assign({}, related);\n  exits.push(['exit', table, context]);\n  map.add(index + 1, 0, exits);\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index];\n  const side = event[0] === 'enter' ? 'start' : 'end';\n  return event[1][side];\n}","/**\n * @import {Extension, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nconst tasklistCheck = {\n  name: 'tasklistCheck',\n  tokenize: tokenizeTasklistCheck\n};\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this;\n  return open;\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n    // Exit if there’s stuff before.\n    self.previous !== null ||\n    // Exit if not in the first content that is the first child of a list\n    // item.\n    !self._gfmTasklistFirstContentOfListItem) {\n      return nok(code);\n    }\n    effects.enter('taskListCheck');\n    effects.enter('taskListCheckMarker');\n    effects.consume(code);\n    effects.exit('taskListCheckMarker');\n    return inside;\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueUnchecked');\n      return close;\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueChecked');\n      return close;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker');\n      effects.consume(code);\n      effects.exit('taskListCheckMarker');\n      effects.exit('taskListCheck');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code);\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check({\n        tokenize: spaceThenNonSpace\n      }, ok, nok)(code);\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, \"whitespace\");\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code);\n  }\n}","/**\n * @import {Root} from 'mdast'\n * @import {Options} from 'remark-gfm'\n * @import {} from 'remark-parse'\n * @import {} from 'remark-stringify'\n * @import {Processor} from 'unified'\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor<Root>} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/**\n * @import {Extension as FromMarkdownExtension} from 'mdast-util-from-markdown'\n * @import {Options} from 'mdast-util-gfm'\n * @import {Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(options),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","import React, { useState } from \"react\";\nimport { useLocation, navigate } from \"@reach/router\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport Navbar from \"../../components/Navbar\";\nimport Footer from \"../../components/Footer\";\nimport { useStrapiItem } from \"../../hooks/use-strapi\";\nimport { COLLECTION_TYPES } from \"../../services/strapi\";\nimport { STRAPI_URL } from \"../../utils/constants\";\nimport prodigiImg from \"../../../public/img/ai-products/prodigi_three.png\";\nimport prodigiScanner from \"../../../public/img/blog-info/blog_scan.png\";\nimport bgImg from \"../../../public/img/blog-info/blog_contact.png\";\nimport { slackAlerts } from \"../../api/SlackTiggers\";\nimport { NocoFetch } from \"../../api/NocoDBEndpoints\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst CONTENT_BLOCK_TYPES = {\n  RICH_TEXT: \"shared.rich-text\",\n  QUOTE: \"shared.quote\",\n  MEDIA: \"shared.media\",\n  SLIDER: \"shared.slider\",\n};\nconst CONTENT_TYPE_CONFIG = {\n  blogs: {\n    collection: COLLECTION_TYPES.ARTICLES,\n    backRoute: \"/impact/blogs/\",\n    backLabel: \"Back to Blogs\",\n  },\n  \"case-studies\": {\n    collection: COLLECTION_TYPES.CASE_STUDIES,\n    backRoute: \"/impact/case-study/\",\n    backLabel: \"Back to Case Studies\",\n  },\n  newsroom: {\n    collection: COLLECTION_TYPES.NEWSROOM,\n    backRoute: \"/impact/newsroom/\",\n    backLabel: \"Back to Newsroom\",\n  },\n};\n\nfunction UniversalContentDetail() {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const notify = () => toast(\"Demo Request submitted\");\n  const [formData, setFormData] = useState({\n    fullName: \"\",\n    email: \"\",\n    phoneNumber: \"\",\n    hospitalName: \"\",\n  });\n\n  const pathSegments = location.pathname.split(\"/\").filter(Boolean);\n  const slug = pathSegments[pathSegments.length - 1] || \"\";\n\n  const contentType =\n    searchParams.get(\"type\") ||\n    searchParams.get(\"contentType\") ||\n    detectContentTypeFromPath(location.pathname) ||\n    \"blogs\";\n\n  const config = CONTENT_TYPE_CONFIG[contentType] || CONTENT_TYPE_CONFIG.blogs;\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(formData);\n\n    try {\n      const payload = {\n        \"Form-name\": \"Book-a-demo\",\n        \"First name\": formData.fullName,\n        Email: formData.email,\n        \"Mobile Number\": formData.phoneNumber,\n        \"Diagnostic Center Name\": formData.hospitalName,\n      };\n      const response = await NocoFetch.createDemoRequestEntry(payload);\n\n      const demoRequestAlertAttributes = {\n        client_name: formData.fullName,\n        email: formData.email,\n        mobile_number: formData.phoneNumber,\n        hospitalName: formData.hospitalName,\n      };\n      await slackAlerts.demoRequestAlert(demoRequestAlertAttributes);\n      if (response.status === 200) {\n        notify();\n        setFormData({\n          fullName: \"\",\n          email: \"\",\n          phoneNumber: \"\",\n          hospitalName: \"\",\n        });\n      } else {\n        throw new Error(\"Failed to submit form\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n    }\n    setFormData({\n      fullName: \"\",\n      email: \"\",\n      phoneNumber: \"\",\n      hospitalName: \"\",\n    });\n  };\n\n  const handleBackNavigation = () => {\n    const referrer = document.referrer;\n    const currentDomain = window.location.origin;\n    if (\n      referrer &&\n      referrer.startsWith(currentDomain) &&\n      !referrer.includes(location.pathname)\n    ) {\n      navigate(-1);\n    } else {\n      window.location.href = config.backRoute;\n    }\n  };\n\n  const {\n    data: content,\n    loading,\n    error,\n  } = useStrapiItem(config.collection, slug);\n\n  function detectContentTypeFromPath(pathname) {\n    if (pathname.includes(\"case-study\")) return \"case-studies\";\n    if (pathname.includes(\"newsroom\")) return \"newsroom\";\n    if (pathname.includes(\"blog\")) return \"blogs\";\n    return null;\n  }\n\n  const renderContentBlock = (block) => {\n    switch (block.__component) {\n      case CONTENT_BLOCK_TYPES.RICH_TEXT:\n        return (\n          <div\n            key={block.id}\n            className=\"prose prose-lg prose-gray max-w-none mb-6\"\n          >\n            <ReactMarkdown\n              remarkPlugins={[remarkGfm]}\n              components={getMarkdownComponents()}\n            >\n              {block.body}\n            </ReactMarkdown>\n          </div>\n        );\n\n      case CONTENT_BLOCK_TYPES.QUOTE:\n        return (\n          <blockquote\n            key={block.id}\n            className=\"border-l-4 border-[#1B3366] pl-6 my-8 italic bg-gray-50 p-6 rounded-r-lg\"\n          >\n            <ReactMarkdown\n              remarkPlugins={[remarkGfm]}\n              components={getMarkdownComponents()}\n            >\n              {block.body}\n            </ReactMarkdown>\n            {block.title && (\n              <footer className=\"text-lg font-medium text-gray-600\">\n                — {block.title}\n              </footer>\n            )}\n          </blockquote>\n        );\n\n      case CONTENT_BLOCK_TYPES.MEDIA:\n        return (\n          block.media?.data && (\n            <figure key={block.id} className=\"my-8\">\n              <img\n                src={`${STRAPI_URL}${\n                  block.media.data.attributes?.url || block.media.url\n                }`}\n                alt={\n                  block.media.data.attributes?.alternativeText ||\n                  block.media.alternativeText ||\n                  \"\"\n                }\n                className=\"w-full rounded-lg shadow-lg\"\n              />\n            </figure>\n          )\n        );\n\n      case CONTENT_BLOCK_TYPES.SLIDER:\n        return (\n          block.files?.data &&\n          block.files.data.length > 0 && (\n            <div key={block.id} className=\"my-8\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {block.files.data.map((file) => (\n                  <img\n                    key={file.id}\n                    src={`${STRAPI_URL}${file.attributes?.url || file.url}`}\n                    alt={\n                      file.attributes?.alternativeText ||\n                      file.alternativeText ||\n                      \"\"\n                    }\n                    className=\"w-full h-48 object-cover rounded-lg shadow-md\"\n                  />\n                ))}\n              </div>\n            </div>\n          )\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return \"\";\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    });\n  };\n\n  const getTitle = (content) => {\n    return content[\"5cNetwork\"] || content.title || \"Untitled\";\n  };\n\n  const getDescription = (content) => {\n    return content[\"5cNetworkDescription\"] || content.description || \"\";\n  };\n\n  const getMarkdownComponents = () => ({\n    p: ({ node, ...props }) => (\n      <p className=\"mb-4 text-gray-700 leading-relaxed\" {...props} />\n    ),\n    h1: ({ node, ...props }) => (\n      <h1 className=\"text-3xl mb-4 font-bold text-gray-900\" {...props} />\n    ),\n    h2: ({ node, ...props }) => (\n      <h2 className=\"text-2xl mb-4 font-bold text-gray-900\" {...props} />\n    ),\n    h3: ({ node, ...props }) => (\n      <h3 className=\"text-xl mb-4 font-bold text-gray-900\" {...props} />\n    ),\n    ul: ({ node, ...props }) => (\n      <ul className=\"list-disc ml-6 mb-4\" {...props} />\n    ),\n    ol: ({ node, ...props }) => (\n      <ol className=\"list-decimal ml-6 mb-4\" {...props} />\n    ),\n    li: ({ node, ...props }) => <li className=\"mb-2\" {...props} />,\n    blockquote: ({ node, ...props }) => (\n      <blockquote\n        className=\"border-l-4 border-[#1B3366] pl-6 my-8 italic bg-gray-50 p-6 rounded-r-lg\"\n        {...props}\n      />\n    ),\n    img: ({ node, ...props }) => (\n      <figure key={node.position} className=\"my-8\">\n        <img\n          src={\n            props.src.startsWith(\"http\")\n              ? props.src\n              : `${STRAPI_URL}${props.src.replace(/^\\/strapi/, \"\")}`\n          }\n          alt={props.alt || \"\"}\n          className=\"w-full rounded-lg shadow-lg\"\n        />\n      </figure>\n    ),\n    a: ({ node, ...props }) => {\n      const isExternalLink =\n        props.href &&\n        (props.href.startsWith(\"http\") || props.href.startsWith(\"//\"));\n      return (\n        <a\n          className=\"text-[#1B3366] hover:underline\"\n          target={isExternalLink ? \"_blank\" : undefined}\n          rel={isExternalLink ? \"noopener noreferrer\" : undefined}\n          {...props}\n        />\n      );\n    },\n    strong: ({ node, ...props }) => (\n      <strong className=\"font-semibold\" {...props} />\n    ),\n    em: ({ node, ...props }) => <em className=\"italic\" {...props} />,\n    code: ({ node, ...props }) => (\n      <code className=\"bg-gray-100 px-2 py-1 rounded-md text-sm\" {...props} />\n    ),\n    pre: ({ node, ...props }) => (\n      <pre className=\"bg-gray-100 p-4 rounded-md overflow-x-auto\" {...props} />\n    ),\n    hr: ({ node, ...props }) => (\n      <hr className=\"my-8 border-gray-300\" {...props} />\n    ),\n  });\n\n  if (loading) {\n    return (\n      <>\n        <div>\n          <header>\n            <Navbar />\n          </header>\n        </div>\n        <div className=\"w-full flex flex-col justify-center items-center pt-[90px] min-h-screen\">\n          <div className=\"flex justify-center items-center min-h-[400px]\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-[#1B3366]\"></div>\n          </div>\n        </div>\n        <footer>\n          <Footer />\n        </footer>\n      </>\n    );\n  }\n\n  if (error || !content) {\n    return (\n      <>\n        <div>\n          <header>\n            <Navbar />\n          </header>\n        </div>\n        <div className=\"w-full flex flex-col justify-center items-center pt-[90px] min-h-screen\">\n          <div className=\"text-center text-red-500 min-h-[400px] flex items-center justify-center\">\n            <div>\n              <h2 className=\"text-2xl font-bold mb-4\">Error</h2>\n              <p>{error || \"Content not found\"}</p>\n              <button\n                className=\"mt-4 px-4 py-2 bg-[#1B3366] text-white rounded hover:bg-blue-700 transition-colors\"\n                onClick={() => navigate(-1)}\n              >\n                ← Back\n              </button>\n            </div>\n          </div>\n        </div>\n        <footer>\n          <Footer />\n        </footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <div>\n        <header>\n          <Navbar />\n        </header>\n      </div>\n      <div className=\"w-[100%] flex flex-col justify-center items-center pt-[55px] pb-[14px]\">\n        <ToastContainer />\n        <div className=\"bg-[#F3F7FF] h-[16vh] flex flex-col justify-center items-center w-[100%] my-4\">\n          <h1 className=\"text-[#000] text-[18px] font-bold md:text-[24px] text-center px-[4px] md:px-[10px]\">\n            {getTitle(content)}\n          </h1>\n        </div>\n\n        <div className=\"md:min-h-[80vh] w-[100%] flex flex-col md:flex-row justify-center items-start\">\n          <div className=\"w-[90%] md:w-[22vw] my-2 mx-auto bg-[#F3F7FF] py-2 md:py-0 px-2 md:px-0 md:h-[50vh] flex flex-col justify-around items-center rounded-xl md:order-0 order-1\">\n            <h1\n              className=\"font-bold text-[18px] md:text-[26px] text-center bg-clip-text text-transparent uppercase\"\n              style={{\n                backgroundImage: \"linear-gradient(180deg, #EA4335, #CC0000)\",\n              }}\n            >\n              try Our Mobile App\n            </h1>\n            <p className=\"text-[#1B3363] text-[14px] md:font-[16px] text-center my-2 md:my-0\">\n              For the first time in India Award Winning Mobile App for Radiology\n            </p>\n            <div className=\"flex flex-row justify-center items-center my-2 md:my-0\">\n              <div className=\"flex flex-col justify-center items-center  w-[60%] gap-2\">\n                <div className=\"flex flex-row justify-start items-center w-[80%] gap-3\">\n                  <img\n                    src={prodigiImg}\n                    className=\"h-[25px] w-[30px]\"\n                    alt=\"img\"\n                  />\n                  <p className=\"text-[#000] text-[14px] font-medium\">\n                    Case Activation\n                  </p>\n                </div>\n                <div className=\"flex flex-row justify-start items-center w-[80%] gap-3\">\n                  <img\n                    src={prodigiImg}\n                    className=\"h-[25px] w-[30px]\"\n                    alt=\"img\"\n                  />\n                  <p className=\"text-[#000] text-[14px] font-medium\">\n                    Report Download\n                  </p>\n                </div>\n                <div className=\"flex flex-row justify-start items-center w-[80%] gap-3\">\n                  <img\n                    src={prodigiImg}\n                    className=\"h-[25px] w-[30px]\"\n                    alt=\"img\"\n                  />\n                  <p className=\"text-[#000] text-[14px] font-medium\">\n                    Notification Alerts\n                  </p>\n                </div>\n                <div className=\"flex flex-row justify-start items-center w-[80%] gap-3\">\n                  <img\n                    src={prodigiImg}\n                    className=\"h-[25px] w-[30px]\"\n                    alt=\"img\"\n                  />\n                  <p className=\"text-[#000] text-[14px] font-medium\">\n                    {\" \"}\n                    Report Sharing{\" \"}\n                  </p>\n                </div>\n                <div className=\"flex flex-row justify-start items-center w-[80%] gap-3\">\n                  <img\n                    src={prodigiImg}\n                    className=\"h-[25px] w-[30px]\"\n                    alt=\"img\"\n                  />\n                  <p className=\"text-[#000] text-[14px] font-medium\">\n                    {\" \"}\n                    Multi-Lingual\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex flex-col justify-center items-center w-[40%]\">\n                <img\n                  src={prodigiScanner}\n                  className=\"h-[100%] w-[90%]\"\n                  alt=\"img\"\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-row justify-center items-center\">\n              <button className=\"bg-[#1B3363] rounded-full text-[16px] md:text-[18px] text-[#fff] px-2 md:px-3 py-1 md:py-2\">\n                Download Now\n              </button>\n            </div>\n          </div>\n          <div className=\"w-[90%] mx-auto md:w-[52vw] md:min-h-[50vh] md:max-h-[78vh] md:overflow-y-scroll order-0 md:order-1\">\n            <div className=\"flex flex-col justify-center items-center w-[100%]\">\n              <button\n                className=\"mb-6 px-4 py-2 text-[#1B3366] border border-[#1B3366] rounded hover:bg-[#1B3366] hover:text-white transition-colors self-start\"\n                onClick={handleBackNavigation}\n              >\n                ← Back\n              </button>\n              <div className=\"mb-8 w-full\">\n                <div className=\"flex items-center gap-4 mb-4\">\n                  {content.category && (\n                    <span className=\"px-3 py-1 bg-[#1B3366] text-white text-sm rounded-full\">\n                      {content.category.name}\n                    </span>\n                  )}\n                  <span className=\"text-gray-600 text-sm\">\n                    {formatDate(content.publishedAt)}\n                  </span>\n                  {content.author && (\n                    <span className=\"text-gray-600 text-sm\">\n                      By {content.author.name}\n                    </span>\n                  )}\n                </div>\n\n                {getDescription(content) && (\n                  <p className=\"text-xl text-gray-600 leading-relaxed mb-8\">\n                    {getDescription(content)}\n                  </p>\n                )}\n              </div>\n\n              {content.cover && (\n                <div className=\"mb-8 w-full\">\n                  <img\n                    src={`${STRAPI_URL}${\n                      content.cover.formats?.large?.url || content.cover.url\n                    }`}\n                    alt={content.cover.alternativeText || getTitle(content)}\n                    className=\"w-full h-[300px] md:h-[400px] object-cover rounded-lg shadow-lg\"\n                  />\n                </div>\n              )}\n\n              <div className=\"prose prose-lg prose-gray max-w-none w-full\">\n                {content.blocks?.map((block) => renderContentBlock(block))}\n\n                {(!content.blocks || content.blocks.length === 0) &&\n                  content.body && (\n                    <div className=\"prose prose-lg prose-gray max-w-none mb-6\">\n                      <ReactMarkdown\n                        remarkPlugins={[remarkGfm]}\n                        components={getMarkdownComponents()}\n                      >\n                        {content.body}\n                      </ReactMarkdown>\n                    </div>\n                  )}\n              </div>\n\n              <div className=\"text-center mt-12 w-full\">\n                <button\n                  className=\"px-6 py-3 bg-[#1B3366] text-white rounded hover:bg-blue-700 transition-colors\"\n                  onClick={handleBackNavigation}\n                >\n                  {config.backLabel}\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"w-[90%] md:w-[22vw] min-h-[50vh] md:order-2 order-2 my-2 mx-auto\">\n            <div\n              className=\"h-[100%] w-[100%] bg-cover bg-no-repeat pt-[90px] flex flex-col justify-start items-center pb-[10px] rounded-xl\"\n              style={{\n                backgroundImage: `url(${bgImg})`,\n              }}\n            >\n              <h1 className=\"text-[#000] font-bold text-[18px] md:text-[20px] my-4\">\n                Schedule A Live Demo Today\n              </h1>\n              <form onSubmit={handleSubmit} className=\"space-y-5 w-[90%]\">\n                <div>\n                  <input\n                    type=\"text\"\n                    value={formData.fullName}\n                    name=\"fullName\"\n                    onChange={handleInputChange}\n                    placeholder=\"Full Name\"\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                  />\n                </div>\n                <div>\n                  <input\n                    type=\"email\"\n                    value={formData.email}\n                    name=\"email\"\n                    onChange={handleInputChange}\n                    placeholder=\"Email Address\"\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                  />\n                </div>\n                <div className=\"flex items-center\">\n                  <div className=\"w-2/6\">\n                    <div className=\"border border-gray-300 rounded-md px-2 py-3 bg-gray-100 flex flex-row justify-center gap-3 items-center\">\n                      <span> 🇮🇳 </span>\n                      <span className=\"flex items-center justify-center\">\n                        +91\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"w-5/6\">\n                    <input\n                      type=\"tel\"\n                      value={formData.phoneNumber}\n                      onChange={handleInputChange}\n                      name=\"phoneNumber\"\n                      placeholder=\"Phone Number\"\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400 ml-2\"\n                    />\n                  </div>\n                </div>\n                <div>\n                  <input\n                    type=\"text\"\n                    value={formData.hospitalName}\n                    name=\"hospitalName\"\n                    onChange={handleInputChange}\n                    placeholder=\"Diagnostic/Hospital Name\"\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                  />\n                </div>\n                <div className=\"text-center mt-6\">\n                  <button className=\"bg-[#1B3363] rounded-full text-[#fff] px-3 py-2\">\n                    Submit\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n      <footer>\n        <Footer />\n      </footer>\n    </>\n  );\n}\n\nexport default UniversalContentDetail;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar style_to_object_1 = __importDefault(require(\"style-to-object\"));\nvar utilities_1 = require(\"./utilities\");\n/**\n * Parses CSS inline style to JavaScript object (camelCased).\n */\nfunction StyleToJS(style, options) {\n    var output = {};\n    if (!style || typeof style !== 'string') {\n        return output;\n    }\n    (0, style_to_object_1.default)(style, function (property, value) {\n        // skip CSS comment\n        if (property && value) {\n            output[(0, utilities_1.camelCase)(property, options)] = value;\n        }\n    });\n    return output;\n}\nStyleToJS.default = StyleToJS;\nmodule.exports = StyleToJS;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.camelCase = void 0;\nvar CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9_-]+$/;\nvar HYPHEN_REGEX = /-([a-z])/g;\nvar NO_HYPHEN_REGEX = /^[^-]+$/;\nvar VENDOR_PREFIX_REGEX = /^-(webkit|moz|ms|o|khtml)-/;\nvar MS_VENDOR_PREFIX_REGEX = /^-(ms)-/;\n/**\n * Checks whether to skip camelCase.\n */\nvar skipCamelCase = function (property) {\n    return !property ||\n        NO_HYPHEN_REGEX.test(property) ||\n        CUSTOM_PROPERTY_REGEX.test(property);\n};\n/**\n * Replacer that capitalizes first character.\n */\nvar capitalize = function (match, character) {\n    return character.toUpperCase();\n};\n/**\n * Replacer that removes beginning hyphen of vendor prefix property.\n */\nvar trimHyphen = function (match, prefix) { return \"\".concat(prefix, \"-\"); };\n/**\n * CamelCases a CSS property.\n */\nvar camelCase = function (property, options) {\n    if (options === void 0) { options = {}; }\n    if (skipCamelCase(property)) {\n        return property;\n    }\n    property = property.toLowerCase();\n    if (options.reactCompat) {\n        // `-ms` vendor prefix should not be capitalized\n        property = property.replace(MS_VENDOR_PREFIX_REGEX, trimHyphen);\n    }\n    else {\n        // for non-React, remove first hyphen so vendor prefix is not capitalized\n        property = property.replace(VENDOR_PREFIX_REGEX, trimHyphen);\n    }\n    return property.replace(HYPHEN_REGEX, capitalize);\n};\nexports.camelCase = camelCase;\n//# sourceMappingURL=utilities.js.map","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StyleToObject;\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\n//# sourceMappingURL=index.js.map","export default __webpack_public_path__ + \"static/prodigi_three-619df921b5a5c493a1ea51e1d9a599ee.png\";","export default __webpack_public_path__ + \"static/blog_contact-cc35ffc76e9d1628df8ab7bb3f076c16.png\";","export default __webpack_public_path__ + \"static/blog_scan-befdbf23e688d47fc21f5f51a4ba8090.png\";","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","'use client';\nimport e,{isValidElement as t,useRef as n,useLayoutEffect as o,useEffect as s,cloneElement as a,useSyncExternalStore as r,useState as i}from\"react\";import l from\"clsx\";const c=e=>\"number\"==typeof e&&!isNaN(e),d=e=>\"string\"==typeof e,u=e=>\"function\"==typeof e,p=e=>d(e)||u(e)?e:null,m=e=>t(e)||d(e)||u(e)||c(e);function f(e,t,n){void 0===n&&(n=300);const{scrollHeight:o,style:s}=e;requestAnimationFrame(()=>{s.minHeight=\"initial\",s.height=o+\"px\",s.transition=`all ${n}ms`,requestAnimationFrame(()=>{s.height=\"0\",s.padding=\"0\",s.margin=\"0\",setTimeout(t,n)})})}function g(t){let{enter:a,exit:r,appendPosition:i=!1,collapse:l=!0,collapseDuration:c=300}=t;return function(t){let{children:d,position:u,preventExitTransition:p,done:m,nodeRef:g,isIn:y,playToast:v}=t;const h=i?`${a}--${u}`:a,T=i?`${r}--${u}`:r,E=n(0);return o(()=>{const e=g.current,t=h.split(\" \"),n=o=>{o.target===g.current&&(v(),e.removeEventListener(\"animationend\",n),e.removeEventListener(\"animationcancel\",n),0===E.current&&\"animationcancel\"!==o.type&&e.classList.remove(...t))};e.classList.add(...t),e.addEventListener(\"animationend\",n),e.addEventListener(\"animationcancel\",n)},[]),s(()=>{const e=g.current,t=()=>{e.removeEventListener(\"animationend\",t),l?f(e,m,c):m()};y||(p?t():(E.current=1,e.className+=` ${T}`,e.addEventListener(\"animationend\",t)))},[y]),e.createElement(e.Fragment,null,d)}}function y(e,t){return null!=e?{content:e.content,containerId:e.props.containerId,id:e.props.toastId,theme:e.props.theme,type:e.props.type,data:e.props.data||{},isLoading:e.props.isLoading,icon:e.props.icon,status:t}:{}}const v=new Map;let h=[];const T=new Set,E=e=>T.forEach(t=>t(e)),b=()=>v.size>0;function I(e,t){var n;if(t)return!(null==(n=v.get(t))||!n.isToastActive(e));let o=!1;return v.forEach(t=>{t.isToastActive(e)&&(o=!0)}),o}function _(e,t){m(e)&&(b()||h.push({content:e,options:t}),v.forEach(n=>{n.buildToast(e,t)}))}function C(e,t){v.forEach(n=>{null!=t&&null!=t&&t.containerId?(null==t?void 0:t.containerId)===n.id&&n.toggle(e,null==t?void 0:t.id):n.toggle(e,null==t?void 0:t.id)})}function L(e){const{subscribe:o,getSnapshot:s,setProps:i}=n(function(e){const n=e.containerId||1;return{subscribe(o){const s=function(e,n,o){let s=1,r=0,i=[],l=[],f=[],g=n;const v=new Map,h=new Set,T=()=>{f=Array.from(v.values()),h.forEach(e=>e())},E=e=>{l=null==e?[]:l.filter(t=>t!==e),T()},b=e=>{const{toastId:n,onOpen:s,updateId:a,children:r}=e.props,i=null==a;e.staleId&&v.delete(e.staleId),v.set(n,e),l=[...l,e.props.toastId].filter(t=>t!==e.staleId),T(),o(y(e,i?\"added\":\"updated\")),i&&u(s)&&s(t(r)&&r.props)};return{id:e,props:g,observe:e=>(h.add(e),()=>h.delete(e)),toggle:(e,t)=>{v.forEach(n=>{null!=t&&t!==n.props.toastId||u(n.toggle)&&n.toggle(e)})},removeToast:E,toasts:v,clearQueue:()=>{r-=i.length,i=[]},buildToast:(n,l)=>{if((t=>{let{containerId:n,toastId:o,updateId:s}=t;const a=n?n!==e:1!==e,r=v.has(o)&&null==s;return a||r})(l))return;const{toastId:f,updateId:h,data:I,staleId:_,delay:C}=l,L=()=>{E(f)},N=null==h;N&&r++;const $={...g,style:g.toastStyle,key:s++,...Object.fromEntries(Object.entries(l).filter(e=>{let[t,n]=e;return null!=n})),toastId:f,updateId:h,data:I,closeToast:L,isIn:!1,className:p(l.className||g.toastClassName),bodyClassName:p(l.bodyClassName||g.bodyClassName),progressClassName:p(l.progressClassName||g.progressClassName),autoClose:!l.isLoading&&(w=l.autoClose,k=g.autoClose,!1===w||c(w)&&w>0?w:k),deleteToast(){const e=v.get(f),{onClose:n,children:s}=e.props;u(n)&&n(t(s)&&s.props),o(y(e,\"removed\")),v.delete(f),r--,r<0&&(r=0),i.length>0?b(i.shift()):T()}};var w,k;$.closeButton=g.closeButton,!1===l.closeButton||m(l.closeButton)?$.closeButton=l.closeButton:!0===l.closeButton&&($.closeButton=!m(g.closeButton)||g.closeButton);let P=n;t(n)&&!d(n.type)?P=a(n,{closeToast:L,toastProps:$,data:I}):u(n)&&(P=n({closeToast:L,toastProps:$,data:I}));const M={content:P,props:$,staleId:_};g.limit&&g.limit>0&&r>g.limit&&N?i.push(M):c(C)?setTimeout(()=>{b(M)},C):b(M)},setProps(e){g=e},setToggle:(e,t)=>{v.get(e).toggle=t},isToastActive:e=>l.some(t=>t===e),getSnapshot:()=>g.newestOnTop?f.reverse():f}}(n,e,E);v.set(n,s);const r=s.observe(o);return h.forEach(e=>_(e.content,e.options)),h=[],()=>{r(),v.delete(n)}},setProps(e){var t;null==(t=v.get(n))||t.setProps(e)},getSnapshot(){var e;return null==(e=v.get(n))?void 0:e.getSnapshot()}}}(e)).current;i(e);const l=r(o,s,s);return{getToastToRender:function(e){if(!l)return[];const t=new Map;return l.forEach(e=>{const{position:n}=e.props;t.has(n)||t.set(n,[]),t.get(n).push(e)}),Array.from(t,t=>e(t[0],t[1]))},isToastActive:I,count:null==l?void 0:l.length}}function N(e){const[t,o]=i(!1),[a,r]=i(!1),l=n(null),c=n({start:0,delta:0,removalDistance:0,canCloseOnClick:!0,canDrag:!1,didMove:!1}).current,{autoClose:d,pauseOnHover:u,closeToast:p,onClick:m,closeOnClick:f}=e;var g,y;function h(){o(!0)}function T(){o(!1)}function E(n){const o=l.current;c.canDrag&&o&&(c.didMove=!0,t&&T(),c.delta=\"x\"===e.draggableDirection?n.clientX-c.start:n.clientY-c.start,c.start!==n.clientX&&(c.canCloseOnClick=!1),o.style.transform=`translate3d(${\"x\"===e.draggableDirection?`${c.delta}px, var(--y)`:`0, calc(${c.delta}px + var(--y))`},0)`,o.style.opacity=\"\"+(1-Math.abs(c.delta/c.removalDistance)))}function b(){document.removeEventListener(\"pointermove\",E),document.removeEventListener(\"pointerup\",b);const t=l.current;if(c.canDrag&&c.didMove&&t){if(c.canDrag=!1,Math.abs(c.delta)>c.removalDistance)return r(!0),e.closeToast(),void e.collapseAll();t.style.transition=\"transform 0.2s, opacity 0.2s\",t.style.removeProperty(\"transform\"),t.style.removeProperty(\"opacity\")}}null==(y=v.get((g={id:e.toastId,containerId:e.containerId,fn:o}).containerId||1))||y.setToggle(g.id,g.fn),s(()=>{if(e.pauseOnFocusLoss)return document.hasFocus()||T(),window.addEventListener(\"focus\",h),window.addEventListener(\"blur\",T),()=>{window.removeEventListener(\"focus\",h),window.removeEventListener(\"blur\",T)}},[e.pauseOnFocusLoss]);const I={onPointerDown:function(t){if(!0===e.draggable||e.draggable===t.pointerType){c.didMove=!1,document.addEventListener(\"pointermove\",E),document.addEventListener(\"pointerup\",b);const n=l.current;c.canCloseOnClick=!0,c.canDrag=!0,n.style.transition=\"none\",\"x\"===e.draggableDirection?(c.start=t.clientX,c.removalDistance=n.offsetWidth*(e.draggablePercent/100)):(c.start=t.clientY,c.removalDistance=n.offsetHeight*(80===e.draggablePercent?1.5*e.draggablePercent:e.draggablePercent)/100)}},onPointerUp:function(t){const{top:n,bottom:o,left:s,right:a}=l.current.getBoundingClientRect();\"touchend\"!==t.nativeEvent.type&&e.pauseOnHover&&t.clientX>=s&&t.clientX<=a&&t.clientY>=n&&t.clientY<=o?T():h()}};return d&&u&&(I.onMouseEnter=T,e.stacked||(I.onMouseLeave=h)),f&&(I.onClick=e=>{m&&m(e),c.canCloseOnClick&&p()}),{playToast:h,pauseToast:T,isRunning:t,preventExitTransition:a,toastRef:l,eventHandlers:I}}function $(t){let{delay:n,isRunning:o,closeToast:s,type:a=\"default\",hide:r,className:i,style:c,controlledProgress:d,progress:p,rtl:m,isIn:f,theme:g}=t;const y=r||d&&0===p,v={...c,animationDuration:`${n}ms`,animationPlayState:o?\"running\":\"paused\"};d&&(v.transform=`scaleX(${p})`);const h=l(\"Toastify__progress-bar\",d?\"Toastify__progress-bar--controlled\":\"Toastify__progress-bar--animated\",`Toastify__progress-bar-theme--${g}`,`Toastify__progress-bar--${a}`,{\"Toastify__progress-bar--rtl\":m}),T=u(i)?i({rtl:m,type:a,defaultClassName:h}):l(h,i),E={[d&&p>=1?\"onTransitionEnd\":\"onAnimationEnd\"]:d&&p<1?null:()=>{f&&s()}};return e.createElement(\"div\",{className:\"Toastify__progress-bar--wrp\",\"data-hidden\":y},e.createElement(\"div\",{className:`Toastify__progress-bar--bg Toastify__progress-bar-theme--${g} Toastify__progress-bar--${a}`}),e.createElement(\"div\",{role:\"progressbar\",\"aria-hidden\":y?\"true\":\"false\",\"aria-label\":\"notification timer\",className:T,style:v,...E}))}let w=1;const k=()=>\"\"+w++;function P(e){return e&&(d(e.toastId)||c(e.toastId))?e.toastId:k()}function M(e,t){return _(e,t),t.toastId}function x(e,t){return{...t,type:t&&t.type||e,toastId:P(t)}}function A(e){return(t,n)=>M(t,x(e,n))}function B(e,t){return M(e,x(\"default\",t))}B.loading=(e,t)=>M(e,x(\"default\",{isLoading:!0,autoClose:!1,closeOnClick:!1,closeButton:!1,draggable:!1,...t})),B.promise=function(e,t,n){let o,{pending:s,error:a,success:r}=t;s&&(o=d(s)?B.loading(s,n):B.loading(s.render,{...n,...s}));const i={isLoading:null,autoClose:null,closeOnClick:null,closeButton:null,draggable:null},l=(e,t,s)=>{if(null==t)return void B.dismiss(o);const a={type:e,...i,...n,data:s},r=d(t)?{render:t}:t;return o?B.update(o,{...a,...r}):B(r.render,{...a,...r}),s},c=u(e)?e():e;return c.then(e=>l(\"success\",r,e)).catch(e=>l(\"error\",a,e)),c},B.success=A(\"success\"),B.info=A(\"info\"),B.error=A(\"error\"),B.warning=A(\"warning\"),B.warn=B.warning,B.dark=(e,t)=>M(e,x(\"default\",{theme:\"dark\",...t})),B.dismiss=function(e){!function(e){var t;if(b()){if(null==e||d(t=e)||c(t))v.forEach(t=>{t.removeToast(e)});else if(e&&(\"containerId\"in e||\"id\"in e)){const t=v.get(e.containerId);t?t.removeToast(e.id):v.forEach(t=>{t.removeToast(e.id)})}}else h=h.filter(t=>null!=e&&t.options.toastId!==e)}(e)},B.clearWaitingQueue=function(e){void 0===e&&(e={}),v.forEach(t=>{!t.props.limit||e.containerId&&t.id!==e.containerId||t.clearQueue()})},B.isActive=I,B.update=function(e,t){void 0===t&&(t={});const n=((e,t)=>{var n;let{containerId:o}=t;return null==(n=v.get(o||1))?void 0:n.toasts.get(e)})(e,t);if(n){const{props:o,content:s}=n,a={delay:100,...o,...t,toastId:t.toastId||e,updateId:k()};a.toastId!==e&&(a.staleId=e);const r=a.render||s;delete a.render,M(r,a)}},B.done=e=>{B.update(e,{progress:1})},B.onChange=function(e){return T.add(e),()=>{T.delete(e)}},B.play=e=>C(!0,e),B.pause=e=>C(!1,e);const O=\"undefined\"!=typeof window?o:s,D=t=>{let{theme:n,type:o,isLoading:s,...a}=t;return e.createElement(\"svg\",{viewBox:\"0 0 24 24\",width:\"100%\",height:\"100%\",fill:\"colored\"===n?\"currentColor\":`var(--toastify-icon-color-${o})`,...a})},z={info:function(t){return e.createElement(D,{...t},e.createElement(\"path\",{d:\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\"}))},warning:function(t){return e.createElement(D,{...t},e.createElement(\"path\",{d:\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\"}))},success:function(t){return e.createElement(D,{...t},e.createElement(\"path\",{d:\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\"}))},error:function(t){return e.createElement(D,{...t},e.createElement(\"path\",{d:\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"}))},spinner:function(){return e.createElement(\"div\",{className:\"Toastify__spinner\"})}},R=n=>{const{isRunning:o,preventExitTransition:s,toastRef:r,eventHandlers:i,playToast:c}=N(n),{closeButton:d,children:p,autoClose:m,onClick:f,type:g,hideProgressBar:y,closeToast:v,transition:h,position:T,className:E,style:b,bodyClassName:I,bodyStyle:_,progressClassName:C,progressStyle:L,updateId:w,role:k,progress:P,rtl:M,toastId:x,deleteToast:A,isIn:B,isLoading:O,closeOnClick:D,theme:R}=n,S=l(\"Toastify__toast\",`Toastify__toast-theme--${R}`,`Toastify__toast--${g}`,{\"Toastify__toast--rtl\":M},{\"Toastify__toast--close-on-click\":D}),H=u(E)?E({rtl:M,position:T,type:g,defaultClassName:S}):l(S,E),F=function(e){let{theme:n,type:o,isLoading:s,icon:r}=e,i=null;const l={theme:n,type:o};return!1===r||(u(r)?i=r({...l,isLoading:s}):t(r)?i=a(r,l):s?i=z.spinner():(e=>e in z)(o)&&(i=z[o](l))),i}(n),X=!!P||!m,Y={closeToast:v,type:g,theme:R};let q=null;return!1===d||(q=u(d)?d(Y):t(d)?a(d,Y):function(t){let{closeToast:n,theme:o,ariaLabel:s=\"close\"}=t;return e.createElement(\"button\",{className:`Toastify__close-button Toastify__close-button--${o}`,type:\"button\",onClick:e=>{e.stopPropagation(),n(e)},\"aria-label\":s},e.createElement(\"svg\",{\"aria-hidden\":\"true\",viewBox:\"0 0 14 16\"},e.createElement(\"path\",{fillRule:\"evenodd\",d:\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"})))}(Y)),e.createElement(h,{isIn:B,done:A,position:T,preventExitTransition:s,nodeRef:r,playToast:c},e.createElement(\"div\",{id:x,onClick:f,\"data-in\":B,className:H,...i,style:b,ref:r},e.createElement(\"div\",{...B&&{role:k},className:u(I)?I({type:g}):l(\"Toastify__toast-body\",I),style:_},null!=F&&e.createElement(\"div\",{className:l(\"Toastify__toast-icon\",{\"Toastify--animate-icon Toastify__zoom-enter\":!O})},F),e.createElement(\"div\",null,p)),q,e.createElement($,{...w&&!X?{key:`pb-${w}`}:{},rtl:M,theme:R,delay:m,isRunning:o,isIn:B,closeToast:v,hide:y,type:g,style:L,className:C,controlledProgress:X,progress:P||0})))},S=function(e,t){return void 0===t&&(t=!1),{enter:`Toastify--animate Toastify__${e}-enter`,exit:`Toastify--animate Toastify__${e}-exit`,appendPosition:t}},H=g(S(\"bounce\",!0)),F=g(S(\"slide\",!0)),X=g(S(\"zoom\")),Y=g(S(\"flip\")),q={position:\"top-right\",transition:H,autoClose:5e3,closeButton:!0,pauseOnHover:!0,pauseOnFocusLoss:!0,draggable:\"touch\",draggablePercent:80,draggableDirection:\"x\",role:\"alert\",theme:\"light\"};function Q(t){let o={...q,...t};const s=t.stacked,[a,r]=i(!0),c=n(null),{getToastToRender:d,isToastActive:m,count:f}=L(o),{className:g,style:y,rtl:v,containerId:h}=o;function T(e){const t=l(\"Toastify__toast-container\",`Toastify__toast-container--${e}`,{\"Toastify__toast-container--rtl\":v});return u(g)?g({position:e,rtl:v,defaultClassName:t}):l(t,p(g))}function E(){s&&(r(!0),B.play())}return O(()=>{if(s){var e;const t=c.current.querySelectorAll('[data-in=\"true\"]'),n=12,s=null==(e=o.position)?void 0:e.includes(\"top\");let r=0,i=0;Array.from(t).reverse().forEach((e,t)=>{const o=e;o.classList.add(\"Toastify__toast--stacked\"),t>0&&(o.dataset.collapsed=`${a}`),o.dataset.pos||(o.dataset.pos=s?\"top\":\"bot\");const l=r*(a?.2:1)+(a?0:n*t);o.style.setProperty(\"--y\",`${s?l:-1*l}px`),o.style.setProperty(\"--g\",`${n}`),o.style.setProperty(\"--s\",\"\"+(1-(a?i:0))),r+=o.offsetHeight,i+=.025})}},[a,f,s]),e.createElement(\"div\",{ref:c,className:\"Toastify\",id:h,onMouseEnter:()=>{s&&(r(!1),B.pause())},onMouseLeave:E},d((t,n)=>{const o=n.length?{...y}:{...y,pointerEvents:\"none\"};return e.createElement(\"div\",{className:T(t),style:o,key:`container-${t}`},n.map(t=>{let{content:n,props:o}=t;return e.createElement(R,{...o,stacked:s,collapseAll:E,isIn:m(o.toastId,o.containerId),style:o.style,key:`toast-${o.key}`},n)}))}))}export{H as Bounce,Y as Flip,z as Icons,F as Slide,Q as ToastContainer,X as Zoom,f as collapseToast,g as cssTransition,B as toast,N as useToast,L as useToastContainer};\n//# sourceMappingURL=react-toastify.esm.mjs.map\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","nameRe","nameReJsx","emptyOptions","jsx","test","re","empty","replace","Schema","property","normal","space","this","merge","definitions","definition","assign","normalize","toLowerCase","undefined","Info","attribute","booleanish","boolean","commaOrSpaceSeparated","commaSeparated","defined","mustUseProperty","number","overloadedBoolean","spaceSeparated","powers","increment","checks","keys","DefinedInfo","mask","index","super","mark","check","values","create","properties","normals","entries","info","transform","attributes","includes","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","_","slice","caseSensitiveTransform","caseInsensitiveTransform","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","className","cols","colSpan","content","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","default","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loading","loop","low","manifest","max","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","shape","size","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","start","step","style","tabIndex","title","translate","type","typeMustMatch","useMap","width","wrap","writingSuggestions","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","code","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","d","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","end","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","result","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xmlns","xmlnsxlink","xmlnsXLink","xml","xmlBase","xmlLang","xmlSpace","cap","dash","valid","kebab","$0","camelcase","charAt","toUpperCase","hastToReact","pointEnd","point","pointStart","node","position","line","column","stringifyPosition","pos","VFileMessage","Error","causeOrReason","optionsOrParentOrPlace","reason","legacyCause","place","ancestors","cause","message","ruleId","source","indexOf","parent","fatal","file","stack","actual","expected","note","url","own","emptyMap","Map","tableElements","Set","tableCellElement","docs","toJsxRuntime","tree","Fragment","TypeError","filePath","development","jsxDEV","props","isStaticChildren","children","columnNumber","fileName","lineNumber","developmentCreate","jsxs","fn","productionCreate","state","components","elementAttributeNameCase","evaluater","createEvaluater","ignoreInvalidStyle","passKeys","passNode","schema","stylePropertyNameCase","tableCellAlignToStyle","one","parentSchema","tagName","push","findComponentFromName","alignValue","prop","createProperty","has","createElementProps","createChildren","child","thing","addNode","addChildren","pop","estree","expression","body","evaluateExpression","crashEstree","mdxExpression","objectExpression","argument","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","root","countsByName","count","get","set","Type","rest","dashes","find","Number","isNaN","settings","join","padRight","padLeft","trim","styleObject","reactCompat","error","parseStyle","String","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","allowExpression","identifiers","split","computed","Boolean","optional","toDash","urlAttributes","icon","includeImageAlt","includeHtml","splice","remove","items","parameters","chunkStart","unshift","SpliceBuffer","initial","left","right","RangeError","shift","setCursor","stop","POSITIVE_INFINITY","reverse","concat","deleteCount","Math","trunc","removed","chunkedPush","item","pushMany","unshiftMany","n","subtokenize","eventsArray","jumps","lineIndex","otherIndex","otherEvent","subevents","more","events","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","token","context","startPosition","startPositions","tokenizer","parser","_contentTypeTextTrailing","childEvents","gaps","stream","previous","current","adjust","breaks","sliceStream","next","defineSkip","_gfmTasklistFirstContentOfListItem","write","combineExtensions","extensions","all","syntaxExtension","extension","hook","constructs","existing","before","add","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","fromCharCode","factorySpace","effects","ok","limit","enter","consume","exit","tokenize","contentStart","attempt","contentInitial","lineStart","self","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","flowContinue","writeToChild","endOfFile","seen","entry","nok","document","disable","null","blankLine","partial","after","resolve","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","resolveAllLineSuffixes","notText","atBreak","extraResolver","chunks","tabs","bufferIndex","chunk","charCodeAt","_bufferIndex","_index","thematicBreak","marker","sequence","onBlank","notBlank","furtherBlankLines","initialBlankLine","notInCurrentItem","indentConstruct","initialSize","atMarker","inside","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","normalizeIdentifier","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","resolveTo","heading","paragraph","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","createElement","decodeNamedCharacterReference","characterReference","innerHTML","character","textContent","numeric","characterEscape","lineEnding","called","labelEnd","newEvents","close","_inactive","_balanced","group","insideSpan","labelStart","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","openingSequence","closingSequence","use","nextEvents","_close","_open","movePoint","attentionMarkers","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","returnState","instruction","tagOpen","declaration","commentEnd","comment","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","tailExitIndex","headEnterIndex","between","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","constructFactory","construct","addResult","onsuccessfulcheck","accountForPotentialSkip","fields","expandTabs","atTab","serializeChunks","main","expectedCode","startIndex","startBufferIndex","endIndex","endBufferIndex","view","head","sliceChunks","chunkIndex","go","restore","onreturn","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","map","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","search","decodeNumericCharacterReference","base","parseInt","fromCodePoint","characterEscapeOrReference","decode","$1","$2","hex","fromMarkdown","encoding","config","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcharacterreference","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","depth","setextHeadingSlurpLineEnding","codePointAt","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","fragment","characterReferenceType","ordered","spread","compiler","postprocess","atCarriageReturn","match","endPosition","TextDecoder","lastIndex","exec","ceil","preprocess","combined","remarkParse","doc","env","globalThis","deserialize","serialized","$","out","unpair","Date","flags","RegExp","BigInt","Uint8Array","DataView","deserializer","EMPTY","asString","shouldSkip","TYPE","serialize","json","lossy","strict","pair","valueOf","toJSON","toISOString","serializer","structuredClone","any","normalizeUri","skip","encodeURIComponent","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","convert","castFactory","tests","apply","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","testFunction","looksLikeANode","CONTINUE","EXIT","SKIP","visitParents","visitor","factory","parents","visit","subresult","grandparents","toResult","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","revert","subtype","suffix","contents","listItemLoose","tab","trimLines","last","lines","trimLine","blockquote","patch","applyData","break","delete","footnoteReference","clobberPrefix","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","table","firstRow","tableContent","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","hName","hChildren","hProperties","defaultUnknownHandler","nodes","trimMarkdownSpaceStart","toHast","footnoteById","handlers","handle","passThrough","shallow","unknownHandler","createState","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","tailTail","dataFootnotes","footer","remarkRehype","destination","hastTree","run","bail","getPrototypeOf","Symbol","toStringTag","iterator","trough","fns","pipeline","middlewareIndex","callback","output","middleware","wrapped","fnExpectsCallback","done","then","middelware","minpath","basename","extname","assertPath","seenNonSlash","firstNonSlashEnd","extnameIndex","dirname","unmatchedSlash","startPart","startDot","preDotState","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","sep","JSON","stringify","minproc","cwd","isUrl","fileUrlOrPath","protocol","auth","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","isUint8Array","history","messages","stored","assertNonEmpty","assertPart","stem","fail","part","CallableInstance","proto","setPrototypeOf","Processor","Compiler","Parser","attachers","freezeIndex","frozen","namespace","transformers","attacher","assertUnfrozen","freeze","transformer","parse","realFile","vfile","assertParser","process","assertCompiler","executor","Promise","reject","parseTree","realDone","compileTree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugin","plugins","entryIndex","primary","currentPrimary","unified","asyncName","looksLikeAVFile","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","processor","createProcessor","createFile","post","rehypePlugins","remarkPlugins","remarkRehypeOptions","allowedElements","allowElement","disallowedElements","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","deprecation","colon","questionMark","numberSign","ccount","findAndReplace","ignored","pairs","tupleOrList","tuple","toExpression","toFunction","toPairs","pairIndex","grandparent","change","matchObject","input","global","inConstruct","notInConstruct","enterLiteralAutolink","enterLiteralAutolinkValue","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","exitLiteralAutolinkEmail","exitLiteralAutolink","transformGfmAutolinkLiterals","findUrl","findEmail","domain","parts","isCorrectDomain","trailExec","trail","closingParenIndex","openingParens","closingParens","splitUrl","atext","email","enterFootnoteCallString","enterFootnoteCall","enterFootnoteDefinitionLabelString","enterFootnoteDefinition","exitFootnoteCallString","exitFootnoteCall","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","tracker","createTracker","move","subexit","safe","associationId","gfmFootnoteToMarkdown","firstLineBlank","indentLines","containerFlow","mapAll","mapExceptFirst","unsafe","blank","peek","constructsWithoutStrikethrough","enterStrikethrough","exitStrikethrough","handleDelete","containerPhrasing","defaultStringLength","toAlignment","listInScope","none","_1","checkQuote","quote","encodeCharacterReference","encodeInfo","outside","outsideKind","insideKind","checkEmphasis","betweenHead","betweenTail","attentionEncodeSurroundingInfo","compilePattern","formatLinkAsAutolink","resourceLink","checkBullet","bullet","checkRule","rule","phrasing","checkStrong","fence","checkFence","fences","formatCodeAsIndented","repeat","substring","longestStreak","encode","rank","literalWithBreak","setext","formatHeadingAsSetext","closeAtx","bulletCurrent","bulletOrdered","checkBulletOrdered","bulletOther","checkBulletOther","useDifferentMarker","bulletLastUsed","firstListItem","indexStack","listItemIndent","checkListItemIndent","incrementListMarker","some","ruleSpaces","repetition","ruleRepetition","checkRuleRepetition","enterTable","_align","inTable","exitTable","enterRow","enterCell","exitCodeText","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","handleTableCell","row","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","columnIndex","delimiterStart","delimiterEnd","markdownTable","exitCheck","exitParagraphWithTaskListItem","firstParaghraph","sibling","listItemWithTaskListItem","checkable","checkbox","wwwPrefix","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharacterReferenceStart","trailBracketAfter","trailCharacterReferenceInside","emailDomainDotTrail","wwwAutolink","previousWww","previousUnbalanced","wwwAfter","protocolAutolink","previousProtocol","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","emailAutolink","dot","gfmAtext","previousEmail","emailDomain","emailDomainAfter","emailDomainDot","_gfmAutolinkLiteralWalkedInto","indent","tokenizePotentialGfmFootnoteCall","gfmFootnotes","resolveToPotentialGfmFootnoteCall","replacement","tokenizeGfmFootnoteCall","callStart","callData","callEscape","tokenizeDefinitionStart","labelAtMarker","whitespaceAfter","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","gfmStrikethrough","single","singleTilde","strikethrough","EditMap","editMap","at","addImplementation","sort","a","b","vecs","element","gfmTableAlign","inDelimiterRow","alignIndex","tokenizeTable","sizeB","bodyRowStart","headRowBefore","headRowBreak","headRowStart","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","resolveTable","currentTable","currentBody","currentCell","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","flushTableEnd","flushCell","range","rowEnd","previousCell","groupName","getPoint","relatedStart","relatedEnd","valueToken","tableBody","exits","related","tasklistCheck","spaceThenNonSpace","remarkGfm","micromarkExtensions","fromMarkdownExtensions","toMarkdownExtensions","gfm","literalAutolink","literalAutolinkEmail","literalAutolinkHttp","literalAutolinkWww","gfmFootnoteCallString","gfmFootnoteCall","gfmFootnoteDefinitionLabelString","gfmFootnoteDefinition","tableData","tableHeader","taskListCheckValueChecked","taskListCheckValueUnchecked","gfmToMarkdown","CONTENT_BLOCK_TYPES","CONTENT_TYPE_CONFIG","blogs","collection","COLLECTION_TYPES","ARTICLES","backRoute","backLabel","CASE_STUDIES","newsroom","NEWSROOM","_content$cover$format","_content$cover$format2","_content$blocks","location","useLocation","searchParams","URLSearchParams","formData","setFormData","useState","fullName","phoneNumber","hospitalName","pathSegments","slug","handleInputChange","e","handleBackNavigation","referrer","currentDomain","window","startsWith","navigate","useStrapiItem","getTitle","getDescription","description","getMarkdownComponents","p","_ref","React","h1","_ref2","h2","_ref3","h3","_ref4","ul","_ref5","ol","_ref6","li","_ref7","_ref8","img","_ref9","STRAPI_URL","_ref10","isExternalLink","_ref11","em","_ref12","_ref13","pre","_ref14","hr","_ref15","Navbar","Footer","ToastContainer","backgroundImage","prodigiImg","prodigiScanner","category","dateString","toLocaleDateString","year","month","day","formatDate","publishedAt","author","cover","formats","large","alternativeText","blocks","block","_block$media","_block$media$data$att","_block$media$data$att2","_block$files","__component","ReactMarkdown","files","_file$attributes","_file$attributes2","renderContentBlock","bgImg","preventDefault","console","log","payload","Email","response","NocoFetch","createDemoRequestEntry","demoRequestAlertAttributes","client_name","mobile_number","slackAlerts","demoRequestAlert","status","toast","style_to_object_1","__importDefault","mod","__esModule","utilities_1","StyleToJS","camelCase","CUSTOM_PROPERTY_REGEX","HYPHEN_REGEX","NO_HYPHEN_REGEX","VENDOR_PREFIX_REGEX","MS_VENDOR_PREFIX_REGEX","capitalize","trimHyphen","skipCamelCase","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","str","lineno","updatePosition","Position","whitespace","errorsList","msg","err","filename","silent","m","comments","c","val","ret","decl","decls","declarations","inline_style_parser_1","hasIterator","forEach","t","f","o","u","g","appendPosition","collapse","l","collapseDuration","preventExitTransition","nodeRef","isIn","playToast","v","h","T","E","removeEventListener","classList","addEventListener","scrollHeight","s","requestAnimationFrame","minHeight","transition","margin","setTimeout","containerId","toastId","theme","isLoading","I","isToastActive","buildToast","C","toggle","L","subscribe","getSnapshot","setProps","onOpen","updateId","staleId","observe","removeToast","toasts","clearQueue","delay","N","toastStyle","fromEntries","closeToast","toastClassName","bodyClassName","progressClassName","autoClose","w","deleteToast","closeButton","P","toastProps","M","setToggle","newestOnTop","getToastToRender","delta","removalDistance","canCloseOnClick","canDrag","didMove","pauseOnHover","closeOnClick","draggableDirection","clientX","clientY","abs","collapseAll","removeProperty","pauseOnFocusLoss","hasFocus","onPointerDown","pointerType","offsetWidth","draggablePercent","offsetHeight","onPointerUp","top","bottom","getBoundingClientRect","nativeEvent","stacked","pauseToast","isRunning","toastRef","eventHandlers","hide","controlledProgress","progress","rtl","animationDuration","animationPlayState","defaultClassName","A","B","promise","pending","success","render","dismiss","update","catch","warning","warn","dark","clearWaitingQueue","isActive","play","pause","O","D","spinner","R","hideProgressBar","bodyStyle","progressStyle","S","H","F","X","Y","q","stopPropagation","ref","Q","querySelectorAll","dataset","collapsed"],"sourceRoot":""}