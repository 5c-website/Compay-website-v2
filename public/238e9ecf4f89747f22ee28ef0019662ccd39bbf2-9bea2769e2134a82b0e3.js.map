{"version":3,"file":"238e9ecf4f89747f22ee28ef0019662ccd39bbf2-9bea2769e2134a82b0e3.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/lucide-react/dist/esm/icons/chevron-down.js","webpack://gatsby-starter-default/./src/assets/logo.png","webpack://gatsby-starter-default/./src/components/Navbar.jsx","webpack://gatsby-starter-default/./node_modules/lucide-react/dist/esm/shared/src/utils.js","webpack://gatsby-starter-default/./node_modules/lucide-react/dist/esm/defaultAttributes.js","webpack://gatsby-starter-default/./node_modules/lucide-react/dist/esm/Icon.js","webpack://gatsby-starter-default/./node_modules/lucide-react/dist/esm/createLucideIcon.js","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/use-will-change/WillChangeMotionValue.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["/**\n * @license lucide-react v0.439.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ChevronDown = createLucideIcon(\"ChevronDown\", [\n  [\"path\", { d: \"m6 9 6 6 6-6\", key: \"qrunsl\" }]\n]);\n\nexport { ChevronDown as default };\n//# sourceMappingURL=chevron-down.js.map\n","export default __webpack_public_path__ + \"static/logo-bea9d4b60ca57c5d67897fa73520579f.png\";","import React, { useState, useRef } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Link } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport { ChevronDown, Globe } from \"lucide-react\";\nimport data from \"../assets/logo.png\"\n\nconst Navbar = () => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [dropdownOpen, setDropdownOpen] = useState(null);\n\n  const menuRef = useRef(null);\n  const submenuRef = useRef(null);\n\n  const handleDropdownClick = (index) => {\n    setDropdownOpen(dropdownOpen === index ? null : index);\n  };\n\n  const handleMouseEnter = (index) => {\n    setDropdownOpen(index);\n  };\n\n  const handleMouseLeave = () => {\n    setTimeout(() => {\n      if (\n        !menuRef.current?.matches(\":hover\") &&\n        !submenuRef.current?.matches(\":hover\")\n      ) {\n        setDropdownOpen(null);\n      }\n    }, 100);\n  };\n\n  const navItems = [\n    {\n      label: \"Company\",\n      subItems: [\"About Us\", \"Careers\", \"Life at-5C\"],\n      route: \"/company/about-us/\",\n    },\n    {\n      label: \"AI Products\",\n      subItems: [\n        \"Bionic Suite\",\n        \"Prodigi\",\n        \"Osteocheck\",\n        \"Kronos\",\n        \"Protocall\",\n      ],\n      route: \"/ai-products\",\n    },\n    { label: \"Borderless Radiology\", route: \"/borderless-radiology\" },\n    {\n      label: \"Impact\",\n      subItems: [\"Blogs\", \"Case Study\", \"Newsroom\"],\n      route: \"/impact/blogs\",\n    },\n    { label: \"Contact Us\", route: \"/contact-us\" },\n  ];\n\n  const location = useLocation();\n\n  const isActiveRoute = (item) => {\n    if (item.route && location.pathname.includes(item.route)) {\n      return true;\n    }\n    if (item.subItems) {\n      return item.subItems.some((subItem) =>\n        location.pathname.includes(\n          `/${item.label.toLowerCase().replace(\" \", \"-\")}/${subItem\n            .toLowerCase()\n            .replace(\" \", \"-\")}`\n        )\n      );\n    }\n    return false;\n  };\n\n  return (\n    <header className=\"bg-white shadow-sm fixed top-0 z-50 w-[100%]\">\n      <div className=\"lg:mx-auto px-4 py-3 flex items-center justify-between w-[100%] lg:w-[90%]\">\n        <Link to=\"/\">\n          <motion.img\n            initial={{ opacity: 0, x: -50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.5 }}\n            src=\"../../static/logo.png\"\n            alt=\"5C Logo\"\n            className=\"h-12 md:h-[60px]\"\n          />\n        </Link>\n        <nav className=\"hidden md:flex flex-1 justify-center\">\n          <div className=\"flex md:space-x-2 lg:space-x-6\">\n            {navItems.map((item, index) => (\n              <div\n                key={index}\n                className=\"relative\"\n                onMouseEnter={() => handleMouseEnter(index)}\n                onMouseLeave={handleMouseLeave}\n              >\n                <motion.div\n                  initial={{ opacity: 0, y: -20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  className={`cursor-pointer px-3 py-2 rounded ${\n                    isActiveRoute(item)\n                      ? \"bg-red-600 text-white\"\n                      : \"text-[#0D50B6]\"\n                  }`}\n                >\n                  <Link to={item.route} className=\"text-[12px] md:text-[14px] lg:text-[16px]\">{item.label}</Link>\n                  {item.subItems && <ChevronDown className=\"inline h-4 w-4\" />}\n                </motion.div>\n                {item.subItems && dropdownOpen === index && (\n                  <motion.div\n                    initial={{ opacity: 0, y: -20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"absolute bg-white min-w-[150px] text-center shadow-lg p-4 mt-2 left-[-25px] top-[43px] 2xl:top-[50px] rounded-lg z-50\"\n                    onMouseEnter={() => setDropdownOpen(index)}\n                    onMouseLeave={handleMouseLeave}\n                    ref={submenuRef}\n                  >\n                    <ul className=\"space-y-2\">\n                      {item.subItems.map((subItem, subIndex) => (\n                        <li key={subIndex}>\n                          <Link\n                            to={`/${item.label\n                              .toLowerCase()\n                              .replace(\" \", \"-\")}/${subItem\n                              .toLowerCase()\n                              .replace(\" \", \"-\")}`}\n                            className=\"block transition-colors duration-300 text-[#0D50B6] text-[12px] md:text-[14px] lg:text-[16px]\"\n                          >\n                            {subItem}\n                          </Link>\n                        </li>\n                      ))}\n                    </ul>\n                  </motion.div>\n                )}\n              </div>\n            ))}\n          </div>\n        </nav>\n\n        <div className=\"flex items-center space-x-4 md:block hidden\">\n          <motion.button\n            className=\"bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition-colors duration-300\"\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            <Link to=\"/sign-in\">Sign In</Link>\n          </motion.button>\n          {/* <motion.button\n            className=\"inline-flex justify-center items-center border border-gray-300 px-2 py-2 gap-2 rounded-md hover:bg-gray-100 transition-colors duration-300\"\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            Global\n            <Globe className=\"h-5 w-5 mr-0\" />\n          </motion.button> */}\n        </div>\n\n        <div className=\"md:hidden\">\n          <button\n            onClick={() => setIsMenuOpen(!isMenuOpen)}\n            className=\"text-gray-600 focus:outline-none\"\n          >\n            <svg\n              className=\"h-8 w-8\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d={\n                  isMenuOpen\n                    ? \"M6 18L18 6M6 6l12 12\"\n                    : \"M4 6h16M4 12h16M4 18h16\"\n                }\n              />\n            </svg>\n          </button>\n        </div>\n      </div>\n\n      {isMenuOpen && (\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.3 }}\n          className=\"md:hidden bg-white shadow-lg p-4\"\n        >\n          <ul className=\"space-y-4\">\n            {navItems.map((item, index) => (\n              <li key={index}>\n                <div\n                  onClick={() => handleDropdownClick(index)}\n                  className=\"flex justify-between items-center\"\n                >\n                  <Link\n                    to={item.route}\n                    className=\"block text-gray-600 hover:text-gray-900 transition-colors duration-300\"\n                  >\n                    {item.label}\n                  </Link>\n                  {item.subItems && <ChevronDown className=\"h-4 w-4\" />}\n                </div>\n\n                {item.subItems && dropdownOpen === index && (\n                  <motion.ul\n                    initial={{ opacity: 0, y: -10 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"mt-2 ml-4 space-y-2\"\n                  >\n                    {item.subItems.map((subItem, subIndex) => (\n                      <li key={subIndex}>\n                        <Link\n                          to={`/${item.label\n                            .toLowerCase()\n                            .replace(\" \", \"-\")}/${subItem\n                            .toLowerCase()\n                            .replace(\" \", \"-\")}`}\n                          className=\"block text-gray-600 hover:text-gray-900 transition-colors duration-300\"\n                        >\n                          {subItem}\n                        </Link>\n                      </li>\n                    ))}\n                  </motion.ul>\n                )}\n              </li>\n            ))}\n          </ul>\n\n          <div className=\"mt-4 flex flex-col space-y-2\">\n            <motion.button\n              className=\"bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition-colors duration-300\"\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              <Link to=\"/sign-in\">Sign In</Link>\n            </motion.button>\n            {/* <motion.button\n              className=\"inline-flex justify-center items-center border border-gray-300 px-2 py-2 gap-2 rounded-md hover:bg-gray-100 transition-colors duration-300\"\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              Global\n              <Globe className=\"h-5 w-5 mr-0\" />\n            </motion.button> */}\n          </div>\n        </motion.div>\n      )}\n    </header>\n  );\n};\n\nexport default Navbar;","/**\n * @license lucide-react v0.439.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst mergeClasses = (...classes) => classes.filter((className, index, array) => {\n  return Boolean(className) && array.indexOf(className) === index;\n}).join(\" \");\n\nexport { mergeClasses, toKebabCase };\n//# sourceMappingURL=utils.js.map\n","/**\n * @license lucide-react v0.439.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * @license lucide-react v0.439.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\nimport { mergeClasses } from './shared/src/utils.js';\n\nconst Icon = forwardRef(\n  ({\n    color = \"currentColor\",\n    size = 24,\n    strokeWidth = 2,\n    absoluteStrokeWidth,\n    className = \"\",\n    children,\n    iconNode,\n    ...rest\n  }, ref) => {\n    return createElement(\n      \"svg\",\n      {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: mergeClasses(\"lucide\", className),\n        ...rest\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n        ...Array.isArray(children) ? children : [children]\n      ]\n    );\n  }\n);\n\nexport { Icon as default };\n//# sourceMappingURL=Icon.js.map\n","/**\n * @license lucide-react v0.439.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport { mergeClasses, toKebabCase } from './shared/src/utils.js';\nimport Icon from './Icon.js';\n\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ className, ...props }, ref) => createElement(Icon, {\n      ref,\n      iconNode,\n      className: mergeClasses(`lucide-${toKebabCase(iconName)}`, className),\n      ...props\n    })\n  );\n  Component.displayName = `${iconName}`;\n  return Component;\n};\n\nexport { createLucideIcon as default };\n//# sourceMappingURL=createLucideIcon.js.map\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return options.type === \"spring\" || !isWaapiSupportedEasing(options.ease);\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff, \n/**\n * Currently used to remove values from will-change when an animation ends.\n * Preferably this would be handled by event listeners on the MotionValue\n * but these aren't consistent enough yet when considering the different ways\n * an animation can be cancelled.\n */\nonEnd) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n            onEnd && onEnd();\n        },\n        onStop: onEnd,\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff, addValueToWillChange(visualElement, key)));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n            this.removeWillChange = addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        var _a;\n        (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false, addValueToWillChange(this.visualElement, axis)));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete &&\n        ((_a = window.MotionHasOptimisedAnimation) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        wantsHandoff.current = false;\n        // This ensures all future calls to animateChanges() will run in useEffect\n        if (!scheduleHandoffComplete) {\n            scheduleHandoffComplete = true;\n            queueMicrotask(completeHandoff);\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.MotionHandoffIsComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\nimport { addUniqueItem } from '../../utils/array.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction addWillChange(willChange, name) {\n    const memberName = getWillChangeName(name);\n    if (memberName) {\n        addUniqueItem(willChange, memberName);\n    }\n}\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    const willChange = [];\n    const applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const key in target) {\n                    addWillChange(willChange, key);\n                }\n            });\n        }\n        if (willChange.length) {\n            values.willChange = willChange.join(\",\");\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            this.isRenderScheduled = false;\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.isRenderScheduled = false;\n        this.scheduleRender = () => {\n            if (!this.isRenderScheduled) {\n                this.isRenderScheduled = true;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.5.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.5.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.5.4\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, isNullish, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\nfunction isNullish(v) {\n    return v == null;\n}\n\nexport { colorRegex, floatRegex, isNullish, isString, sanitize, singleColorRegex };\n","import { MotionValue } from '../index.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\nimport { removeItem } from '../../utils/array.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.output = [];\n        this.counts = new Map();\n    }\n    add(name) {\n        const styleName = getWillChangeName(name);\n        if (!styleName)\n            return;\n        /**\n         * Update counter. Each value has an indepdent counter\n         * as multiple sources could be requesting the same value\n         * gets added to will-change.\n         */\n        const prevCount = this.counts.get(styleName) || 0;\n        this.counts.set(styleName, prevCount + 1);\n        if (prevCount === 0) {\n            this.output.push(styleName);\n            this.update();\n        }\n        /**\n         * Prevents the remove function from being called multiple times.\n         */\n        let hasRemoved = false;\n        return () => {\n            if (hasRemoved)\n                return;\n            hasRemoved = true;\n            const newCount = this.counts.get(styleName) - 1;\n            this.counts.set(styleName, newCount);\n            if (newCount === 0) {\n                removeItem(this.output, styleName);\n                this.update();\n            }\n        };\n    }\n    update() {\n        this.set(this.output.length ? this.output.join(\", \") : \"auto\");\n    }\n}\n\nexport { WillChangeMotionValue };\n","import { WillChangeMotionValue } from './WillChangeMotionValue.mjs';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    let willChange = visualElement.getValue(\"willChange\");\n    /**\n     * If we haven't created a willChange MotionValue, and the we haven't been\n     * manually provided one, create one.\n     */\n    if (!willChange && !((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange)) {\n        willChange = new WillChangeMotionValue(\"auto\");\n        visualElement.addValue(\"willChange\", willChange);\n    }\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name)) {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["ChevronDown","d","key","Navbar","isMenuOpen","setIsMenuOpen","useState","dropdownOpen","setDropdownOpen","menuRef","useRef","submenuRef","handleMouseLeave","setTimeout","_menuRef$current","_submenuRef$current","current","matches","navItems","label","subItems","route","location","useLocation","isActiveRoute","item","pathname","includes","some","subItem","toLowerCase","replace","React","className","Link","to","motion","img","initial","opacity","x","animate","transition","duration","src","alt","map","index","onMouseEnter","handleMouseEnter","onMouseLeave","div","y","delay","ref","subIndex","button","whileHover","scale","whileTap","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","handleDropdownClick","ul","mergeClasses","classes","filter","array","Boolean","indexOf","join","defaultAttributes","xmlns","width","height","Icon","forwardRef","color","size","absoluteStrokeWidth","children","iconNode","rest","createElement","Number","tag","attrs","Array","isArray","createLucideIcon","iconName","Component","props","string","displayName","acceleratedValues","Set","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","ease","getDefaultTransition","valueKey","keyframes","length","transform","has","startsWith","Math","sqrt","instantAnimationState","isNotNull","value","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","undefined","memo","callback","result","isAnimatable","name","complex","test","BaseAnimation","constructor","autoplay","repeatDelay","options","this","isStopped","hasAttemptedResolve","createdAt","now","updateFinishedPromise","calcStartTime","resolvedAt","resolved","_resolved","onKeyframesResolved","velocity","onComplete","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","i","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","max","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","clamp","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","e","pow","f","g","initialGuess","rootIterations","approximateRoot","isNaN","durationKeys","physicsKeys","isSpringType","keys","spring","restDelta","origin","target","state","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","calculatedDuration","next","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","v","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","backOut","backIn","reverse","backInOut","mirror","easingLookup","linear","circIn","circInOut","circOut","anticipate","p","easingDefinitionToFunction","definition","x1","y1","x2","y2","hueToRgb","q","mixImmediate","mixLinearColor","from","fromExpo","expo","colorTypes","hex","rgba","hsla","asRGBA","find","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber","getMixer","mixComplex","mixArray","mixObject","output","numValues","blendValue","template","createTransformer","originStats","targetStats","indexes","var","number","values","mixVisibility","pipe","_a","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","mixers","customMixer","mixerFactory","numMixers","easingFunction","push","createMixers","interpolator","progressInRange","progress","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","easing","splice","frameloopDriver","update","passTimestamp","timestamp","start","stop","isProcessing","generators","decay","tween","percentToProgress","percent","MainThreadAnimation","super","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","resolver","cancel","teardown","onStop","motionValue","element","KeyframeResolver$1","KeyframeResolver","scheduleResolve","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","time","newTime","driver","newSpeed","hasChanged","isScheduled","resume","onPlay","complete","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Object","hasOwnProperty","call","Element","prototype","AcceleratedAnimation","DOMKeyframesResolver","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","animation","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","set","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","getProps","supportsScrollTimeline","window","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","forEach","cancelTimeline","methodName","controls","animateMotionValue","isHandoff","onEnd","valueTransition","getVelocity","shouldSkip","skipAnimations","get","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","visualElement","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","getValue","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","animateVariant","variant","presenceContext","custom","getAnimation","getChildAnimations","variantChildren","forwardDelay","delayChildren","staggerChildren","staggerDirection","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","when","first","last","sortNodePosition","animateVisualElement","resolvedDefinition","optimizedAppearDataAttribute","getOptimisedAppearId","isKeyframesTarget","isTransitionDefined","_delay","getValueTransition","acos","mirrorEasing","reverseEasing","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","step","schedule","keepAlive","immediate","queue","add","delete","process","frameData","clear","createRenderStep","read","resolveKeyframes","preRender","render","postRender","processBatch","useManualTiming","performance","frame","cancelFrame","requestAnimationFrame","clearTime","queueMicrotask","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","args","_target","isAnimationControls","shallowCompare","prev","prevLength","isVariantLabel","variantPriorityOrder","variantProps","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","context","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","prop","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isPrimaryPointer","event","pointerType","isPrimary","extractEventInfo","pointType","point","addPointerInfo","handler","addDomEvent","eventName","passive","addEventListener","removeEventListener","addPointerEvent","distance","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","isRefObject","SCALE_MIN","SCALE_MAX","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","axis","calcAxisDelta","source","originPoint","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","parent","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","createDelta","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","has2DTranslate","z","rotate","rotateX","rotateY","skewX","skewY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","measureViewportBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","parseFloat","removeWillChange","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","px","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","assign","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","circ","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","depth","FlatTree","isDirty","resolveMotionValue","unwrappedValue","toValue","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","rotateZ","resetValues","getProjectionStyles","styleProp","_b","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","document","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","addHoverEvent","callbackName","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","onTapStart","removePointerListener","removeFocusListener","focus","onFocus","isFocusVisible","onBlur","hover","MotionConfigContext","isStatic","reducedMotion","MotionContext","LazyContext","strict","scheduleHandoffComplete","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","updateFeatures","completeHandoff","allowProjection","useMotionRef","externalRef","isControllingVariants","isVariantNode","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","layoutGroupId","lowercaseSVGElements","isSVGComponent","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","willChange","applyWillChange","charAt","substring","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","addWillChange","memberName","forEachDefinition","list","shouldApplyWillChange","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","trim","buildTransform","originZ","dashKeys","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","default","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","numVariantProps","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","isRenderScheduled","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","addValue","hasValue","existingValue","jump","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","getPropertyValue","childSubscription","textContent","SVGVisualElement","getAttribute","splitCSSVariableRegex","getVariableValue","token","fallback","match","exec","token1","token2","parseCSSVariable","trimmed","invalidTemplates","unresolvedKeyframes","readKeyframes","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","measureKeyframe","measureEndState","finalKeyframeIndex","removedTransforms","unsetTransformName","unsetTransformValue","camelToDash","str","checkStringStartsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","positionalValues","paddingLeft","paddingRight","paddingTop","paddingBottom","translateX","translateY","getAnimatableNone","defaultValueType","defaultValueTypes","backgroundColor","outlineColor","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","dimensionValueTypes","vw","vh","findDimensionValueType","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","translateZ","perspective","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","testValueType","transformPropOrder","transformProps","toResolve","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","elementsToMeasure","transformsToRestore","restore","scrollTo","readAllKeyframes","flushKeyframeResolvers","isAsync","isComplete","currentValue","valueAsRead","setFinalKeyframe","renderEndStyles","resolveVariant","getValueState","resolveVariantFromProps","setMotionValue","setTarget","MotionGlobalConfig","addUniqueItem","removeItem","warning","invariant","isBrowser","isNumericalString","isZeroValueString","any","combineFunctions","transformers","toFromDifference","isCustomValue","resolveFinalValueInKeyframes","SubscriptionManager","subscriptions","numSubscriptions","getSize","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","useConstant","init","useIsomorphicLayoutEffect","useLayoutEffect","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","r","parseInt","alpha$1","rgbUnit","clampRgbUnit","isColorString","testProp","splitColor","aName","bName","cName","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","parsedValue","parseComplexValue","numSections","convertNumbersToZero","parsed","transformer","createUnitType","endsWith","degrees","progressPercentage","sanitize","floatRegex","colorRegex","singleColorRegex","isString","isNullish","WillChangeMotionValue","counts","styleName","prevCount","hasRemoved","newCount","addValueToWillChange","isWillChangeMotionValue","getWillChangeName","isMotionValue"],"sourceRoot":""}