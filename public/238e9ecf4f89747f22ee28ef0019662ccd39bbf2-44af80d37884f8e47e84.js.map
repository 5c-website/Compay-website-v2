{"version":3,"file":"238e9ecf4f89747f22ee28ef0019662ccd39bbf2-44af80d37884f8e47e84.js","mappings":"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","sources":["webpack://gatsby-starter-default/./public/img/sign_in/client.png","webpack://gatsby-starter-default/./public/img/sign_in/rads.png","webpack://gatsby-starter-default/./src/components/SignInModal.tsx","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://gatsby-starter-default/./node_modules/lucide-react/dist/esm/icons/chevron-down.js","webpack://gatsby-starter-default/./src/components/Navbar.jsx","webpack://gatsby-starter-default/./node_modules/lucide-react/dist/esm/shared/src/utils.js","webpack://gatsby-starter-default/./node_modules/lucide-react/dist/esm/defaultAttributes.js","webpack://gatsby-starter-default/./node_modules/lucide-react/dist/esm/Icon.js","webpack://gatsby-starter-default/./node_modules/lucide-react/dist/esm/createLucideIcon.js","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/use-will-change/WillChangeMotionValue.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["export default __webpack_public_path__ + \"static/client-c5a273c6cc5933899745a3ea0b736968.png\";","export default __webpack_public_path__ + \"static/rads-3e49dff6b62b85ebd475f507e46da6dc.png\";","import React from \"react\";\nimport clientImage from \"../../public/img/sign_in/client.png\";\nimport radImage from \"../../public/img/sign_in/rads.png\";\n\nconst SignInModal = () => {\n  return (\n    <div className=\"bg-white rounded-lg p-4 sm:p-8 w-full max-w-md sm:max-w-2xl\">\n      <div className=\"flex gap-8 flex-col sm:flex-row justify-between sm:space-x-8 space-y-8 sm:space-y-0\">\n        <div\n          className=\"flex flex-col items-center cursor-pointer group\"\n          onClick={() => window.open(\"https://client.5cnetwork.com\", \"_blank\")}\n        >\n          <div className=\"w-36 h-36 sm:w-48 sm:h-48 bg-white-200 rounded-full flex items-center justify-center mb-4 overflow-hidden transition-transform duration-300 ease-in-out group-hover:scale-110\">\n            <img\n              src={clientImage}\n              alt=\"Hospital icon\"\n              className=\"w-28 h-18 sm:w-36 sm:h-36 transition-transform duration-300 ease-in-out group-hover:scale-110\"\n            />\n          </div>\n          <p className=\"text-center font-semibold text-sm sm:text-base\">\n            HOSPITAL/DIAGNOSTIC CENTRE\n          </p>\n        </div>\n\n        <div\n          className=\"flex flex-col items-center cursor-pointer group\"\n          onClick={() => window.open(\"https://rads.5cnetwork.com\", \"_blank\")}\n        >\n          <div className=\"w-36 h-36 sm:w-48 sm:h-48 bg-white-200 rounded-full flex items-center justify-center mb-4 overflow-hidden transition-transform duration-300 ease-in-out group-hover:scale-110\">\n            <img\n              src={radImage}\n              alt=\"Radiologist icon\"\n              className=\"w-28 h-28 sm:w-36 sm:h-36 transition-transform duration-300 ease-in-out group-hover:scale-110\"\n            />\n          </div>\n          <p className=\"text-center font-semibold text-sm sm:text-base\">\n            RADIOLOGIST\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignInModal;\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? [Math.random()] : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, exitBeforeEnter, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = presentChildren === renderedChildren ||\n                presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","/**\n * @license lucide-react v0.439.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ChevronDown = createLucideIcon(\"ChevronDown\", [\n  [\"path\", { d: \"m6 9 6 6 6-6\", key: \"qrunsl\" }]\n]);\n\nexport { ChevronDown as default };\n//# sourceMappingURL=chevron-down.js.map\n","import React, { useState, useRef } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { Link } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport { ChevronDown } from \"lucide-react\";\nimport SignInModal from \"./SignInModal\";\n\nconst Navbar = () => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [dropdownOpen, setDropdownOpen] = useState(null);\n  const [showSignIn, setShowSignIn] = useState(false);\n\n  const menuRef = useRef(null);\n  const submenuRef = useRef(null);\n\n  const handleDropdownClick = (index) => {\n    setDropdownOpen(dropdownOpen === index ? null : index);\n  };\n\n  const handleMouseEnter = (index) => {\n    setDropdownOpen(index);\n  };\n\n  const handleMouseLeave = () => {\n    // setTimeout(() => {\n    console.log(\"leave function--->\");\n    if (\n      !menuRef.current?.matches(\":hover\") &&\n      !submenuRef.current?.matches(\":hover\")\n    ) {\n      setDropdownOpen(null);\n    }\n    // }, 100);\n  };\n\n  const navItems = [\n    {\n      label: \"Company\",\n      subItems: [\"About Us\", \"Careers\", \"Life at-5C\"],\n      route: \"/company/about-us/\",\n    },\n    {\n      label: \"AI Products\",\n      subItems: [\n        \"Bionic Suite\",\n        \"Prodigi\",\n        \"Osteocheck\",\n        \"Kronos\",\n        \"Protocall\",\n      ],\n      route: \"/ai-products\",\n    },\n    { label: \"Borderless Radiology\", route: \"/borderless-radiology\" },\n    {\n      label: \"Impact\",\n      subItems: [\"Blogs\", \"Case Study\", \"Newsroom\"],\n      route: \"/impact/blogs\",\n    },\n    { label: \"Contact Us\", route: \"/contact-us\" },\n  ];\n\n  const location = useLocation();\n\n  const isActiveRoute = (item) => {\n    if (item.route && location.pathname.includes(item.route)) {\n      return true;\n    }\n    if (item.subItems) {\n      return item.subItems.some((subItem) =>\n        location.pathname.includes(\n          `/${item.label.toLowerCase().replace(\" \", \"-\")}/${subItem\n            .toLowerCase()\n            .replace(\" \", \"-\")}`\n        )\n      );\n    }\n    return false;\n  };\n\n  return (\n    <>\n      <header className=\"bg-white shadow-sm fixed top-0 z-40 w-[100%]\">\n        <div className=\"lg:mx-auto px-4 py-3 flex items-center justify-between w-[100%] lg:w-[90%]\">\n          <Link to=\"/\">\n            <motion.img\n              initial={{ opacity: 0, x: -50 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.5 }}\n              src=\"../../static/logo.png\"\n              alt=\"5C Logo\"\n              className=\"h-12 md:h-[60px]\"\n            />\n          </Link>\n          <nav className=\"hidden md:flex flex-1 justify-center\">\n            <div className=\"flex md:space-x-2 lg:space-x-6\">\n              {navItems.map((item, index) => (\n                <div\n                  key={index}\n                  className=\"relative\"\n                  onMouseEnter={() => handleMouseEnter(index)}\n                  onMouseLeave={handleMouseLeave}\n                >\n                  <motion.div\n                    initial={{ opacity: 0, y: -20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.5, delay: index * 0.1 }}\n                    className={`cursor-pointer px-3 py-2 rounded ${\n                      isActiveRoute(item)\n                        ? \"bg-red-600 text-white\"\n                        : \"text-[#0D50B6]\"\n                    }`}\n                  >\n                    <Link\n                      to={item.route}\n                      className=\"text-[12px] md:text-[14px] lg:text-[16px]\"\n                    >\n                      {item.label}\n                    </Link>\n                    {item.subItems && (\n                      <ChevronDown className=\"inline h-4 w-4\" />\n                    )}\n                  </motion.div>\n                  {item.subItems && dropdownOpen === index && (\n                    <motion.div\n                      initial={{ opacity: 0, y: -20 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      transition={{ duration: 0.3 }}\n                      className=\"absolute border-2 bg-white min-w-[150px] text-center shadow-lg p-4 left-[-25px] top-[40px] 2xl:top-[40px] rounded-lg z-50\"\n                      ref={submenuRef}\n                    >\n                      <ul className=\"space-y-2\">\n                        {item.subItems.map((subItem, subIndex) => (\n                          <li key={subIndex}>\n                            <Link\n                              to={`/${item.label\n                                .toLowerCase()\n                                .replace(\" \", \"-\")}/${subItem\n                                .toLowerCase()\n                                .replace(\" \", \"-\")}`}\n                              className=\"block transition-colors duration-300 text-[#0D50B6] text-[12px] md:text-[14px] lg:text-[16px]\"\n                            >\n                              {subItem}\n                            </Link>\n                          </li>\n                        ))}\n                      </ul>\n                    </motion.div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </nav>\n\n          <div className=\"flex items-center space-x-4 md:block hidden\">\n            <motion.button\n              className=\"bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition-colors duration-300\"\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={() => setShowSignIn(true)}\n            >\n              Sign In\n            </motion.button>\n          </div>\n\n          <div className=\"md:hidden\">\n            <button\n              onClick={() => setIsMenuOpen(!isMenuOpen)}\n              className=\"text-gray-600 focus:outline-none\"\n            >\n              <svg\n                className=\"h-8 w-8\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d={\n                    isMenuOpen\n                      ? \"M6 18L18 6M6 6l12 12\"\n                      : \"M4 6h16M4 12h16M4 18h16\"\n                  }\n                />\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        {isMenuOpen && (\n          <motion.div\n            initial={{ opacity: 0, y: -20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3 }}\n            className=\"md:hidden bg-white shadow-lg p-4\"\n          >\n            <ul className=\"space-y-4\">\n              {navItems.map((item, index) => (\n                <li key={index}>\n                  <div\n                    onClick={() => handleDropdownClick(index)}\n                    className=\"flex justify-between items-center\"\n                  >\n                    <Link\n                      to={item.route}\n                      className=\"block text-gray-600 hover:text-gray-900 transition-colors duration-300\"\n                    >\n                      {item.label}\n                    </Link>\n                    {item.subItems && <ChevronDown className=\"h-4 w-4\" />}\n                  </div>\n\n                  {item.subItems && dropdownOpen === index && (\n                    <motion.ul\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      transition={{ duration: 0.3 }}\n                      className=\"mt-2 ml-4 space-y-2\"\n                    >\n                      {item.subItems.map((subItem, subIndex) => (\n                        <li key={subIndex}>\n                          <Link\n                            to={`/${item.label\n                              .toLowerCase()\n                              .replace(\" \", \"-\")}/${subItem\n                              .toLowerCase()\n                              .replace(\" \", \"-\")}`}\n                            className=\"block text-gray-600 hover:text-gray-900 transition-colors duration-300\"\n                          >\n                            {subItem}\n                          </Link>\n                        </li>\n                      ))}\n                    </motion.ul>\n                  )}\n                </li>\n              ))}\n            </ul>\n\n            <div className=\"mt-4 flex flex-col space-y-2\">\n              <motion.button\n                className=\"bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition-colors duration-300\"\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                onClick={() => setShowSignIn(true)}\n              >\n                Sign In\n              </motion.button>\n            </div>\n          </motion.div>\n        )}\n      </header>\n\n      <AnimatePresence>\n        {showSignIn && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ duration: 0.3 }}\n            className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center\"\n            onClick={() => setShowSignIn(false)}\n          >\n            <motion.div\n              initial={{ scale: 0.9, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.9, opacity: 0 }}\n              transition={{ duration: 0.3 }}\n              onClick={(e) => e.stopPropagation()}\n            >\n              <SignInModal />\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </>\n  );\n};\n\nexport default Navbar;\n","/**\n * @license lucide-react v0.439.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst mergeClasses = (...classes) => classes.filter((className, index, array) => {\n  return Boolean(className) && array.indexOf(className) === index;\n}).join(\" \");\n\nexport { mergeClasses, toKebabCase };\n//# sourceMappingURL=utils.js.map\n","/**\n * @license lucide-react v0.439.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * @license lucide-react v0.439.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\nimport { mergeClasses } from './shared/src/utils.js';\n\nconst Icon = forwardRef(\n  ({\n    color = \"currentColor\",\n    size = 24,\n    strokeWidth = 2,\n    absoluteStrokeWidth,\n    className = \"\",\n    children,\n    iconNode,\n    ...rest\n  }, ref) => {\n    return createElement(\n      \"svg\",\n      {\n        ref,\n        ...defaultAttributes,\n        width: size,\n        height: size,\n        stroke: color,\n        strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n        className: mergeClasses(\"lucide\", className),\n        ...rest\n      },\n      [\n        ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n        ...Array.isArray(children) ? children : [children]\n      ]\n    );\n  }\n);\n\nexport { Icon as default };\n//# sourceMappingURL=Icon.js.map\n","/**\n * @license lucide-react v0.439.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport { mergeClasses, toKebabCase } from './shared/src/utils.js';\nimport Icon from './Icon.js';\n\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ className, ...props }, ref) => createElement(Icon, {\n      ref,\n      iconNode,\n      className: mergeClasses(`lucide-${toKebabCase(iconName)}`, className),\n      ...props\n    })\n  );\n  Component.displayName = `${iconName}`;\n  return Component;\n};\n\nexport { createLucideIcon as default };\n//# sourceMappingURL=createLucideIcon.js.map\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return options.type === \"spring\" || !isWaapiSupportedEasing(options.ease);\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff, \n/**\n * Currently used to remove values from will-change when an animation ends.\n * Preferably this would be handled by event listeners on the MotionValue\n * but these aren't consistent enough yet when considering the different ways\n * an animation can be cancelled.\n */\nonEnd) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n            onEnd && onEnd();\n        },\n        onStop: onEnd,\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff, addValueToWillChange(visualElement, key)));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n            this.removeWillChange = addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        var _a;\n        (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false, addValueToWillChange(this.visualElement, axis)));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete &&\n        ((_a = window.MotionHasOptimisedAnimation) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        wantsHandoff.current = false;\n        // This ensures all future calls to animateChanges() will run in useEffect\n        if (!scheduleHandoffComplete) {\n            scheduleHandoffComplete = true;\n            queueMicrotask(completeHandoff);\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.MotionHandoffIsComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\nimport { addUniqueItem } from '../../utils/array.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction addWillChange(willChange, name) {\n    const memberName = getWillChangeName(name);\n    if (memberName) {\n        addUniqueItem(willChange, memberName);\n    }\n}\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    const willChange = [];\n    const applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const key in target) {\n                    addWillChange(willChange, key);\n                }\n            });\n        }\n        if (willChange.length) {\n            values.willChange = willChange.join(\",\");\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            this.isRenderScheduled = false;\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.isRenderScheduled = false;\n        this.scheduleRender = () => {\n            if (!this.isRenderScheduled) {\n                this.isRenderScheduled = true;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.5.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.5.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.5.4\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, isNullish, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\nfunction isNullish(v) {\n    return v == null;\n}\n\nexport { colorRegex, floatRegex, isNullish, isString, sanitize, singleColorRegex };\n","import { MotionValue } from '../index.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\nimport { removeItem } from '../../utils/array.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.output = [];\n        this.counts = new Map();\n    }\n    add(name) {\n        const styleName = getWillChangeName(name);\n        if (!styleName)\n            return;\n        /**\n         * Update counter. Each value has an indepdent counter\n         * as multiple sources could be requesting the same value\n         * gets added to will-change.\n         */\n        const prevCount = this.counts.get(styleName) || 0;\n        this.counts.set(styleName, prevCount + 1);\n        if (prevCount === 0) {\n            this.output.push(styleName);\n            this.update();\n        }\n        /**\n         * Prevents the remove function from being called multiple times.\n         */\n        let hasRemoved = false;\n        return () => {\n            if (hasRemoved)\n                return;\n            hasRemoved = true;\n            const newCount = this.counts.get(styleName) - 1;\n            this.counts.set(styleName, newCount);\n            if (newCount === 0) {\n                removeItem(this.output, styleName);\n                this.update();\n            }\n        };\n    }\n    update() {\n        this.set(this.output.length ? this.output.join(\", \") : \"auto\");\n    }\n}\n\nexport { WillChangeMotionValue };\n","import { WillChangeMotionValue } from './WillChangeMotionValue.mjs';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    let willChange = visualElement.getValue(\"willChange\");\n    /**\n     * If we haven't created a willChange MotionValue, and the we haven't been\n     * manually provided one, create one.\n     */\n    if (!willChange && !((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange)) {\n        willChange = new WillChangeMotionValue(\"auto\");\n        visualElement.addValue(\"willChange\", willChange);\n    }\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name)) {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["SignInModal","React","className","onClick","window","open","src","clientImage","alt","radImage","PopChildMeasure","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","current","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","jsx","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","delete","Math","random","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","AnimatePresence","exitBeforeEnter","presentChildren","presentKeys","map","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","i","length","includes","get","join","exitingChildren","nextChildren","splice","forceRender","LayoutGroupContext","L","Fragment","undefined","has","isEveryExitComplete","isExitComplete","ChevronDown","d","Navbar","isMenuOpen","setIsMenuOpen","dropdownOpen","setDropdownOpen","showSignIn","setShowSignIn","menuRef","submenuRef","handleMouseLeave","_menuRef$current","_submenuRef$current","console","log","matches","navItems","label","subItems","route","location","useLocation","isActiveRoute","item","pathname","some","subItem","toLowerCase","replace","Link","to","motion","img","opacity","x","animate","transition","duration","index","onMouseEnter","handleMouseEnter","onMouseLeave","div","y","delay","subIndex","button","whileHover","scale","whileTap","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","handleDropdownClick","ul","exit","e","stopPropagation","mergeClasses","classes","filter","array","Boolean","indexOf","defaultAttributes","xmlns","Icon","forwardRef","color","absoluteStrokeWidth","iconNode","rest","Number","tag","attrs","Array","isArray","createLucideIcon","iconName","Component","string","displayName","acceleratedValues","Set","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","ease","getDefaultTransition","valueKey","keyframes","transform","startsWith","sqrt","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","memo","callback","result","isAnimatable","name","complex","test","BaseAnimation","constructor","autoplay","repeatDelay","options","isStopped","hasAttemptedResolve","createdAt","now","updateFinishedPromise","calcStartTime","resolvedAt","resolved","_resolved","onKeyframesResolved","velocity","onComplete","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","max","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","clamp","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","pow","f","g","initialGuess","rootIterations","approximateRoot","isNaN","durationKeys","physicsKeys","isSpringType","keys","spring","restDelta","origin","target","state","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","calculatedDuration","next","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","v","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","backOut","backIn","reverse","backInOut","mirror","easingLookup","linear","circIn","circInOut","circOut","anticipate","p","easingDefinitionToFunction","definition","x1","y1","x2","y2","hueToRgb","q","mixImmediate","mixLinearColor","from","fromExpo","expo","colorTypes","hex","rgba","hsla","asRGBA","find","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber","getMixer","mixComplex","mixArray","mixObject","output","numValues","blendValue","template","createTransformer","originStats","targetStats","indexes","var","number","mixVisibility","pipe","_a","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","progress","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","easing","frameloopDriver","update","passTimestamp","timestamp","start","stop","isProcessing","generators","decay","tween","percentToProgress","percent","MainThreadAnimation","super","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","resolver","cancel","teardown","onStop","motionValue","KeyframeResolver$1","KeyframeResolver","scheduleResolve","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","time","newTime","driver","newSpeed","hasChanged","isScheduled","resume","onPlay","complete","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Object","hasOwnProperty","call","Element","prototype","AcceleratedAnimation","DOMKeyframesResolver","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","animation","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","getProps","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","cancelTimeline","methodName","controls","animateMotionValue","isHandoff","onEnd","valueTransition","getVelocity","shouldSkip","skipAnimations","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","visualElement","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","getValue","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","delayChildren","staggerChildren","staggerDirection","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","notify","animateChildren","when","first","last","sortNodePosition","animateVisualElement","resolvedDefinition","optimizedAppearDataAttribute","getOptimisedAppearId","isKeyframesTarget","isTransitionDefined","_delay","getValueTransition","createContext","transformPagePoint","isStatic","reducedMotion","acos","mirrorEasing","reverseEasing","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","step","schedule","keepAlive","immediate","queue","add","process","frameData","clear","createRenderStep","read","resolveKeyframes","preRender","postRender","processBatch","useManualTiming","performance","frame","cancelFrame","requestAnimationFrame","clearTime","queueMicrotask","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","args","_target","isAnimationControls","shallowCompare","prev","prevLength","isVariantLabel","variantPriorityOrder","variantProps","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createState","buildResolvedTypeValues","animateChanges","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","prop","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileDrag","whileFocus","Feature","node","isMounted","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","unmount","arguments","prevIsPresent","prevPresenceContext","exitAnimation","isPrimaryPointer","event","pointerType","isPrimary","extractEventInfo","pointType","point","addPointerInfo","handler","addDomEvent","eventName","passive","addEventListener","removeEventListener","addPointerEvent","distance","PanSession","handlers","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","isRefObject","SCALE_MIN","SCALE_MAX","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","axis","calcAxisDelta","source","originPoint","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","parent","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","createDelta","createBox","eachAxis","convertBoundingBoxToBox","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","has2DTranslate","z","rotate","rotateX","rotateY","skewX","skewY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","measureViewportBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","parseFloat","removeWillChange","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","px","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","assign","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useEffect","useCallback","usePresence","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","circ","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","depth","FlatTree","isDirty","resolveMotionValue","unwrappedValue","toValue","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","rotateZ","resetValues","getProjectionStyles","styleProp","_b","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","addHoverEvent","callbackName","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","onTapStart","removePointerListener","removeFocusListener","focus","onFocus","isFocusVisible","onBlur","hover","MotionContext","LazyContext","strict","scheduleHandoffComplete","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","updateFeatures","completeHandoff","allowProjection","useMotionRef","externalRef","isControllingVariants","isVariantNode","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","layoutGroupId","lowercaseSVGElements","isSVGComponent","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","willChange","applyWillChange","charAt","substring","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","addWillChange","memberName","forEachDefinition","list","shouldApplyWillChange","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","trim","buildTransform","originZ","dashKeys","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","default","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","numVariantProps","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","isRenderScheduled","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","addValue","hasValue","existingValue","jump","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","getPropertyValue","childSubscription","textContent","SVGVisualElement","getAttribute","splitCSSVariableRegex","getVariableValue","token","fallback","match","exec","token1","token2","parseCSSVariable","trimmed","invalidTemplates","unresolvedKeyframes","readKeyframes","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","measureKeyframe","measureEndState","finalKeyframeIndex","removedTransforms","unsetTransformName","unsetTransformValue","camelToDash","str","checkStringStartsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","positionalValues","paddingLeft","paddingRight","paddingTop","paddingBottom","translateX","translateY","getAnimatableNone","defaultValueType","defaultValueTypes","backgroundColor","outlineColor","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","dimensionValueTypes","vw","vh","findDimensionValueType","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","translateZ","perspective","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","testValueType","transformPropOrder","transformProps","toResolve","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","elementsToMeasure","transformsToRestore","restore","scrollTo","readAllKeyframes","flushKeyframeResolvers","isAsync","currentValue","valueAsRead","setFinalKeyframe","renderEndStyles","resolveVariant","getValueState","resolveVariantFromProps","setMotionValue","setTarget","MotionGlobalConfig","addUniqueItem","removeItem","warning","invariant","isBrowser","isNumericalString","isZeroValueString","any","combineFunctions","transformers","toFromDifference","isCustomValue","resolveFinalValueInKeyframes","SubscriptionManager","subscriptions","numSubscriptions","getSize","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","useConstant","init","useIsomorphicLayoutEffect","useLayoutEffect","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","r","parseInt","alpha$1","rgbUnit","clampRgbUnit","isColorString","testProp","splitColor","aName","bName","cName","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","parsedValue","parseComplexValue","numSections","convertNumbersToZero","parsed","transformer","createUnitType","endsWith","degrees","progressPercentage","sanitize","floatRegex","colorRegex","singleColorRegex","isString","isNullish","WillChangeMotionValue","counts","styleName","prevCount","hasRemoved","newCount","addValueToWillChange","isWillChangeMotionValue","getWillChangeName","isMotionValue"],"sourceRoot":""}