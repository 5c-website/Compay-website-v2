{"version":3,"file":"component---src-pages-impact-content-jsx-d579a17026dfe968b86d.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/impact/content.jsx"],"sourcesContent":["import React from \"react\";\nimport { useLocation, navigate } from \"@reach/router\";\nimport Navbar from \"../../components/Navbar\";\nimport Footer from \"../../components/Footer\";\nimport { useStrapiItem } from \"../../hooks/use-strapi\";\nimport { COLLECTION_TYPES } from \"../../services/strapi\";\nimport { STRAPI_URL } from \"../../utils/constants\";\n\nconst CONTENT_BLOCK_TYPES = {\n  RICH_TEXT: \"shared.rich-text\",\n  QUOTE: \"shared.quote\",\n  MEDIA: \"shared.media\",\n  SLIDER: \"shared.slider\",\n};\n\n// Map content types to their collections and back routes\nconst CONTENT_TYPE_CONFIG = {\n  blogs: {\n    collection: COLLECTION_TYPES.ARTICLES,\n    backRoute: \"/impact/blogs\",\n    backLabel: \"Back to Blogs\",\n  },\n  \"case-studies\": {\n    collection: COLLECTION_TYPES.CASE_STUDIES,\n    backRoute: \"/impact/case-studies\",\n    backLabel: \"Back to Case Studies\",\n  },\n  newsroom: {\n    collection: COLLECTION_TYPES.NEWSROOM,\n    backRoute: \"/impact/newsroom\",\n    backLabel: \"Back to Newsroom\",\n  },\n};\n\nfunction UniversalContentDetail() {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  // Extract slug and content type from URL\n  const pathSegments = location.pathname.split(\"/\").filter(Boolean);\n  const slug = pathSegments[pathSegments.length - 1];\n\n  // Get content type from URL params or try to detect from referrer/path\n  const contentType =\n    searchParams.get(\"type\") ||\n    searchParams.get(\"contentType\") ||\n    detectContentTypeFromPath(location.pathname) ||\n    \"blogs\"; // default to blogs\n\n  const config = CONTENT_TYPE_CONFIG[contentType] || CONTENT_TYPE_CONFIG.blogs;\n\n  console.log(\"Universal Content Debug:\", {\n    pathname: location.pathname,\n    slug,\n    contentType,\n    collection: config.collection,\n  });\n\n  const {\n    data: content,\n    loading,\n    error,\n  } = useStrapiItem(config.collection, slug);\n\n  function detectContentTypeFromPath(pathname) {\n    if (pathname.includes(\"case-study\")) return \"case-studies\";\n    if (pathname.includes(\"newsroom\")) return \"newsroom\";\n    if (pathname.includes(\"blog\")) return \"blogs\";\n    return null;\n  }\n\n  const renderContentBlock = (block) => {\n    switch (block.__component) {\n      case CONTENT_BLOCK_TYPES.RICH_TEXT:\n        return (\n          <div key={block.id} className=\"prose prose-lg max-w-none mb-6\">\n            <div\n              className=\"text-gray-700 leading-relaxed\"\n              dangerouslySetInnerHTML={{ __html: block.body || \"\" }}\n            />\n          </div>\n        );\n\n      case CONTENT_BLOCK_TYPES.QUOTE:\n        return (\n          <blockquote\n            key={block.id}\n            className=\"border-l-4 border-[#1B3366] pl-6 my-8 italic bg-gray-50 p-6 rounded-r-lg\"\n          >\n            <p className=\"text-xl mb-4 leading-relaxed text-gray-800\">\n              {block.body}\n            </p>\n            {block.title && (\n              <footer className=\"text-lg font-medium text-gray-600\">\n                — {block.title}\n              </footer>\n            )}\n          </blockquote>\n        );\n\n      case CONTENT_BLOCK_TYPES.MEDIA:\n        return (\n          block.media?.data && (\n            <figure key={block.id} className=\"my-8\">\n              <img\n                src={`${STRAPI_URL}${\n                  block.media.data.attributes?.url || block.media.url\n                }`}\n                alt={\n                  block.media.data.attributes?.alternativeText ||\n                  block.media.alternativeText ||\n                  \"\"\n                }\n                className=\"w-full rounded-lg shadow-lg\"\n              />\n              {(block.media.data.attributes?.caption ||\n                block.media.caption) && (\n                <figcaption className=\"text-center text-gray-600 mt-3 text-sm\">\n                  {block.media.data.attributes?.caption || block.media.caption}\n                </figcaption>\n              )}\n            </figure>\n          )\n        );\n\n      case CONTENT_BLOCK_TYPES.SLIDER:\n        return (\n          block.files?.data &&\n          block.files.data.length > 0 && (\n            <div key={block.id} className=\"my-8\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {block.files.data.map((file) => (\n                  <img\n                    key={file.id}\n                    src={`${STRAPI_URL}${file.attributes?.url || file.url}`}\n                    alt={\n                      file.attributes?.alternativeText ||\n                      file.alternativeText ||\n                      \"\"\n                    }\n                    className=\"w-full h-48 object-cover rounded-lg shadow-md\"\n                  />\n                ))}\n              </div>\n            </div>\n          )\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return \"\";\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    });\n  };\n\n  const getTitle = (content) => {\n    return content[\"5cNetwork\"] || content.title || \"Untitled\";\n  };\n\n  const getDescription = (content) => {\n    return content[\"5cNetworkDescription\"] || content.description || \"\";\n  };\n\n  if (loading) {\n    return (\n      <>\n        <div>\n          <header>\n            <Navbar />\n          </header>\n        </div>\n        <div className=\"w-full flex flex-col justify-center items-center pt-[90px] min-h-screen\">\n          <div className=\"flex justify-center items-center min-h-[400px]\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-[#1B3366]\"></div>\n          </div>\n        </div>\n        <footer>\n          <Footer />\n        </footer>\n      </>\n    );\n  }\n\n  if (error || !content) {\n    return (\n      <>\n        <div>\n          <header>\n            <Navbar />\n          </header>\n        </div>\n        <div className=\"w-full flex flex-col justify-center items-center pt-[90px] min-h-screen\">\n          <div className=\"text-center text-red-500 min-h-[400px] flex items-center justify-center\">\n            <div>\n              <h2 className=\"text-2xl font-bold mb-4\">Error</h2>\n              <p>{error || \"Content not found\"}</p>\n              <button\n                className=\"mt-4 px-4 py-2 bg-[#1B3366] text-white rounded hover:bg-blue-700 transition-colors\"\n                onClick={() => navigate(-1)}\n              >\n                ← Back\n              </button>\n            </div>\n          </div>\n        </div>\n        <footer>\n          <Footer />\n        </footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <div>\n        <header>\n          <Navbar />\n        </header>\n      </div>\n      <div className=\"w-full flex flex-col justify-center items-center pt-[90px] pb-[20px]\">\n        <div className=\"w-full max-w-4xl mx-auto px-4 md:px-8\">\n          <button\n            className=\"mb-6 px-4 py-2 text-[#1B3366] border border-[#1B3366] rounded hover:bg-[#1B3366] hover:text-white transition-colors\"\n            onClick={() => navigate(-1)}\n          >\n            ← Back\n          </button>\n\n          {/* Article Header */}\n          <div className=\"mb-8\">\n            <div className=\"flex items-center gap-4 mb-4\">\n              {content.category && (\n                <span className=\"px-3 py-1 bg-[#1B3366] text-white text-sm rounded-full\">\n                  {content.category.name}\n                </span>\n              )}\n              <span className=\"text-gray-600 text-sm\">\n                {formatDate(content.publishedAt)}\n              </span>\n              {content.author && (\n                <span className=\"text-gray-600 text-sm\">\n                  By {content.author.name}\n                </span>\n              )}\n            </div>\n\n            <h1 className=\"text-3xl md:text-4xl lg:text-5xl font-bold text-gray-900 leading-tight mb-6\">\n              {getTitle(content)}\n            </h1>\n\n            {getDescription(content) && (\n              <p className=\"text-xl text-gray-600 leading-relaxed mb-8\">\n                {getDescription(content)}\n              </p>\n            )}\n          </div>\n\n          {/* Cover Image */}\n          {content.cover && (\n            <div className=\"mb-8\">\n              <img\n                src={`${STRAPI_URL}${\n                  content.cover.formats?.large?.url || content.cover.url\n                }`}\n                alt={content.cover.alternativeText || getTitle(content)}\n                className=\"w-full h-[300px] md:h-[400px] object-cover rounded-lg shadow-lg\"\n              />\n            </div>\n          )}\n\n          {/* Content Blocks */}\n          <div className=\"prose prose-lg max-w-none\">\n            {content.blocks?.map((block) => renderContentBlock(block))}\n          </div>\n\n          {/* Back Button */}\n          <div className=\"text-center mt-12\">\n            <button\n              className=\"px-6 py-3 bg-[#1B3366] text-white rounded hover:bg-blue-700 transition-colors\"\n              onClick={() => navigate(config.backRoute)}\n            >\n              {config.backLabel}\n            </button>\n          </div>\n        </div>\n      </div>\n      <footer>\n        <Footer />\n      </footer>\n    </>\n  );\n}\n\nexport default UniversalContentDetail;\n"],"names":["CONTENT_BLOCK_TYPES","CONTENT_TYPE_CONFIG","blogs","collection","COLLECTION_TYPES","ARTICLES","backRoute","backLabel","CASE_STUDIES","newsroom","NEWSROOM","_content$cover$format","_content$cover$format2","_content$blocks","location","useLocation","searchParams","URLSearchParams","search","pathSegments","pathname","split","filter","Boolean","slug","length","contentType","get","includes","config","console","log","data","content","loading","error","useStrapiItem","getTitle","title","getDescription","description","React","Navbar","className","Footer","onClick","navigate","category","name","dateString","Date","toLocaleDateString","year","month","day","formatDate","publishedAt","author","cover","src","STRAPI_URL","formats","large","url","alt","alternativeText","blocks","map","block","_block$media","_block$media$data$att","_block$media$data$att2","_block$media$data$att3","_block$media$data$att4","_block$files","__component","key","id","dangerouslySetInnerHTML","__html","body","media","attributes","caption","files","file","_file$attributes","_file$attributes2","renderContentBlock"],"sourceRoot":""}