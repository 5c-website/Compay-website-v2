{"version":3,"file":"1c16e919545e02653c6fa27daa8463d858f4c665-85c0e6b0a1fafdb5578b.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://gatsby-starter-default/./public/img/sign_in/client.png","webpack://gatsby-starter-default/./public/img/sign_in/rads.png","webpack://gatsby-starter-default/./src/components/SignInModal.jsx","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://gatsby-starter-default/./node_modules/motion-utils/dist/es/noop.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://gatsby-starter-default/./node_modules/motion-utils/dist/es/memo.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/animation/controls/Group.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/utils/supports/flags.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/utils/supports/memo.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/gestures/hover.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/gestures/press/index.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","webpack://gatsby-starter-default/./node_modules/lucide-react/dist/esm/icons/chevron-down.js","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://gatsby-starter-default/./src/components/Navbar.jsx","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://gatsby-starter-default/./node_modules/motion-utils/dist/es/progress.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://gatsby-starter-default/./node_modules/motion-utils/dist/es/time-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://gatsby-starter-default/./node_modules/motion-utils/dist/es/errors.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","export default __webpack_public_path__ + \"static/client-c5a273c6cc5933899745a3ea0b736968.png\";","export default __webpack_public_path__ + \"static/rads-3e49dff6b62b85ebd475f507e46da6dc.png\";","import React from \"react\";\nimport clientImage from \"../../public/img/sign_in/client.png\";\nimport radImage from \"../../public/img/sign_in/rads.png\";\n\nconst SignInModal = () => {\n  return (\n    <div className=\"bg-white rounded-lg p-4 sm:p-8 w-full max-w-md sm:max-w-2xl\">\n      <div className=\"flex gap-8 flex-col sm:flex-row justify-between sm:space-x-8 space-y-8 sm:space-y-0\">\n        <div\n          className=\"flex flex-col items-center cursor-pointer group\"\n          onClick={() => window.open(\"https://client.5cnetwork.com\", \"_blank\")}\n        >\n          <div className=\"w-36 h-36 sm:w-48 sm:h-48 bg-white-200 rounded-full flex items-center justify-center mb-4 overflow-hidden transition-transform duration-300 ease-in-out group-hover:scale-110\">\n            <img\n              src={clientImage}\n              alt=\"Hospital icon\"\n              className=\"w-28 h-18 sm:w-36 sm:h-36 transition-transform duration-300 ease-in-out group-hover:scale-110\"\n            />\n          </div>\n          <p className=\"text-center font-semibold text-sm sm:text-base\">\n            HOSPITAL/DIAGNOSTIC CENTRE\n          </p>\n        </div>\n\n        <div\n          className=\"flex flex-col items-center cursor-pointer group\"\n          onClick={() => window.open(\"https://rads.5cnetwork.com\", \"_blank\")}\n        >\n          <div className=\"w-36 h-36 sm:w-48 sm:h-48 bg-white-200 rounded-full flex items-center justify-center mb-4 overflow-hidden transition-transform duration-300 ease-in-out group-hover:scale-110\">\n            <img\n              src={radImage}\n              alt=\"Radiologist icon\"\n              className=\"w-28 h-28 sm:w-36 sm:h-36 transition-transform duration-300 ease-in-out group-hover:scale-110\"\n            />\n          </div>\n          <p className=\"text-center font-semibold text-sm sm:text-base\">\n            RADIOLOGIST\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignInModal;\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.18.2\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","/**\n * @license lucide-react v0.439.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ChevronDown = createLucideIcon(\"ChevronDown\", [\n  [\"path\", { d: \"m6 9 6 6 6-6\", key: \"qrunsl\" }]\n]);\n\nexport { ChevronDown as default };\n//# sourceMappingURL=chevron-down.js.map\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && (safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove());\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import React, { useState, useRef } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { Link } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport { ChevronDown } from \"lucide-react\";\nimport SignInModal from \"./SignInModal\";\nimport Helmet from \"react-helmet\";\n\nconst Navbar = ({ topClassName }) => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [dropdownOpen, setDropdownOpen] = useState(null);\n  const [showSignIn, setShowSignIn] = useState(false);\n\n  const menuRef = useRef(null);\n  const submenuRef = useRef(null);\n\n  const handleDropdownClick = (index) => {\n    setDropdownOpen(dropdownOpen === index ? null : index);\n  };\n\n  const handleMouseEnter = (index) => {\n    setDropdownOpen(index);\n  };\n\n  const handleMouseLeave = () => {\n    // setTimeout(() => {\n    console.log(\"leave function--->\");\n    if (\n      !menuRef.current?.matches(\":hover\") &&\n      !submenuRef.current?.matches(\":hover\")\n    ) {\n      setDropdownOpen(null);\n    }\n    // }, 100);\n  };\n\n  const navItems = [\n    {\n      label: \"Company\",\n      subItems: [\"About Us\", \"Careers\", \"Life at-5C\"],\n      route: \"/company/about-us/\",\n    },\n    {\n      label: \"AI Products\",\n      subItems: [\n        \"Bionic Suite\",\n        \"Prodigi\",\n        \"Osteocheck\",\n        \"Kronos\",\n        \"Protocall\",\n      ],\n      route: \"/ai-products\",\n    },\n    { label: \"Borderless Radiology\", route: \"/borderless-radiology\" },\n    {\n      label: \"Impact\",\n      subItems: [\"Blogs\", \"Case Study\", \"Newsroom\"],\n      route: \"/impact/blogs\",\n    },\n    { label: \"Explore 5C\", route: \"/explore-5C\" },\n    { label: \"Contact Us\", route: \"/contact-us\" },\n  ];\n\n  const location = useLocation();\n\n  const isActiveRoute = (item) => {\n    if (item.route && location.pathname.includes(item.route)) {\n      return true;\n    }\n    if (item.subItems) {\n      return item.subItems.some((subItem) =>\n        location.pathname.includes(\n          `/${item.label.toLowerCase().replace(\" \", \"-\")}/${subItem\n            .toLowerCase()\n            .replace(\" \", \"-\")}`\n        )\n      );\n    }\n    return false;\n  };\n\n  return (\n    <>\n      <header\n        className={`bg-white shadow-sm fixed top-0 z-40 w-[100%] ${topClassName}`}\n      >\n        <Helmet>\n          <title>5C - Network</title>\n        </Helmet>\n        <div className=\"lg:mx-auto px-4 py-3 flex items-center justify-between w-[100%] lg:w-[90%]\">\n          <Link to=\"/\">\n            <motion.img\n              initial={{ opacity: 0, x: -50 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.5 }}\n              src=\"/static/logo.png\"\n              alt=\"5C Logo\"\n              className=\"h-12 md:h-[60px]\"\n            />\n          </Link>\n          <nav className=\"hidden md:flex flex-1 justify-center\">\n            <div className=\"flex md:space-x-2 lg:space-x-6\">\n              {navItems.map((item, index) => (\n                <div\n                  key={index}\n                  className=\"relative\"\n                  onMouseEnter={() => handleMouseEnter(index)}\n                  onMouseLeave={handleMouseLeave}\n                >\n                  <motion.div\n                    initial={{ opacity: 0, y: -20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.5, delay: index * 0.1 }}\n                    className={`cursor-pointer px-3 py-2 rounded ${\n                      isActiveRoute(item)\n                        ? \"bg-red-600 text-white\"\n                        : \"text-[#0D50B6]\"\n                    }`}\n                  >\n                    <Link\n                      to={item.route}\n                      className=\"text-[12px] md:text-[14px] lg:text-[16px]\"\n                    >\n                      {item.label}\n                    </Link>\n                    {item.subItems && (\n                      <ChevronDown className=\"inline h-4 w-4\" />\n                    )}\n                  </motion.div>\n                  {item.subItems && dropdownOpen === index && (\n                    <motion.div\n                      initial={{ opacity: 0, y: -20 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      transition={{ duration: 0.3 }}\n                      className=\"absolute border-2 bg-white min-w-[150px] text-center shadow-lg p-4 left-[-25px] top-[40px] 2xl:top-[40px] rounded-lg z-50\"\n                      ref={submenuRef}\n                    >\n                      <ul className=\"space-y-2\">\n                        {item.subItems.map((subItem, subIndex) => (\n                          <li key={subIndex}>\n                            <Link\n                              to={`/${item.label\n                                .toLowerCase()\n                                .replace(\" \", \"-\")}/${subItem\n                                .toLowerCase()\n                                .replace(\" \", \"-\")}`}\n                              className=\"block transition-colors duration-300 text-[#0D50B6] text-[12px] md:text-[14px] lg:text-[16px]\"\n                            >\n                              {subItem}\n                            </Link>\n                          </li>\n                        ))}\n                      </ul>\n                    </motion.div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </nav>\n\n          <div className=\"flex items-center space-x-4 md:block hidden\">\n            <motion.button\n              className=\"bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition-colors duration-300\"\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={() => setShowSignIn(true)}\n            >\n              Sign In\n            </motion.button>\n          </div>\n\n          <div className=\"md:hidden\">\n            <button\n              onClick={() => setIsMenuOpen(!isMenuOpen)}\n              className=\"text-gray-600 focus:outline-none\"\n            >\n              <svg\n                className=\"h-8 w-8\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d={\n                    isMenuOpen\n                      ? \"M6 18L18 6M6 6l12 12\"\n                      : \"M4 6h16M4 12h16M4 18h16\"\n                  }\n                />\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        {isMenuOpen && (\n          <motion.div\n            initial={{ opacity: 0, y: -20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3 }}\n            className=\"md:hidden bg-white shadow-lg p-4\"\n          >\n            <ul className=\"space-y-4\">\n              {navItems.map((item, index) => (\n                <li key={index}>\n                  <div\n                    onClick={() => handleDropdownClick(index)}\n                    className=\"flex justify-between items-center\"\n                  >\n                    <Link\n                      to={item.route}\n                      className=\"block text-gray-600 hover:text-gray-900 transition-colors duration-300\"\n                    >\n                      {item.label}\n                    </Link>\n                    {item.subItems && <ChevronDown className=\"h-4 w-4\" />}\n                  </div>\n\n                  {item.subItems && dropdownOpen === index && (\n                    <motion.ul\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      transition={{ duration: 0.3 }}\n                      className=\"mt-2 ml-4 space-y-2\"\n                    >\n                      {item.subItems.map((subItem, subIndex) => (\n                        <li key={subIndex}>\n                          <Link\n                            to={`/${item.label\n                              .toLowerCase()\n                              .replace(\" \", \"-\")}/${subItem\n                              .toLowerCase()\n                              .replace(\" \", \"-\")}`}\n                            className=\"block text-gray-600 hover:text-gray-900 transition-colors duration-300\"\n                          >\n                            {subItem}\n                          </Link>\n                        </li>\n                      ))}\n                    </motion.ul>\n                  )}\n                </li>\n              ))}\n            </ul>\n\n            {/* <div className=\"mt-4 flex flex-col space-y-2\">\n              <motion.button\n                className=\"bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition-colors duration-300\"\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                onClick={() => setShowSignIn(true)}\n              >\n                Sign In\n              </motion.button>\n            </div> */}\n          </motion.div>\n        )}\n      </header>\n\n      <AnimatePresence>\n        {showSignIn && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ duration: 0.3 }}\n            className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center\"\n            onClick={() => setShowSignIn(false)}\n          >\n            <motion.div\n              initial={{ scale: 0.9, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.9, opacity: 0 }}\n              transition={{ duration: 0.3 }}\n              onClick={(e) => e.stopPropagation()}\n            >\n              <SignInModal />\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </>\n  );\n};\n\nexport default Navbar;\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.18.2\", `Attempting to mix Motion versions ${nextValue.version} with 11.18.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["addValueToWillChange","visualElement","key","willChange","getValue","value","Boolean","add","schedule","frame","cancel","cancelFrame","state","frameData","steps","frameSteps","requestAnimationFrame","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","test","split","trim","SignInModal","React","className","onClick","window","open","src","clientImage","alt","radImage","floatRegex","combineFunctions","a","b","v","pipe","transformers","reduce","noop","any","defaultValueTypes","color","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","filter","WebkitFilter","getDefaultValueType","isKeyframesTarget","Array","isArray","dimensionValueTypes","px","vw","vh","parse","findDimensionValueType","find","testValueType","type","hsla","transform","hue","saturation","lightness","alpha","alpha$1","Math","round","addUniqueItem","arr","item","indexOf","push","removeItem","index","splice","optimizedAppearDataAttribute","transformPropOrder","transformProps","Set","clamp","min","max","SubscriptionManager","constructor","this","subscriptions","handler","notify","c","numSubscriptions","length","i","getSize","clear","number","parseFloat","scale","default","reverseEasing","easing","p","mirrorEasing","getValueState","values","forEach","get","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","singleColorRegex","isColorString","testProp","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","has","removeNonTranslationalTransform","removedTransforms","set","positionalValues","width","x","paddingLeft","paddingRight","height","y","paddingTop","paddingBottom","top","left","bottom","right","translateX","translateY","isNone","invalidTemplates","splitCSSVariableRegex","getVariableValue","element","depth","fallback","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","DOMKeyframesResolver","unresolvedKeyframes","onComplete","name","motionValue","super","readKeyframes","keyframe","finalKeyframe","resolveNoneKeyframes","origin","target","originType","targetType","needsMeasurement","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","measureEndState","_a","finalKeyframeIndex","unsetTransformName","unsetTransformValue","rgbUnit","clampRgbUnit","rgba","red","green","blue","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","backOut","backIn","reverse","backInOut","mirror","anticipate","pow","isAnimatable","complex","isNotNull","getFinalKeyframe","keyframes","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","options","isStopped","hasAttemptedResolve","createdAt","now","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","duration","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","ease","Promise","hueToRgb","q","mixImmediate","mixLinearColor","from","to","fromExpo","expo","sqrt","colorTypes","hex","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber","getMixer","mixComplex","mixArray","mixObject","output","numValues","blendValue","map","template","createTransformer","originStats","targetStats","indexes","var","mixVisibility","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","d","e","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","visualDuration","restSpeed","restDelta","done","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","generator","calculatedDuration","next","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toString","progress","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","easingLookup","linear","circIn","circInOut","circOut","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","update","passTimestamp","timestamp","start","stop","isProcessing","generators","decay","tween","percentToProgress","percent","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","resolver","teardown","onStop","KeyframeResolver$1","KeyframeResolver","scheduleResolve","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","time","newTime","driver","newSpeed","hasChanged","isScheduled","resume","onPlay","complete","stopDriver","acceleratedValues","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","animation","valueName","keyframeOptions","animate","iterations","direction","startWaapiAnimation","pendingTimeline","onfinish","playbackRate","playState","attachTimeline","timeline","sampleTime","setWithVelocity","supports","HTMLElement","transformTemplate","getProps","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","transition","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","memo","callback","getOptimisedAppearId","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","replace","parsedValue","parseComplexValue","source","numSections","sanitize","convertNumbersToZero","_b","getAnimatableNone","parsed","transformer","clearTime","useManualTiming","performance","queueMicrotask","MotionGlobalConfig","setMotionValue","hasValue","addValue","setTarget","transitionEnd","resolveVariant","collectMotionValues","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","render","updatedAt","setPrevFrameValue","prev","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","read","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","toResolve","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","elementsToMeasure","transformsToRestore","Map","restore","scrollTo","readAllKeyframes","flushKeyframeResolvers","isAsync","isComplete","resolveKeyframes","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","delete","acos","supportsScrollTimeline","ScrollTimeline","animations","runAll","finished","all","getAll","propName","setAll","newValue","methodName","controls","GroupPlaybackControls","onResolve","onReject","catch","maxGeneratorDuration","calcGeneratorDuration","Infinity","isBezierDefinition","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","opacity","generateLinearEasing","resolution","points","numPoints","substring","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","segmentEasing","isDragging","isDragActive","setupGesture","elementOrSelector","elements","scope","selectorCache","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","filterEvents","event","pointerType","hover","onHoverStart","eventOptions","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","removeEventListener","addEventListener","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","WeakSet","firePointerEvent","dispatchEvent","PointerEvent","bubbles","enableKeyboardPress","focusEvent","currentTarget","handleKeydown","handleKeyup","isValidPressEvent","press","onPressStart","cancelEvents","startPress","startEvent","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","tagName","tabIndex","isElementKeyboardAccessible","getAttribute","setDragLock","axis","ChevronDown","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","r","parseInt","createUnitType","unit","endsWith","degrees","progressPercentage","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","originX","originY","originZ","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueType","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","PopChildMeasure","getSnapshotBeforeUpdate","prevProps","childRef","isPresent","sizeRef","offsetHeight","offsetWidth","offsetTop","offsetLeft","componentDidUpdate","children","PopChild","id","useId","ref","useRef","nonce","useContext","useInsertionEffect","dataset","motionPopId","style","head","appendChild","sheet","insertRule","removeChild","jsx","PresenceChild","initial","onExitComplete","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","memoizedOnExitComplete","useCallback","childId","context","useMemo","register","random","_","PresenceContext","Provider","getChildKey","onlyElements","filtered","Children","isValidElement","AnimatePresence","propagate","isParentPresent","safeToRemove","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","includes","join","exitingChildren","nextChildren","forceRender","LayoutGroupContext","L","Fragment","isEveryExitComplete","isExitComplete","_ref","topClassName","isMenuOpen","setIsMenuOpen","dropdownOpen","setDropdownOpen","showSignIn","setShowSignIn","menuRef","submenuRef","handleMouseLeave","_menuRef$current","_submenuRef$current","console","log","matches","navItems","label","subItems","route","location","useLocation","isActiveRoute","pathname","subItem","toLowerCase","Helmet","Link","motion","img","onMouseEnter","handleMouseEnter","onMouseLeave","div","subIndex","whileHover","whileTap","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","handleDropdownClick","ul","exit","stopPropagation","positionalKeys","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","args","_target","isAnimationControls","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","prop","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createState","buildResolvedTypeValues","acc","presenceContext","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","protectedKeys","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","needsAnimating","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","variantChildren","animationState","setAnimateFunction","makeAnimator","getState","reset","createTypeState","whileInView","whileDrag","whileFocus","Feature","node","isMounted","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","unmount","arguments","prevIsPresent","prevPresenceContext","exitAnimation","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","calcLength","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","postRender","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","sort","timeout","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","circ","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","latestValues","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","appearId","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","shouldReduceMotion","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","process","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","globalTapTarget","focus","onFocus","isFocusVisible","onBlur","LazyContext","strict","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","lowercaseSVGElements","isSVGComponent","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","renderState","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","valueTarget","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","vars","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createHtmlRenderState","createSvgRenderState","tag","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","isForcedMotionValue","newValues","charAt","layoutProps","svgMotionConfig","needsMeasure","getBBox","updateSVGDimensions","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","sortNodePosition","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","variant","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","toFromDifference","velocityPerSecond","frameDuration","isZeroValueString","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","isCustomValue","resolveFinalValueInKeyframes","shouldBlockAnimation","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","MotionHandoffAnimation","animateVariant","getAnimation","getChildAnimations","forwardDelay","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","animateVisualElement","resolvedDefinition","camelToDash","str","warning","invariant","isBrowser","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","flagRunNextFrame","thisFrame","nextFrame","flushNextFrame","toKeepAlive","latestFrameData","triggerCallback","step","keepAlive","immediate","queue","createRenderStep","processBatch","useConstant","usePresence","isNumericalString","isMotionValue"],"sourceRoot":""}