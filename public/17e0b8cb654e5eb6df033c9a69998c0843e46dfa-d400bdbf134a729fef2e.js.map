{"version":3,"file":"17e0b8cb654e5eb6df033c9a69998c0843e46dfa-d400bdbf134a729fef2e.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://gatsby-starter-default/./node_modules/lucide-react/dist/esm/icons/chevron-down.js","webpack://gatsby-starter-default/./src/components/Navbar.jsx","webpack://gatsby-starter-default/./public/img/sign_in/client.png","webpack://gatsby-starter-default/./public/img/sign_in/rads.png","webpack://gatsby-starter-default/./src/components/SignInModal.jsx","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, exitBeforeEnter, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = presentChildren === renderedChildren ||\n                presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","/**\n * @license lucide-react v0.439.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ChevronDown = createLucideIcon(\"ChevronDown\", [\n  [\"path\", { d: \"m6 9 6 6 6-6\", key: \"qrunsl\" }]\n]);\n\nexport { ChevronDown as default };\n//# sourceMappingURL=chevron-down.js.map\n","import React, { useState, useRef } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { Link } from \"gatsby\";\nimport { useLocation } from \"@reach/router\";\nimport { ChevronDown } from \"lucide-react\";\nimport SignInModal from \"./SignInModal\";\nimport Helmet from \"react-helmet\";\n\nconst Navbar = ({topClassName}) => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [dropdownOpen, setDropdownOpen] = useState(null);\n  const [showSignIn, setShowSignIn] = useState(false);\n\n  const menuRef = useRef(null);\n  const submenuRef = useRef(null);\n\n  const handleDropdownClick = (index) => {\n    setDropdownOpen(dropdownOpen === index ? null : index);\n  };\n\n  const handleMouseEnter = (index) => {\n    setDropdownOpen(index);\n  };\n\n  const handleMouseLeave = () => {\n    // setTimeout(() => {\n    console.log(\"leave function--->\");\n    if (\n      !menuRef.current?.matches(\":hover\") &&\n      !submenuRef.current?.matches(\":hover\")\n    ) {\n      setDropdownOpen(null);\n    }\n    // }, 100);\n  };\n\n  const navItems = [\n    {\n      label: \"Company\",\n      subItems: [\"About Us\", \"Careers\", \"Life at-5C\"],\n      route: \"/company/about-us/\",\n    },\n    {\n      label: \"AI Products\",\n      subItems: [\n        \"Bionic Suite\",\n        \"Prodigi\",\n        \"Osteocheck\",\n        \"Kronos\",\n        \"Protocall\",\n      ],\n      route: \"/ai-products\",\n    },\n    { label: \"Borderless Radiology\", route: \"/borderless-radiology\" },\n    {\n      label: \"Impact\",\n      subItems: [\"Blogs\", \"Case Study\", \"Newsroom\"],\n      route: \"/impact/blogs\",\n    },\n    { label: \"Contact Us\", route: \"/contact-us\" },\n  ];\n\n  const location = useLocation();\n\n  const isActiveRoute = (item) => {\n    if (item.route && location.pathname.includes(item.route)) {\n      return true;\n    }\n    if (item.subItems) {\n      return item.subItems.some((subItem) =>\n        location.pathname.includes(\n          `/${item.label.toLowerCase().replace(\" \", \"-\")}/${subItem\n            .toLowerCase()\n            .replace(\" \", \"-\")}`\n        )\n      );\n    }\n    return false;\n  };\n\n  return (\n    <>\n      <header className={`bg-white shadow-sm fixed top-0 z-40 w-[100%] ${topClassName}`}>\n        <Helmet>\n          <title>5C - Network</title>\n        </Helmet>\n        <div className=\"lg:mx-auto px-4 py-3 flex items-center justify-between w-[100%] lg:w-[90%]\">\n          <Link to=\"/\">\n            <motion.img\n              initial={{ opacity: 0, x: -50 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.5 }}\n              src=\"../../static/logo.png\"\n              alt=\"5C Logo\"\n              className=\"h-12 md:h-[60px]\"\n            />\n          </Link>\n          <nav className=\"hidden md:flex flex-1 justify-center\">\n            <div className=\"flex md:space-x-2 lg:space-x-6\">\n              {navItems.map((item, index) => (\n                <div\n                  key={index}\n                  className=\"relative\"\n                  onMouseEnter={() => handleMouseEnter(index)}\n                  onMouseLeave={handleMouseLeave}\n                >\n                  <motion.div\n                    initial={{ opacity: 0, y: -20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.5, delay: index * 0.1 }}\n                    className={`cursor-pointer px-3 py-2 rounded ${\n                      isActiveRoute(item)\n                        ? \"bg-red-600 text-white\"\n                        : \"text-[#0D50B6]\"\n                    }`}\n                  >\n                    <Link\n                      to={item.route}\n                      className=\"text-[12px] md:text-[14px] lg:text-[16px]\"\n                    >\n                      {item.label}\n                    </Link>\n                    {item.subItems && (\n                      <ChevronDown className=\"inline h-4 w-4\" />\n                    )}\n                  </motion.div>\n                  {item.subItems && dropdownOpen === index && (\n                    <motion.div\n                      initial={{ opacity: 0, y: -20 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      transition={{ duration: 0.3 }}\n                      className=\"absolute border-2 bg-white min-w-[150px] text-center shadow-lg p-4 left-[-25px] top-[40px] 2xl:top-[40px] rounded-lg z-50\"\n                      ref={submenuRef}\n                    >\n                      <ul className=\"space-y-2\">\n                        {item.subItems.map((subItem, subIndex) => (\n                          <li key={subIndex}>\n                            <Link\n                              to={`/${item.label\n                                .toLowerCase()\n                                .replace(\" \", \"-\")}/${subItem\n                                .toLowerCase()\n                                .replace(\" \", \"-\")}`}\n                              className=\"block transition-colors duration-300 text-[#0D50B6] text-[12px] md:text-[14px] lg:text-[16px]\"\n                            >\n                              {subItem}\n                            </Link>\n                          </li>\n                        ))}\n                      </ul>\n                    </motion.div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </nav>\n\n          <div className=\"flex items-center space-x-4 md:block hidden\">\n            <motion.button\n              className=\"bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition-colors duration-300\"\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={() => setShowSignIn(true)}\n            >\n              Sign In\n            </motion.button>\n          </div>\n\n          <div className=\"md:hidden\">\n            <button\n              onClick={() => setIsMenuOpen(!isMenuOpen)}\n              className=\"text-gray-600 focus:outline-none\"\n            >\n              <svg\n                className=\"h-8 w-8\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth=\"2\"\n                  d={\n                    isMenuOpen\n                      ? \"M6 18L18 6M6 6l12 12\"\n                      : \"M4 6h16M4 12h16M4 18h16\"\n                  }\n                />\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        {isMenuOpen && (\n          <motion.div\n            initial={{ opacity: 0, y: -20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3 }}\n            className=\"md:hidden bg-white shadow-lg p-4\"\n          >\n            <ul className=\"space-y-4\">\n              {navItems.map((item, index) => (\n                <li key={index}>\n                  <div\n                    onClick={() => handleDropdownClick(index)}\n                    className=\"flex justify-between items-center\"\n                  >\n                    <Link\n                      to={item.route}\n                      className=\"block text-gray-600 hover:text-gray-900 transition-colors duration-300\"\n                    >\n                      {item.label}\n                    </Link>\n                    {item.subItems && <ChevronDown className=\"h-4 w-4\" />}\n                  </div>\n\n                  {item.subItems && dropdownOpen === index && (\n                    <motion.ul\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      transition={{ duration: 0.3 }}\n                      className=\"mt-2 ml-4 space-y-2\"\n                    >\n                      {item.subItems.map((subItem, subIndex) => (\n                        <li key={subIndex}>\n                          <Link\n                            to={`/${item.label\n                              .toLowerCase()\n                              .replace(\" \", \"-\")}/${subItem\n                              .toLowerCase()\n                              .replace(\" \", \"-\")}`}\n                            className=\"block text-gray-600 hover:text-gray-900 transition-colors duration-300\"\n                          >\n                            {subItem}\n                          </Link>\n                        </li>\n                      ))}\n                    </motion.ul>\n                  )}\n                </li>\n              ))}\n            </ul>\n\n            {/* <div className=\"mt-4 flex flex-col space-y-2\">\n              <motion.button\n                className=\"bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition-colors duration-300\"\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n                onClick={() => setShowSignIn(true)}\n              >\n                Sign In\n              </motion.button>\n            </div> */}\n          </motion.div>\n        )}\n      </header>\n\n      <AnimatePresence>\n        {showSignIn && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ duration: 0.3 }}\n            className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center\"\n            onClick={() => setShowSignIn(false)}\n          >\n            <motion.div\n              initial={{ scale: 0.9, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0.9, opacity: 0 }}\n              transition={{ duration: 0.3 }}\n              onClick={(e) => e.stopPropagation()}\n            >\n              <SignInModal />\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </>\n  );\n};\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/client-c5a273c6cc5933899745a3ea0b736968.png\";","export default __webpack_public_path__ + \"static/rads-3e49dff6b62b85ebd475f507e46da6dc.png\";","import React from \"react\";\nimport clientImage from \"../../public/img/sign_in/client.png\";\nimport radImage from \"../../public/img/sign_in/rads.png\";\n\nconst SignInModal = () => {\n  return (\n    <div className=\"bg-white rounded-lg p-4 sm:p-8 w-full max-w-md sm:max-w-2xl\">\n      <div className=\"flex gap-8 flex-col sm:flex-row justify-between sm:space-x-8 space-y-8 sm:space-y-0\">\n        <div\n          className=\"flex flex-col items-center cursor-pointer group\"\n          onClick={() => window.open(\"https://client.5cnetwork.com\", \"_blank\")}\n        >\n          <div className=\"w-36 h-36 sm:w-48 sm:h-48 bg-white-200 rounded-full flex items-center justify-center mb-4 overflow-hidden transition-transform duration-300 ease-in-out group-hover:scale-110\">\n            <img\n              src={clientImage}\n              alt=\"Hospital icon\"\n              className=\"w-28 h-18 sm:w-36 sm:h-36 transition-transform duration-300 ease-in-out group-hover:scale-110\"\n            />\n          </div>\n          <p className=\"text-center font-semibold text-sm sm:text-base\">\n            HOSPITAL/DIAGNOSTIC CENTRE\n          </p>\n        </div>\n\n        <div\n          className=\"flex flex-col items-center cursor-pointer group\"\n          onClick={() => window.open(\"https://rads.5cnetwork.com\", \"_blank\")}\n        >\n          <div className=\"w-36 h-36 sm:w-48 sm:h-48 bg-white-200 rounded-full flex items-center justify-center mb-4 overflow-hidden transition-transform duration-300 ease-in-out group-hover:scale-110\">\n            <img\n              src={radImage}\n              alt=\"Radiologist icon\"\n              className=\"w-28 h-28 sm:w-36 sm:h-36 transition-transform duration-300 ease-in-out group-hover:scale-110\"\n            />\n          </div>\n          <p className=\"text-center font-semibold text-sm sm:text-base\">\n            RADIOLOGIST\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignInModal;\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { progress } from '../../../../utils/progress.mjs';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { generateLinearEasing } from '../../animators/waapi/utils/linear.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 * clamp(0.05, 1, 1 - options.bounce) * Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.12.0\", `Attempting to mix Motion versions ${nextValue.version} with 11.12.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.12.0\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["PopChildMeasure","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","current","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","jsx","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","memoizedOnExitComplete","useCallback","childId","set","isComplete","values","context","useMemo","register","delete","Math","random","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","AnimatePresence","exitBeforeEnter","presentChildren","presentKeys","map","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","i","length","includes","get","join","exitingChildren","nextChildren","splice","forceRender","LayoutGroupContext","L","Fragment","undefined","has","isEveryExitComplete","isExitComplete","ChevronDown","d","_ref","topClassName","isMenuOpen","setIsMenuOpen","dropdownOpen","setDropdownOpen","showSignIn","setShowSignIn","menuRef","submenuRef","handleMouseLeave","_menuRef$current","_submenuRef$current","console","log","matches","navItems","label","subItems","route","location","useLocation","isActiveRoute","item","pathname","some","subItem","toLowerCase","replace","React","className","Helmet","Link","to","motion","img","opacity","x","animate","transition","duration","src","alt","index","onMouseEnter","handleMouseEnter","onMouseLeave","div","y","delay","subIndex","button","whileHover","scale","whileTap","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","handleDropdownClick","ul","exit","e","stopPropagation","SignInModal","window","open","clientImage","radImage","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","ease","getDefaultTransition","valueKey","keyframes","transform","startsWith","sqrt","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","filter","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","backOut","backIn","reverse","backInOut","mirror","anticipate","p","pow","isGenerator","isAnimatable","name","Array","isArray","complex","test","canAnimate","velocity","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","BaseAnimation","constructor","autoplay","repeatDelay","options","isStopped","hasAttemptedResolve","createdAt","now","updateFinishedPromise","calcStartTime","resolvedAt","resolved","_resolved","onKeyframesResolved","onComplete","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","Promise","generateLinearEasing","easing","resolution","points","numPoints","max","round","progress","substring","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","default","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","clamp","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","maxGeneratorDuration","calcGeneratorDuration","generator","state","next","done","Infinity","durationKeys","physicsKeys","isSpringType","keys","spring","optionsOrVisualDuration","visualDuration","restDelta","origin","target","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toString","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","v","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isBezierDefinition","easingLookup","linear","circIn","circInOut","circOut","easingDefinitionToFunction","definition","x1","y1","x2","y2","hueToRgb","q","mixImmediate","mixLinearColor","from","fromExpo","expo","colorTypes","hex","rgba","hsla","asRGBA","color","find","Boolean","model","parse","hue","saturation","lightness","alpha","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","Set","mixNumber","getMixer","mixComplex","mixArray","mixObject","output","numValues","blendValue","template","createTransformer","originStats","targetStats","indexes","var","number","mixVisibility","pipe","_a","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","update","passTimestamp","timestamp","start","stop","isProcessing","generators","decay","tween","percentToProgress","percent","MainThreadAnimation","super","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","resolver","cancel","teardown","onStop","motionValue","KeyframeResolver$1","KeyframeResolver","scheduleResolve","Object","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","time","newTime","driver","newSpeed","hasChanged","isScheduled","resume","onPlay","complete","stopDriver","acceleratedValues","memo","callback","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","attachTimeline","animation","timeline","onfinish","supportsWaapi","hasOwnProperty","call","Element","prototype","unsupportedEasingFunctions","AcceleratedAnimation","DOMKeyframesResolver","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","setWithVelocity","supports","HTMLElement","getProps","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","fallback","subscriptions","methodName","controls","animateMotionValue","isHandoff","valueTransition","getVelocity","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","visualElement","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","getValue","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","notify","animateChildren","first","last","sortNodePosition","animateVisualElement","resolvedDefinition","optimizedAppearDataAttribute","getOptimisedAppearId","getValueTransition","isKeyframesTarget","createContext","transformPagePoint","isStatic","reducedMotion","acos","mirrorEasing","reverseEasing","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","step","schedule","keepAlive","immediate","queue","add","process","frameData","clear","createRenderStep","read","resolveKeyframes","preRender","postRender","processBatch","useManualTiming","performance","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","queueMicrotask","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","args","_target","isAnimationControls","shallowCompare","prev","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","parent","prop","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createState","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileDrag","whileFocus","Feature","node","isMounted","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","unmount","arguments","prevIsPresent","prevPresenceContext","exitAnimation","isPrimaryPointer","event","pointerType","isPrimary","extractEventInfo","pointType","point","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","addPointerEvent","addPointerInfo","distance","PanSession","handlers","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","isRefObject","calcLength","axis","calcAxisDelta","source","originPoint","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","createBox","eachAxis","convertBoundingBoxToBox","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","has2DTranslate","z","rotate","rotateX","rotateY","skewX","skewY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","measureViewportBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","parseFloat","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","px","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useEffect","usePresence","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","circ","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","depth","FlatTree","isDirty","resolveMotionValue","unwrappedValue","toValue","timeout","checkElapsed","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","rotateZ","resetValues","getProjectionStyles","styleProp","_b","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","addHoverEvent","callbackName","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","onTapStart","removePointerListener","removeFocusListener","focus","onFocus","isFocusVisible","onBlur","hover","MotionContext","LazyContext","strict","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","useMotionRef","externalRef","isVariantNode","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","layoutGroupId","lowercaseSVGElements","isSVGComponent","indexOf","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","charAt","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","trim","buildTransform","originZ","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","willChange","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","addValue","hasValue","existingValue","jump","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","getPropertyValue","childSubscription","textContent","SVGVisualElement","getAttribute","splitCSSVariableRegex","getVariableValue","token","match","exec","token1","token2","parseCSSVariable","trimmed","invalidTemplates","unresolvedKeyframes","readKeyframes","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","measureKeyframe","measureEndState","finalKeyframeIndex","removedTransforms","unsetTransformName","unsetTransformValue","camelToDash","str","checkStringStartsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","positionalValues","paddingLeft","paddingRight","paddingTop","paddingBottom","translateX","translateY","getAnimatableNone","defaultValueType","defaultValueTypes","backgroundColor","outlineColor","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","dimensionValueTypes","vw","vh","findDimensionValueType","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","scaleZ","skew","translateZ","perspective","numberValueTypes","zIndex","fillOpacity","strokeOpacity","numOctaves","testValueType","transformPropOrder","transformProps","toResolve","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","elementsToMeasure","transformsToRestore","restore","scrollTo","readAllKeyframes","flushKeyframeResolvers","isAsync","currentValue","valueAsRead","setFinalKeyframe","renderEndStyles","resolveVariant","getValueState","resolveVariantFromProps","setMotionValue","setTarget","MotionGlobalConfig","addUniqueItem","removeItem","warning","invariant","isBrowser","isNumericalString","isZeroValueString","any","combineFunctions","transformers","toFromDifference","isCustomValue","resolveFinalValueInKeyframes","SubscriptionManager","numSubscriptions","getSize","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","useConstant","init","useIsomorphicLayoutEffect","useLayoutEffect","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","r","parseInt","alpha$1","rgbUnit","clampRgbUnit","singleColorRegex","isColorString","testProp","isNullish","splitColor","aName","bName","cName","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","parsedValue","parseComplexValue","numSections","sanitize","convertNumbersToZero","parsed","transformer","createUnitType","endsWith","degrees","progressPercentage","floatRegex","addValueToWillChange","isMotionValue"],"sourceRoot":""}