{"version":3,"file":"component---src-pages-impact-blogs-jsx-0ca0f8bdc80e19d3624e.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/CompanyBanner.jsx","webpack://gatsby-starter-default/./public/img/impact/blog_banner.png","webpack://gatsby-starter-default/./src/utils/contentUtils.js","webpack://gatsby-starter-default/./src/hooks/useContentGrid.js","webpack://gatsby-starter-default/./src/components/ContentGridComponent.jsx","webpack://gatsby-starter-default/./src/pages/impact/blogs.jsx"],"sourcesContent":["import React from \"react\";\nimport { motion } from \"framer-motion\";\n\nconst CompanyBanner = ({\n  img,\n  heading,\n  description,\n  containerClassName,\n  contentClassName,\n  headerClassName,\n  descriptionClassName,\n}) => {\n  return (\n    <div\n      className={`min-h-[26vh] md:h-[45vh] w-[100%] bg-cover bg-center rounded-xl flex flex-col justify-center ${containerClassName}`}\n      style={{\n        backgroundImage: `url(${img})`,\n      }}\n    >\n      <div\n        className={`h-[200px] md:w-[41%] md:ml-[80px] p-3 md:p-0 mt-4 md:mt-0 ${contentClassName}`}\n      >\n        <motion.h1\n          className={`text-[#fff] text-[20px] md:text-[32px] font-bold ${headerClassName} `}\n          initial={{ opacity: 0, x: -50 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ duration: 0.8 }}\n        >\n          {heading}\n        </motion.h1>\n        <motion.p\n          className={`text-[#fff] text-12px md:text-[24px] mt-2 ${descriptionClassName}`}\n          // ${isMobile ? \"text-center w-full\" : \"\"}`}\n          initial={{ opacity: 0, x: -50 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ duration: 0.8, delay: 0.2 }}\n        >\n          {description}\n        </motion.p>\n      </div>\n    </div>\n  );\n};\n\nexport default CompanyBanner;\n","export default __webpack_public_path__ + \"static/blog_banner-6d0dc997151653ac5ba9381dbdd9c2d0.png\";","import { STRAPI_URL } from \"./constants\";\n\nexport const truncateText = (text, wordLimit = 15) => {\n  if (!text) return \"\";\n  const wordsArray = Array.isArray(text)\n    ? text.join(\" \").split(\" \")\n    : text.split(\" \");\n  return wordsArray.length > wordLimit\n    ? wordsArray.slice(0, wordLimit).join(\" \") + \"...\"\n    : Array.isArray(text)\n    ? text.join(\" \")\n    : text;\n};\n\nexport const getStrapiImageUrl = (item) => {\n  const cover = item.cover || item.attributes?.cover?.data?.attributes;\n  if (cover?.formats?.medium?.url)\n    return `${STRAPI_URL}${cover.formats.medium.url}`;\n  if (cover?.url) return `${STRAPI_URL}${cover.url}`;\n  return \"/img/placeholder-image.png\";\n};\n\nexport const getStrapiTitle = (item) => {\n  return (\n    item.title ||\n    item[\"5cNetwork\"] ||\n    item.attributes?.title ||\n    item.attributes?.[\"5cNetwork\"] ||\n    \"Untitled\"\n  );\n};\n\nexport const getStrapiDescription = (item) => {\n  return (\n    item.description ||\n    item[\"5cNetworkDescription\"] ||\n    item.attributes?.description ||\n    item.attributes?.[\"5cNetworkDescription\"] ||\n    \"\"\n  );\n};\n\nexport const getStrapiCategory = (item) => {\n  return (\n    item.category?.name ||\n    item.attributes?.category?.data?.attributes?.name ||\n    \"Uncategorized\"\n  );\n};\n\nexport const getStrapiSlug = (item) => {\n  return item.slug || item.attributes?.slug;\n};\n\nexport const getRedirectionURL = (item) => {\n  return item.redirectionURL || item.attributes?.redirectionURL;\n};\n\nexport const createRouteMap = (basePath = \"/impact\") => ({\n  Blogs: (slug) => `${basePath}/strapi-detail/${slug}?type=blogs`,\n  Studies: (slug) => `${basePath}/strapi-detail/${slug}?type=case-studies`,\n  Newsroom: (slug) => `${basePath}/strapi-detail/${slug}?type=newsroom`,\n  Products: (slug) => `/products/${slug}`,\n  Services: (slug) => `/services/${slug}`,\n  default: (slug) => `${basePath}/strapi-detail/${slug}?type=blogs`,\n});\n\nexport const getRouteForSection = (section, slug, basePath = \"/impact\") => {\n  const routes = createRouteMap(basePath);\n  const routeFunction = routes[section] || routes.default;\n  return routeFunction(slug);\n};\n\nexport const filterByCategory = (\n  data,\n  activeCategory,\n  defaultCategory,\n  useStrapiData = false\n) => {\n  if (activeCategory === defaultCategory) return data;\n\n  return data.filter((item) => {\n    if (useStrapiData) {\n      const categoryName = getStrapiCategory(item);\n      return categoryName === activeCategory;\n    }\n    return item.category === activeCategory;\n  });\n};\n\nexport const extractCategories = (\n  data,\n  useStrapiData = false,\n  defaultCategory = \"All\"\n) => {\n  if (!data || data.length === 0) return [defaultCategory];\n\n  const categories = [defaultCategory];\n  data.forEach((item) => {\n    const categoryName = useStrapiData\n      ? getStrapiCategory(item)\n      : item.category;\n    if (categoryName && !categories.includes(categoryName)) {\n      categories.push(categoryName);\n    }\n  });\n  return categories;\n};\n","import { useState, useEffect } from \"react\";\nimport { useLocation } from \"@reach/router\";\nimport { filterByCategory, extractCategories } from \"../utils/contentUtils\";\n\nexport const useContentGrid = ({\n  comInformation = [],\n  comCategories = [],\n  defaultCategory = \"All\",\n  useStrapiData = false,\n}) => {\n  const location = useLocation();\n  const [activeCategory, setActiveCategory] = useState(defaultCategory);\n  const [studyData, setStudyData] = useState(comInformation);\n  const [categories, setCategories] = useState(comCategories);\n\n  useEffect(() => {\n    setStudyData(comInformation);\n  }, [comInformation]);\n\n  useEffect(() => {\n    setCategories(comCategories);\n  }, [comCategories]);\n\n  const filteredData = filterByCategory(\n    studyData,\n    activeCategory,\n    defaultCategory,\n    useStrapiData\n  );\n\n  const getBasePath = () => {\n    const pathSegments = location.pathname.split(\"/\");\n    if (pathSegments.includes(\"impact\")) return \"/impact\";\n    if (pathSegments.includes(\"products\")) return \"/products\";\n    if (pathSegments.includes(\"services\")) return \"/services\";\n    return \"/impact\";\n  };\n\n  return {\n    activeCategory,\n    setActiveCategory,\n    studyData,\n    categories,\n    filteredData,\n    pathname: location.pathname,\n    getBasePath,\n  };\n};\n","import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useContentGrid } from \"../hooks/useContentGrid\";\nimport {\n  truncateText,\n  getStrapiImageUrl,\n  getStrapiTitle,\n  getStrapiDescription,\n  getStrapiCategory,\n  getStrapiSlug,\n  getRedirectionURL,\n  getRouteForSection,\n} from \"../utils/contentUtils\";\n\nconst ContentGridComponent = ({\n  comInformation = [],\n  comCategories = [],\n  section,\n  isNewsRoom = false,\n  loading = false,\n  error = null,\n  useStrapiData = false,\n  showCategories = true,\n  gridCols = \"grid-cols-1 sm:grid-cols-2 lg:grid-cols-3\",\n  cardClassName = \"bg-white shadow-md rounded-lg overflow-hidden flex flex-col transform transition duration-300 hover:scale-105 hover:shadow-xl w-full max-w-sm cursor-pointer\",\n  imageClassName = \"w-full h-40 object-cover transition duration-300 transform hover:scale-110\",\n  titleClassName = \"text-base font-semibold mb-1 text-[#1B3363] line-clamp-2\",\n  descriptionClassName = \"text-xs text-gray-600 mb-2 flex-grow\",\n  categoryClassName = \"text-xs font-medium text-[#0070C0]\",\n  readMoreClassName = \"text-xs text-[#0070C0]\",\n  onItemClick = null,\n  customImageUrl = null,\n  customTitle = null,\n  customDescription = null,\n  customCategory = null,\n}) => {\n  const {\n    activeCategory,\n    setActiveCategory,\n    studyData,\n    categories,\n    filteredData,\n    getBasePath,\n  } = useContentGrid({\n    comInformation,\n    comCategories,\n    useStrapiData,\n  });\n\n  const handleItemClick = (item) => {\n    if (onItemClick) {\n      onItemClick(item);\n      return;\n    }\n\n    if (useStrapiData) {\n      const slug = getStrapiSlug(item);\n      const redirectionURL = getRedirectionURL(item);\n      const basePath = getBasePath();\n\n      if (section === \"Newsroom\" && redirectionURL) {\n        window.location.href = redirectionURL;\n      } else {\n        const route = getRouteForSection(section, slug, basePath);\n        navigate(route);\n      }\n    } else {\n      const blogTitle = getStrapiTitle(item);\n      const blogInformation = studyData.filter(\n        (e) => getStrapiTitle(e) === blogTitle\n      );\n      const blogInfoString = encodeURIComponent(\n        JSON.stringify(blogInformation)\n      );\n      navigate(`/impact/info-blog?blogInformation=${blogInfoString}`);\n    }\n  };\n\n  const getImageUrl = (item) => {\n    if (customImageUrl) return customImageUrl(item);\n    if (useStrapiData) return getStrapiImageUrl(item);\n    return item.imageUrl || item.attributes?.imageUrl;\n  };\n\n  const getTitle = (item) => {\n    if (customTitle) return customTitle(item);\n    if (useStrapiData) return getStrapiTitle(item);\n    return item.title;\n  };\n\n  const getDescription = (item) => {\n    if (customDescription) return customDescription(item);\n    if (useStrapiData) return getStrapiDescription(item);\n    return Array.isArray(item.description)\n      ? item.description[0]\n      : item.description;\n  };\n\n  const getCategory = (item) => {\n    console.log(\"Item:\", item);\n    if (customCategory) return customCategory(item);\n    if (useStrapiData) return getStrapiCategory(item);\n    return item.category;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n        <h2 className=\"text-xl md:text-2xl font-bold mb-4\">{section}</h2>\n        <div className=\"flex justify-center items-center min-h-[400px]\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-[#1B3366]\"></div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n        <h2 className=\"text-xl md:text-2xl font-bold mb-4\">{section}</h2>\n        <div className=\"text-center text-red-500 min-h-[400px] flex items-center justify-center\">\n          <p>Error loading content: {error}</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!studyData || studyData.length === 0) {\n    return (\n      <div className=\"w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n        <h2 className=\"text-xl md:text-2xl font-bold mb-4\">{section}</h2>\n        <div className=\"text-center text-gray-500 min-h-[400px] flex items-center justify-center\">\n          <div className=\"space-y-4\">\n            <div className=\"text-6xl\">📝</div>\n            <p className=\"text-xl\">Coming Soon</p>\n            <p>Exciting content is being prepared for this section.</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n      <h2 className=\"text-xl md:text-2xl font-bold mb-4\">{section}</h2>\n      {/* {showCategories && categories.length > 0 && (\n        <div className=\"flex flex-wrap gap-2 mb-4\">\n          {categories.map((category, index) => (\n            <button\n              key={index}\n              onClick={() => setActiveCategory(category)}\n              className={`px-2 py-1 text-xs md:text-sm rounded-full border transition-all ${\n                activeCategory === category\n                  ? \"bg-[#1B3366] text-white\"\n                  : \"bg-gray-200 text-black\"\n              }`}\n            >\n              {category}\n            </button>\n          ))}\n        </div>\n      )} */}\n      <div className={`grid ${gridCols} gap-6 justify-items-center`}>\n        {filteredData.map((news, index) => (\n          <div\n            key={useStrapiData ? news.id : index}\n            className={cardClassName}\n            onClick={() => {\n              if (isNewsRoom && !useStrapiData) {\n                window.location.href = news.redirectionURL;\n              } else {\n                handleItemClick(news);\n              }\n            }}\n          >\n            <div className=\"relative overflow-hidden\">\n              <img\n                src={getImageUrl(news)}\n                alt={getTitle(news)}\n                className={imageClassName}\n                onError={(e) => {\n                  e.target.src = \"/img/placeholder-image.png\";\n                }}\n              />\n            </div>\n            <div className=\"p-3 flex flex-col flex-grow\">\n              <h3 className={titleClassName}>{getTitle(news)}</h3>\n              {!isNewsRoom && (\n                <p className={descriptionClassName}>\n                  {truncateText(getDescription(news), 15)}\n                </p>\n              )}\n              <div className=\"flex justify-between items-center mt-auto\">\n                <span className={categoryClassName}>{getCategory(news)}</span>\n                {!isNewsRoom && (\n                  <span className={readMoreClassName}>Read More</span>\n                )}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ContentGridComponent;\n","import React from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport CompanyBanner from \"../../components/CompanyBanner\";\nimport BannerImg from \"../../../public/img/impact/blog_banner.png\";\nimport Footer from \"../../components/Footer\";\nimport ContentGridComponent from \"../../components/ContentGridComponent\";\nimport { useStrapiContent } from \"../../hooks/use-strapi\";\nimport { COLLECTION_TYPES } from \"../../services/strapi\";\nimport { extractCategories } from \"../../utils/contentUtils\";\n\nfunction Blogs() {\n  const {\n    data: strapiBlogs,\n    loading,\n    error,\n  } = useStrapiContent(COLLECTION_TYPES.ARTICLES, {\n    filters: {\n      category: {\n        name: {\n          $eq: \"blogs\",\n        },\n      },\n    },\n    populate: {\n      category: true,\n      cover: true,\n      author: true,\n    },\n    sort: [\"publishedAt:desc\"],\n  });\n\n  const categoriesToShow = extractCategories(strapiBlogs, true);\n\n  return (\n    <>\n      <div>\n        <header>\n          <Navbar />\n        </header>\n      </div>\n      <div className=\"w-[100%] flex flex-col justify-center items-center pt-[90px]\">\n        {/* <div className=\"w-[100%] px-4 md:px-10\">\n          <CompanyBanner\n            img={BannerImg}\n            heading={\"Blogs\"}\n            containerClassName={\"items-center md:items-start\"}\n            contentClassName={\"flex items-center\"}\n          />\n        </div> */}\n        <div className=\"w-[100%]\">\n          <ContentGridComponent\n            section={\"Blogs\"}\n            comInformation={strapiBlogs || []}\n            comCategories={categoriesToShow}\n            isNewsRoom={false}\n            loading={loading}\n            error={error}\n            useStrapiData={true}\n            showCategories={true}\n          />\n        </div>\n      </div>\n      <footer>\n        <Footer />\n      </footer>\n    </>\n  );\n}\n\nexport default Blogs;\n"],"names":["_ref","img","heading","description","containerClassName","contentClassName","headerClassName","descriptionClassName","React","className","style","backgroundImage","motion","h1","initial","opacity","x","animate","transition","duration","p","delay","getStrapiTitle","item","_item$attributes2","_item$attributes3","title","attributes","getStrapiCategory","_item$category","_item$attributes6","_item$attributes6$cat","_item$attributes6$cat2","_item$attributes6$cat3","category","name","data","useContentGrid","comInformation","comCategories","defaultCategory","useStrapiData","location","useLocation","activeCategory","setActiveCategory","useState","studyData","setStudyData","categories","setCategories","useEffect","filteredData","filter","filterByCategory","pathname","getBasePath","pathSegments","split","includes","section","isNewsRoom","loading","error","showCategories","gridCols","cardClassName","imageClassName","titleClassName","categoryClassName","readMoreClassName","onItemClick","customImageUrl","customTitle","customDescription","customCategory","getImageUrl","_item$attributes","_item$attributes$cove","_item$attributes$cove2","_cover$formats","_cover$formats$medium","cover","formats","medium","url","STRAPI_URL","getStrapiImageUrl","imageUrl","getTitle","length","map","news","index","key","id","onClick","window","href","redirectionURL","slug","_item$attributes7","getStrapiSlug","_item$attributes8","getRedirectionURL","basePath","route","routes","Blogs","Studies","Newsroom","Products","Services","default","createRouteMap","getRouteForSection","navigate","blogTitle","blogInformation","e","blogInfoString","encodeURIComponent","JSON","stringify","handleItemClick","src","alt","onError","target","text","wordLimit","wordsArray","Array","isArray","join","slice","truncateText","_item$attributes4","_item$attributes5","getStrapiDescription","console","log","getCategory","strapiBlogs","useStrapiContent","COLLECTION_TYPES","ARTICLES","filters","$eq","populate","author","sort","categoriesToShow","forEach","categoryName","push","extractCategories","Navbar","ContentGridComponent","Footer"],"sourceRoot":""}